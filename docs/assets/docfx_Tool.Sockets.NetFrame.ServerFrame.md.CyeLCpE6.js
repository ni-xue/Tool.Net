import{_ as a,c as o,a4 as t,j as r,a as i,G as n,B as l,o as p}from"./chunks/framework.Dj_Z_6xN.js";const S=JSON.parse('{"title":"Class ServerFrame","description":"","frontmatter":{},"headers":[],"relativePath":"docfx/Tool.Sockets.NetFrame.ServerFrame.md","filePath":"zh/docfx/Tool.Sockets.NetFrame.ServerFrame.md"}'),h={name:"docfx/Tool.Sockets.NetFrame.ServerFrame.md"};function c(_,e,d,k,m,y){const s=l("xref");return p(),o("div",null,[e[1]||(e[1]=t('<h1 id="class-serverframe" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame"></a> Class ServerFrame <a class="header-anchor" href="#class-serverframe" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame&quot;&gt;&lt;/a&gt; Class ServerFrame&quot;">​</a></h1><p>Namespace: <a href="./Tool.Sockets.NetFrame.html">Tool.Sockets.NetFrame</a><br> Assembly: Tool.Net.dll</p><p>封装的一个TCP框架（服务端）</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ServerFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EnServerEventDrive</span></span></code></pre></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Tool.Sockets.Kernels.EnServerEventDrive.html">EnServerEventDrive</a> ← <a href="./Tool.Sockets.NetFrame.ServerFrame.html">ServerFrame</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="./Tool.Sockets.Kernels.EnServerEventDrive.html#Tool_Sockets_Kernels_EnServerEventDrive_OnInterceptor_Tool_Sockets_Kernels_EnServer_System_Boolean_">EnServerEventDrive.OnInterceptor(EnServer, bool)</a>, <a href="./Tool.Sockets.Kernels.EnServerEventDrive.html#Tool_Sockets_Kernels_EnServerEventDrive_OnIsQueue_Tool_Sockets_Kernels_EnServer_System_Boolean_">EnServerEventDrive.OnIsQueue(EnServer, bool)</a>, <a href="./Tool.Sockets.Kernels.EnServerEventDrive.html#Tool_Sockets_Kernels_EnServerEventDrive_IsEvent_Tool_Sockets_Kernels_EnServer_">EnServerEventDrive.IsEvent(EnServer)</a>, <a href="./Tool.Sockets.Kernels.EnServerEventDrive.html#Tool_Sockets_Kernels_EnServerEventDrive_IsQueue_Tool_Sockets_Kernels_EnServer_">EnServerEventDrive.IsQueue(EnServer)</a>, <a href="./Tool.Sockets.Kernels.EnServerEventDrive.html#Tool_Sockets_Kernels_EnServerEventDrive_OpenAllEvent">EnServerEventDrive.OpenAllEvent()</a>, <a href="./Tool.Sockets.Kernels.EnServerEventDrive.html#Tool_Sockets_Kernels_EnServerEventDrive_OpenAllQueue">EnServerEventDrive.OpenAllQueue()</a>, <a href="./Tool.Sockets.Kernels.EnServerEventDrive.html#Tool_Sockets_Kernels_EnServerEventDrive_CloseAllEvent">EnServerEventDrive.CloseAllEvent()</a>, <a href="./Tool.Sockets.Kernels.EnServerEventDrive.html#Tool_Sockets_Kernels_EnServerEventDrive_CloseAllQueue">EnServerEventDrive.CloseAllQueue()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noreferrer">object.MemberwiseClone()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h4 id="extension-methods" tabindex="-1">Extension Methods <a class="header-anchor" href="#extension-methods" aria-label="Permalink to &quot;Extension Methods&quot;">​</a></h4><p><a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Add__1_System_Object_System_Object_System_Object_">ObjectExtension.Add&lt;T&gt;(object, object, object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_CopyEntity_System_Object_System_Object_System_String___">ObjectExtension.CopyEntity(object, object, params string[])</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_">ObjectExtension.EntityToJson(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_System_Boolean_">ObjectExtension.EntityToJson(object, bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_System_Boolean_System_String_">ObjectExtension.EntityToJson(object, bool, string)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_GetDictionary_System_Object_">DictionaryExtension.GetDictionary(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey_System_Object_System_String_System_Boolean__">TypeExtension.GetFieldKey(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey__1_System_Object_System_String_System_Boolean__">TypeExtension.GetFieldKey&lt;T&gt;(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey_System_Object_System_Type_System_String_System_Boolean__">TypeExtension.GetFieldKey(object, Type, string, out bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_GetIntPtr_System_Object_">ObjectExtension.GetIntPtr(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_GetIntPtrInt_System_Object_">ObjectExtension.GetIntPtrInt(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertieFind_System_Object_System_String_System_Boolean_">TypeExtension.GetPropertieFind(object, string, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetProperties_System_Object_">TypeExtension.GetProperties(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey_System_Object_System_String_System_Boolean__">TypeExtension.GetPropertyKey(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey__1_System_Object_System_String_System_Boolean__">TypeExtension.GetPropertyKey&lt;T&gt;(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey_System_Object_System_Type_System_String_System_Boolean__">TypeExtension.GetPropertyKey(object, Type, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_ComponentModel_PropertyDescriptor_">TypeExtension.GetValue(object, PropertyDescriptor)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_String_System_Boolean_">TypeExtension.GetValue(object, string, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_String_">TypeExtension.GetValue(object, string)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Read__1_System_Object_System_Object_System_Int32_System_Int32_">ObjectExtension.Read&lt;T&gt;(object, object, int, int)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Read__1_System_Object_System_Int32_System_Object_System_Int32_System_Int32_">ObjectExtension.Read&lt;T&gt;(object, int, object, int, int)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_SetDictionary_System_Object_System_Collections_Generic_IDictionary_System_String_System_Object__">DictionaryExtension.SetDictionary(object, IDictionary&lt;string, object&gt;)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey_System_Object_System_String_System_Object_">TypeExtension.SetFieldKey(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey__1_System_Object_System_String_System_Object_">TypeExtension.SetFieldKey&lt;T&gt;(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey_System_Object_System_Type_System_String_System_Object_">TypeExtension.SetFieldKey(object, Type, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey_System_Object_System_String_System_Object_">TypeExtension.SetPropertyKey(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey__1_System_Object_System_String_System_Object_">TypeExtension.SetPropertyKey&lt;T&gt;(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey_System_Object_System_Type_System_String_System_Object_">TypeExtension.SetPropertyKey(object, Type, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_ComponentModel_PropertyDescriptor_System_Object_">TypeExtension.SetValue(object, PropertyDescriptor, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_String_System_Object_System_Boolean_">TypeExtension.SetValue(object, string, object, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_String_System_Object_">TypeExtension.SetValue(object, string, object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBase64String_System_Object_">ObjectExtension.ToBase64String(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBytes_System_Object_">ObjectExtension.ToBytes(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBytes_System_Object_System_Type__">ObjectExtension.ToBytes(object, out Type)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToDictionary_System_Object_">DictionaryExtension.ToDictionary(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToDictionary__1_System_Object_">DictionaryExtension.ToDictionary&lt;T&gt;(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToIDictionary_System_Object_">DictionaryExtension.ToIDictionary(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToIDictionary__1_System_Object_">DictionaryExtension.ToIDictionary&lt;T&gt;(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJson_System_Object_">ObjectExtension.ToJson(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJson_System_Object_System_Text_Json_JsonSerializerOptions_">ObjectExtension.ToJson(object, JsonSerializerOptions)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJsonWeb_System_Object_">ObjectExtension.ToJsonWeb(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJsonWeb_System_Object_System_Action_System_Text_Json_JsonSerializerOptions__">ObjectExtension.ToJsonWeb(object, Action&lt;JsonSerializerOptions&gt;)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToTryVar__1_System_Object___0_">ObjectExtension.ToTryVar&lt;T&gt;(object, T)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar__1_System_Object_">ObjectExtension.ToVar&lt;T&gt;(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar_System_Object_System_Type_System_Boolean_">ObjectExtension.ToVar(object, Type, bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar_System_Object_System_String_">ObjectExtension.ToVar(object, string)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToXml_System_Object_">ObjectExtension.ToXml(object)</a></p><h2 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h2><p>代码由逆血提供支持</p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="serverframe" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame__ctor"></a> ServerFrame() <a class="header-anchor" href="#serverframe" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame__ctor&quot;&gt;&lt;/a&gt; ServerFrame\\(\\)&quot;">​</a></h3><p>无参构造</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ServerFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="serverframe-netbuffersize" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame__ctor_Tool_Sockets_Kernels_NetBufferSize_"></a> ServerFrame(NetBufferSize) <a class="header-anchor" href="#serverframe-netbuffersize" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame__ctor_Tool_Sockets_Kernels_NetBufferSize_&quot;&gt;&lt;/a&gt; ServerFrame\\(NetBufferSize\\)&quot;">​</a></h3><p>初始化包</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ServerFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NetBufferSize bufferSize)</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>bufferSize</code> <a href="./Tool.Sockets.Kernels.NetBufferSize.html">NetBufferSize</a></p><p>收包规范</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="isallowrelay" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame_IsAllowRelay"></a> IsAllowRelay <a class="header-anchor" href="#isallowrelay" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame_IsAllowRelay&quot;&gt;&lt;/a&gt; IsAllowRelay&quot;">​</a></h3><p>表示服务器是否接受转发消息（默认接受）</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IsAllowRelay { get; init; }</span></span></code></pre></div><h4 id="property-value" tabindex="-1">Property Value <a class="header-anchor" href="#property-value" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><h3 id="isclose" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame_IsClose"></a> IsClose <a class="header-anchor" href="#isclose" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame_IsClose&quot;&gt;&lt;/a&gt; IsClose&quot;">​</a></h3><p>标识服务端连接是否关闭</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IsClose { get; }</span></span></code></pre></div><h4 id="property-value-1" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-1" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><h3 id="isthreadpool" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame_IsThreadPool"></a> IsThreadPool <a class="header-anchor" href="#isthreadpool" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame_IsThreadPool&quot;&gt;&lt;/a&gt; IsThreadPool&quot;">​</a></h3><p>是否使用线程池调度接收后的数据（允许使用者初始化时设置，消息是否有序获取） 默认 true 开启</p><table><tbody></tbody></table><table><tbody></tbody></table><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IsThreadPool { get; init; }</span></span></code></pre></div><h4 id="property-value-2" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-2" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><h3 id="listclient" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame_ListClient"></a> ListClient <a class="header-anchor" href="#listclient" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame_ListClient&quot;&gt;&lt;/a&gt; ListClient&quot;">​</a></h3><p>已建立连接的集合 key:ip:port value:Socket</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IReadOnlyDictionary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UserKey, Socket</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ListClient { get; }</span></span></code></pre></div><h4 id="property-value-3" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-3" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2" target="_blank" rel="noreferrer">IReadOnlyDictionary</a>&lt;<a href="./Tool.Sockets.Kernels.UserKey.html">UserKey</a>, <a href="https://learn.microsoft.com/dotnet/api/system.net.sockets.socket" target="_blank" rel="noreferrer">Socket</a>&gt;</p><h3 id="server" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame_Server"></a> Server <a class="header-anchor" href="#server" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame_Server&quot;&gt;&lt;/a&gt; Server&quot;">​</a></h3><p>服务器创建时的信息</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UserKey Server { get; }</span></span></code></pre></div><h4 id="property-value-4" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-4" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="./Tool.Sockets.Kernels.UserKey.html">UserKey</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="clientclose-ipv4port" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame_ClientClose_Tool_Sockets_Kernels_Ipv4Port_"></a> ClientClose(Ipv4Port) <a class="header-anchor" href="#clientclose-ipv4port" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame_ClientClose_Tool_Sockets_Kernels_Ipv4Port_&quot;&gt;&lt;/a&gt; ClientClose\\(Ipv4Port\\)&quot;">​</a></h3><p>关闭存在的连接用户</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ClientClose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Ipv4Port</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ipv4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>ipv4</code> <a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><p>IpV4</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>成功/失败</p><h3 id="close" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame_Close"></a> Close() <a class="header-anchor" href="#close" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame_Close&quot;&gt;&lt;/a&gt; Close\\(\\)&quot;">​</a></h3><p>关闭服务器并断开所有连接的客户端</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="send-in-ipv4port-apipacket" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame_Send_Tool_Sockets_Kernels_Ipv4Port__Tool_Sockets_NetFrame_ApiPacket_"></a> Send(in Ipv4Port, ApiPacket) <a class="header-anchor" href="#send-in-ipv4port-apipacket" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame_Send_Tool_Sockets_Kernels_Ipv4Port__Tool_Sockets_NetFrame_ApiPacket_&quot;&gt;&lt;/a&gt; Send\\(in Ipv4Port, ApiPacket\\)&quot;">​</a></h3><p>同步发送消息</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NetResponse</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Ipv4Port</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ApiPacket</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> api</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>key</code> <a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><p>发送人的IP</p><p><code>api</code> <a href="./Tool.Sockets.NetFrame.ApiPacket.html">ApiPacket</a></p><p>接口调用信息</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Tool.Sockets.NetFrame.NetResponse.html">NetResponse</a></p><h3 id="sendasync-ipv4port-apipacket" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame_SendAsync_Tool_Sockets_Kernels_Ipv4Port_Tool_Sockets_NetFrame_ApiPacket_"></a> SendAsync(Ipv4Port, ApiPacket) <a class="header-anchor" href="#sendasync-ipv4port-apipacket" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame_SendAsync_Tool_Sockets_Kernels_Ipv4Port_Tool_Sockets_NetFrame_ApiPacket_&quot;&gt;&lt;/a&gt; SendAsync\\(Ipv4Port, ApiPacket\\)&quot;">​</a></h3><p>异步发送消息</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ValueTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NetResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SendAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Ipv4Port</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ApiPacket</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> api</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>key</code> <a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><p>发送人的IP</p><p><code>api</code> <a href="./Tool.Sockets.NetFrame.ApiPacket.html">ApiPacket</a></p><p>接口调用信息</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1" target="_blank" rel="noreferrer">ValueTask</a>&lt;<a href="./Tool.Sockets.NetFrame.NetResponse.html">NetResponse</a>&gt;</p><h3 id="setcompleted-completedevent-enserver" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame_SetCompleted_Tool_Sockets_Kernels_CompletedEvent_Tool_Sockets_Kernels_EnServer__"></a> SetCompleted(CompletedEvent&lt;EnServer&gt;) <a class="header-anchor" href="#setcompleted-completedevent-enserver" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame_SetCompleted_Tool_Sockets_Kernels_CompletedEvent_Tool_Sockets_Kernels_EnServer__&quot;&gt;&lt;/a&gt; SetCompleted\\(CompletedEvent&lt;EnServer\\&gt;\\)&quot;">​</a></h3>',84)),r("p",null,[e[0]||(e[0]=i("连接、发送、关闭事件 ")),n(s,{href:"Tool.Sockets.Kernels.EnServer","data-throw-if-not-resolved":"false"})]),e[2]||(e[2]=t('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SetCompleted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CompletedEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EnServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Completed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>Completed</code> <a href="./Tool.Sockets.Kernels.CompletedEvent-1.html">CompletedEvent</a>&lt;<a href="./Tool.Sockets.Kernels.EnServer.html">EnServer</a>&gt;</p><h3 id="setipparser-ipparserevent" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame_SetIpParser_Tool_Sockets_Kernels_IpParserEvent_"></a> SetIpParser(IpParserEvent) <a class="header-anchor" href="#setipparser-ipparserevent" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame_SetIpParser_Tool_Sockets_Kernels_IpParserEvent_&quot;&gt;&lt;/a&gt; SetIpParser\\(IpParserEvent\\)&quot;">​</a></h3><p>实现IP:Port解释器 （返回有效的IP:Port,返回空使用原值） 参数1：发起方信息空表示无发起方，参数2：接收方信息</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SetIpParser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IpParserEvent</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IpParser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>IpParser</code> <a href="./Tool.Sockets.Kernels.IpParserEvent.html">IpParserEvent</a></p><h3 id="startasync-int" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame_StartAsync_System_Int32_"></a> StartAsync(int) <a class="header-anchor" href="#startasync-int" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame_StartAsync_System_Int32_&quot;&gt;&lt;/a&gt; StartAsync\\(int\\)&quot;">​</a></h3><p>开始异步监听ip地址的端口</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> StartAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>port</code> <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a></p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><h3 id="startasync-string-int" tabindex="-1"><a id="Tool_Sockets_NetFrame_ServerFrame_StartAsync_System_String_System_Int32_"></a> StartAsync(string, int) <a class="header-anchor" href="#startasync-string-int" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ServerFrame_StartAsync_System_String_System_Int32_&quot;&gt;&lt;/a&gt; StartAsync\\(string, int\\)&quot;">​</a></h3><p>开始异步监听ip地址的端口</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> StartAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>ip</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p><code>port</code> <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a></p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p>',23))])}const E=a(h,[["render",c]]);export{S as __pageData,E as default};
