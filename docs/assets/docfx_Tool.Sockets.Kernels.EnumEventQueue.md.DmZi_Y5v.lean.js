import{_ as a,c as l,a4 as i,j as t,a as s,G as n,B as r,o as _}from"./chunks/framework.C9bIz6zs.js";const E=JSON.parse('{"title":"Class EnumEventQueue","description":"","frontmatter":{},"headers":[],"relativePath":"docfx/Tool.Sockets.Kernels.EnumEventQueue.md","filePath":"zh/docfx/Tool.Sockets.Kernels.EnumEventQueue.md"}'),h={name:"docfx/Tool.Sockets.Kernels.EnumEventQueue.md"};function p(c,e,y,b,m,k){const o=r("xref");return _(),l("div",null,[e[10]||(e[10]=i('<h1 id="class-enumeventqueue" tabindex="-1"><a id="Tool_Sockets_Kernels_EnumEventQueue"></a> Class EnumEventQueue <a class="header-anchor" href="#class-enumeventqueue" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_EnumEventQueue&quot;&gt;&lt;/a&gt; Class EnumEventQueue&quot;">​</a></h1><p>Namespace: <a href="./Tool.Sockets.Kernels.html">Tool.Sockets.Kernels</a><br> Assembly: Tool.Net.dll</p><p>一个Net连接公共的事件消息体</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EnumEventQueue</span></span></code></pre></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Tool.Sockets.Kernels.EnumEventQueue.html">EnumEventQueue</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noreferrer">object.MemberwiseClone()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h4 id="extension-methods" tabindex="-1">Extension Methods <a class="header-anchor" href="#extension-methods" aria-label="Permalink to &quot;Extension Methods&quot;">​</a></h4><p><a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Add__1_System_Object_System_Object_System_Object_">ObjectExtension.Add&lt;T&gt;(object, object, object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_CopyEntity_System_Object_System_Object_System_String___">ObjectExtension.CopyEntity(object, object, params string[])</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_">ObjectExtension.EntityToJson(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_System_Boolean_">ObjectExtension.EntityToJson(object, bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_System_Boolean_System_String_">ObjectExtension.EntityToJson(object, bool, string)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_GetDictionary_System_Object_">DictionaryExtension.GetDictionary(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey_System_Object_System_String_System_Boolean__">TypeExtension.GetFieldKey(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey__1_System_Object_System_String_System_Boolean__">TypeExtension.GetFieldKey&lt;T&gt;(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey_System_Object_System_Type_System_String_System_Boolean__">TypeExtension.GetFieldKey(object, Type, string, out bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_GetIntPtr_System_Object_">ObjectExtension.GetIntPtr(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_GetIntPtrInt_System_Object_">ObjectExtension.GetIntPtrInt(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertieFind_System_Object_System_String_System_Boolean_">TypeExtension.GetPropertieFind(object, string, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetProperties_System_Object_">TypeExtension.GetProperties(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey_System_Object_System_String_System_Boolean__">TypeExtension.GetPropertyKey(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey__1_System_Object_System_String_System_Boolean__">TypeExtension.GetPropertyKey&lt;T&gt;(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey_System_Object_System_Type_System_String_System_Boolean__">TypeExtension.GetPropertyKey(object, Type, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_ComponentModel_PropertyDescriptor_">TypeExtension.GetValue(object, PropertyDescriptor)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_String_System_Boolean_">TypeExtension.GetValue(object, string, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_String_">TypeExtension.GetValue(object, string)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Read__1_System_Object_System_Object_System_Int32_System_Int32_">ObjectExtension.Read&lt;T&gt;(object, object, int, int)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Read__1_System_Object_System_Int32_System_Object_System_Int32_System_Int32_">ObjectExtension.Read&lt;T&gt;(object, int, object, int, int)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_SetDictionary_System_Object_System_Collections_Generic_IDictionary_System_String_System_Object__">DictionaryExtension.SetDictionary(object, IDictionary&lt;string, object&gt;)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey_System_Object_System_String_System_Object_">TypeExtension.SetFieldKey(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey__1_System_Object_System_String_System_Object_">TypeExtension.SetFieldKey&lt;T&gt;(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey_System_Object_System_Type_System_String_System_Object_">TypeExtension.SetFieldKey(object, Type, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey_System_Object_System_String_System_Object_">TypeExtension.SetPropertyKey(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey__1_System_Object_System_String_System_Object_">TypeExtension.SetPropertyKey&lt;T&gt;(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey_System_Object_System_Type_System_String_System_Object_">TypeExtension.SetPropertyKey(object, Type, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_ComponentModel_PropertyDescriptor_System_Object_">TypeExtension.SetValue(object, PropertyDescriptor, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_String_System_Object_System_Boolean_">TypeExtension.SetValue(object, string, object, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_String_System_Object_">TypeExtension.SetValue(object, string, object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBase64String_System_Object_">ObjectExtension.ToBase64String(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBytes_System_Object_">ObjectExtension.ToBytes(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBytes_System_Object_System_Type__">ObjectExtension.ToBytes(object, out Type)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToDictionary_System_Object_">DictionaryExtension.ToDictionary(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToDictionary__1_System_Object_">DictionaryExtension.ToDictionary&lt;T&gt;(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToIDictionary_System_Object_">DictionaryExtension.ToIDictionary(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToIDictionary__1_System_Object_">DictionaryExtension.ToIDictionary&lt;T&gt;(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJson_System_Object_">ObjectExtension.ToJson(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJson_System_Object_System_Text_Json_JsonSerializerOptions_">ObjectExtension.ToJson(object, JsonSerializerOptions)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJsonWeb_System_Object_">ObjectExtension.ToJsonWeb(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJsonWeb_System_Object_System_Action_System_Text_Json_JsonSerializerOptions__">ObjectExtension.ToJsonWeb(object, Action&lt;JsonSerializerOptions&gt;)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToTryVar__1_System_Object___0_">ObjectExtension.ToTryVar&lt;T&gt;(object, T)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar__1_System_Object_">ObjectExtension.ToVar&lt;T&gt;(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar_System_Object_System_Type_System_Boolean_">ObjectExtension.ToVar(object, Type, bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar_System_Object_System_String_">ObjectExtension.ToVar(object, string)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToXml_System_Object_">ObjectExtension.ToXml(object)</a></p><h2 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h2><p>代码由逆血提供支持</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="complete-t-in-userkey-t-bool-completedevent-t" tabindex="-1"><a id="Tool_Sockets_Kernels_EnumEventQueue_Complete__1_Tool_Sockets_Kernels_UserKey____0_System_Boolean_Tool_Sockets_Kernels_CompletedEvent___0__"></a> Complete&lt;T&gt;(in UserKey, T, bool, CompletedEvent&lt;T&gt;) <a class="header-anchor" href="#complete-t-in-userkey-t-bool-completedevent-t" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_EnumEventQueue_Complete__1_Tool_Sockets_Kernels_UserKey____0_System_Boolean_Tool_Sockets_Kernels_CompletedEvent___0__&quot;&gt;&lt;/a&gt; Complete&lt;T\\&gt;\\(in UserKey, T, bool, CompletedEvent&lt;T\\&gt;\\)&quot;">​</a></h3><p>调用TCP事件队列线程</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ValueTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IGetQueOnEnum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Complete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UserKey</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> enAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isQueue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CompletedEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Enum</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>key</code> <a href="./Tool.Sockets.Kernels.UserKey.html">UserKey</a></p><p>IP</p><p><code>enAction</code> T</p><p>事件枚举</p><p><code>isQueue</code> <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>是否采用队列处理</p><p><code>action</code> <a href="./Tool.Sockets.Kernels.CompletedEvent-1.html">CompletedEvent</a>&lt;T&gt;</p><p>委托事件</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1" target="_blank" rel="noreferrer">ValueTask</a>&lt;<a href="./Tool.Sockets.Kernels.IGetQueOnEnum.html">IGetQueOnEnum</a>&gt;</p><h4 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p><code>T</code></p><h3 id="oninterceptor-enclient-bool" tabindex="-1"><a id="Tool_Sockets_Kernels_EnumEventQueue_OnInterceptor_Tool_Sockets_Kernels_EnClient_System_Boolean_"></a> OnInterceptor(EnClient, bool) <a class="header-anchor" href="#oninterceptor-enclient-bool" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_EnumEventQueue_OnInterceptor_Tool_Sockets_Kernels_EnClient_System_Boolean_&quot;&gt;&lt;/a&gt; OnInterceptor\\(EnClient, bool\\)&quot;">​</a></h3>',30)),t("p",null,[e[0]||(e[0]=s("设置开启或关闭不想收到的消息事件（当前设置仅在 ")),n(o,{href:"Tool.Sockets.Kernels.INetworkCore","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=s(" 接口，相关构造对象还未创建之前设置有效，是这些通信的公共默认配置）"))]),e[11]||(e[11]=i('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnInterceptor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EnClient</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> enClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>enClient</code> <a href="./Tool.Sockets.Kernels.EnClient.html">EnClient</a></p>',3)),n(o,{href:"Tool.Sockets.Kernels.EnClient","data-throw-if-not-resolved":"false"}),e[12]||(e[12]=i('<p><code>state</code> <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>等于true时生效，false将关闭一切的相关事件</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>返回true时表示设置成功！</p><h3 id="oninterceptor-enserver-bool" tabindex="-1"><a id="Tool_Sockets_Kernels_EnumEventQueue_OnInterceptor_Tool_Sockets_Kernels_EnServer_System_Boolean_"></a> OnInterceptor(EnServer, bool) <a class="header-anchor" href="#oninterceptor-enserver-bool" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_EnumEventQueue_OnInterceptor_Tool_Sockets_Kernels_EnServer_System_Boolean_&quot;&gt;&lt;/a&gt; OnInterceptor\\(EnServer, bool\\)&quot;">​</a></h3>',6)),t("p",null,[e[2]||(e[2]=s("设置开启或关闭不想收到的消息事件（当前设置仅在 ")),n(o,{href:"Tool.Sockets.Kernels.INetworkCore","data-throw-if-not-resolved":"false"}),e[3]||(e[3]=s(" 接口，相关构造对象还未创建之前设置有效，是这些通信的公共默认配置）"))]),e[13]||(e[13]=i('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnInterceptor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EnServer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> enServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>enServer</code> <a href="./Tool.Sockets.Kernels.EnServer.html">EnServer</a></p>',3)),n(o,{href:"Tool.Sockets.Kernels.EnServer","data-throw-if-not-resolved":"false"}),e[14]||(e[14]=i('<p><code>state</code> <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>等于true时生效，false将关闭一切的相关事件</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>返回true时表示设置成功！</p><h3 id="onisqueue-enclient-bool" tabindex="-1"><a id="Tool_Sockets_Kernels_EnumEventQueue_OnIsQueue_Tool_Sockets_Kernels_EnClient_System_Boolean_"></a> OnIsQueue(EnClient, bool) <a class="header-anchor" href="#onisqueue-enclient-bool" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_EnumEventQueue_OnIsQueue_Tool_Sockets_Kernels_EnClient_System_Boolean_&quot;&gt;&lt;/a&gt; OnIsQueue\\(EnClient, bool\\)&quot;">​</a></h3>',6)),t("p",null,[e[4]||(e[4]=s("设置将")),n(o,{href:"Tool.Sockets.Kernels.EnClient","data-throw-if-not-resolved":"false"}),e[5]||(e[5]=s("事件，载入或不载入，队列池（当前设置仅在 ")),n(o,{href:"Tool.Sockets.Kernels.INetworkCore","data-throw-if-not-resolved":"false"}),e[6]||(e[6]=s(" 接口，相关构造对象还未创建之前设置有效，是这些通信的公共默认配置）"))]),e[15]||(e[15]=i('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnIsQueue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EnClient</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> enClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>enClient</code> <a href="./Tool.Sockets.Kernels.EnClient.html">EnClient</a></p>',3)),n(o,{href:"Tool.Sockets.Kernels.EnClient","data-throw-if-not-resolved":"false"}),e[16]||(e[16]=i('<p><code>state</code> <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>等于true时，事件由队列线程完成，false时交由任务线程自行完成</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>返回true时表示设置成功！</p><h3 id="onisqueue-enserver-bool" tabindex="-1"><a id="Tool_Sockets_Kernels_EnumEventQueue_OnIsQueue_Tool_Sockets_Kernels_EnServer_System_Boolean_"></a> OnIsQueue(EnServer, bool) <a class="header-anchor" href="#onisqueue-enserver-bool" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_EnumEventQueue_OnIsQueue_Tool_Sockets_Kernels_EnServer_System_Boolean_&quot;&gt;&lt;/a&gt; OnIsQueue\\(EnServer, bool\\)&quot;">​</a></h3>',6)),t("p",null,[e[7]||(e[7]=s("设置将")),n(o,{href:"Tool.Sockets.Kernels.EnServer","data-throw-if-not-resolved":"false"}),e[8]||(e[8]=s("事件，载入或不载入，队列池（当前设置仅在 ")),n(o,{href:"Tool.Sockets.Kernels.INetworkCore","data-throw-if-not-resolved":"false"}),e[9]||(e[9]=s(" 接口，相关构造对象还未创建之前设置有效，是这些通信的公共默认配置）"))]),e[17]||(e[17]=i('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnIsQueue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EnServer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> enServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>enServer</code> <a href="./Tool.Sockets.Kernels.EnServer.html">EnServer</a></p>',3)),n(o,{href:"Tool.Sockets.Kernels.EnServer","data-throw-if-not-resolved":"false"}),e[18]||(e[18]=t("p",null,[t("code",null,"state"),s(),t("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noreferrer"},"bool")],-1)),e[19]||(e[19]=t("p",null,"等于true时，事件由队列线程完成，false时交由任务线程自行完成",-1)),e[20]||(e[20]=t("h4",{id:"returns-4",tabindex:"-1"},[s("Returns "),t("a",{class:"header-anchor",href:"#returns-4","aria-label":'Permalink to "Returns"'},"​")],-1)),e[21]||(e[21]=t("p",null,[t("a",{href:"https://learn.microsoft.com/dotnet/api/system.boolean",target:"_blank",rel:"noreferrer"},"bool")],-1)),e[22]||(e[22]=t("p",null,"返回true时表示设置成功！",-1))])}const T=a(h,[["render",p]]);export{E as __pageData,T as default};
