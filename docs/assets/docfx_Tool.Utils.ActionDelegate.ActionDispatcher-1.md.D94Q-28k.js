import{_ as e,c as o,a4 as s,o as i}from"./chunks/framework.C9bIz6zs.js";const y=JSON.parse('{"title":"Class ActionDispatcher<T>","description":"","frontmatter":{},"headers":[],"relativePath":"docfx/Tool.Utils.ActionDelegate.ActionDispatcher-1.md","filePath":"zh/docfx/Tool.Utils.ActionDelegate.ActionDispatcher-1.md"}'),a={name:"docfx/Tool.Utils.ActionDelegate.ActionDispatcher-1.md"};function n(l,t,r,c,_,h){return i(),o("div",null,t[0]||(t[0]=[s('<h1 id="class-actiondispatcher-t" tabindex="-1"><a id="Tool_Utils_ActionDelegate_ActionDispatcher_1"></a> Class ActionDispatcher&lt;T&gt; <a class="header-anchor" href="#class-actiondispatcher-t" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Utils_ActionDelegate_ActionDispatcher_1&quot;&gt;&lt;/a&gt; Class ActionDispatcher&lt;T\\&gt;&quot;">​</a></h1><p>Namespace: <a href="./Tool.Utils.ActionDelegate.html">Tool.Utils.ActionDelegate</a><br> Assembly: Tool.Net.dll</p><p>根据 MethodInfo 对象，创建一个委托，实现方法调用，提高性能，支持各种返回值(object)</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ActionDispatcher</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ActionDispatcher</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IActionDispatcher</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IActionDispatcher</span></span></code></pre></div><h4 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p><code>T</code></p><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html">ActionDispatcher&lt;T, object&gt;</a> ← <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-1.html">ActionDispatcher&lt;T&gt;</a></p><h4 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h4><p><a href="./Tool.Utils.ActionDelegate.IActionDispatcher-1.html">IActionDispatcher&lt;T&gt;</a>, <a href="./Tool.Utils.ActionDelegate.IActionDispatcher.html">IActionDispatcher</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html#Tool_Utils_ActionDelegate_ActionDispatcher_2_IsVoid">ActionDispatcher&lt;T, object&gt;.IsVoid</a>, <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html#Tool_Utils_ActionDelegate_ActionDispatcher_2_IsTask">ActionDispatcher&lt;T, object&gt;.IsTask</a>, <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html#Tool_Utils_ActionDelegate_ActionDispatcher_2_ReturnType">ActionDispatcher&lt;T, object&gt;.ReturnType</a>, <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html#Tool_Utils_ActionDelegate_ActionDispatcher_2_Method">ActionDispatcher&lt;T, object&gt;.Method</a>, <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html#Tool_Utils_ActionDelegate_ActionDispatcher_2_Parameters">ActionDispatcher&lt;T, object&gt;.Parameters</a>, <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html#Tool_Utils_ActionDelegate_ActionDispatcher_2_Name">ActionDispatcher&lt;T, object&gt;.Name</a>, <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html#Tool_Utils_ActionDelegate_ActionDispatcher_2_IsStatic">ActionDispatcher&lt;T, object&gt;.IsStatic</a>, <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html#Tool_Utils_ActionDelegate_ActionDispatcher_2_MethodEnum">ActionDispatcher&lt;T, object&gt;.MethodEnum</a>, <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html#Tool_Utils_ActionDelegate_ActionDispatcher_2_Invoke__0_System_Object___">ActionDispatcher&lt;T, object&gt;.Invoke(T, params object[])</a>, <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html#Tool_Utils_ActionDelegate_ActionDispatcher_2_InvokeAsync__0_System_Object___">ActionDispatcher&lt;T, object&gt;.InvokeAsync(T, params object[])</a>, <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html#Tool_Utils_ActionDelegate_ActionDispatcher_2_Execute__0_System_Object___">ActionDispatcher&lt;T, object&gt;.Execute(T, params object[])</a>, <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html#Tool_Utils_ActionDelegate_ActionDispatcher_2_VoidExecute__0_System_Object___">ActionDispatcher&lt;T, object&gt;.VoidExecute(T, params object[])</a>, <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html#Tool_Utils_ActionDelegate_ActionDispatcher_2_ExecuteAsync__0_System_Object___">ActionDispatcher&lt;T, object&gt;.ExecuteAsync(T, object[])</a>, <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html#Tool_Utils_ActionDelegate_ActionDispatcher_2_VoidExecuteAsync__0_System_Object___">ActionDispatcher&lt;T, object&gt;.VoidExecuteAsync(T, object[])</a>, <a href="./Tool.Utils.ActionDelegate.ActionDispatcher-2.html#Tool_Utils_ActionDelegate_ActionDispatcher_2_ToString">ActionDispatcher&lt;T, object&gt;.ToString()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noreferrer">object.MemberwiseClone()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h4 id="extension-methods" tabindex="-1">Extension Methods <a class="header-anchor" href="#extension-methods" aria-label="Permalink to &quot;Extension Methods&quot;">​</a></h4><p><a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Add__1_System_Object_System_Object_System_Object_">ObjectExtension.Add&lt;T&gt;(object, object, object)</a>, <a href="./Tool.Utils.ActionDelegate.DispatcherCore.html#Tool_Utils_ActionDelegate_DispatcherCore_AsAction__2_Tool_Utils_ActionDelegate_IActionDispatcher_">DispatcherCore.AsAction&lt;T, TResult&gt;(IActionDispatcher)</a>, <a href="./Tool.Utils.ActionDelegate.DispatcherCore.html#Tool_Utils_ActionDelegate_DispatcherCore_AsAction__2_Tool_Utils_ActionDelegate_IActionDispatcher___0__">DispatcherCore.AsAction&lt;T, TResult&gt;(IActionDispatcher&lt;T&gt;)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_CopyEntity_System_Object_System_Object_System_String___">ObjectExtension.CopyEntity(object, object, params string[])</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_">ObjectExtension.EntityToJson(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_System_Boolean_">ObjectExtension.EntityToJson(object, bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_System_Boolean_System_String_">ObjectExtension.EntityToJson(object, bool, string)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_GetDictionary_System_Object_">DictionaryExtension.GetDictionary(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey_System_Object_System_String_System_Boolean__">TypeExtension.GetFieldKey(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey__1_System_Object_System_String_System_Boolean__">TypeExtension.GetFieldKey&lt;T&gt;(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey_System_Object_System_Type_System_String_System_Boolean__">TypeExtension.GetFieldKey(object, Type, string, out bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_GetIntPtr_System_Object_">ObjectExtension.GetIntPtr(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_GetIntPtrInt_System_Object_">ObjectExtension.GetIntPtrInt(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertieFind_System_Object_System_String_System_Boolean_">TypeExtension.GetPropertieFind(object, string, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetProperties_System_Object_">TypeExtension.GetProperties(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey_System_Object_System_String_System_Boolean__">TypeExtension.GetPropertyKey(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey__1_System_Object_System_String_System_Boolean__">TypeExtension.GetPropertyKey&lt;T&gt;(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey_System_Object_System_Type_System_String_System_Boolean__">TypeExtension.GetPropertyKey(object, Type, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_ComponentModel_PropertyDescriptor_">TypeExtension.GetValue(object, PropertyDescriptor)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_String_System_Boolean_">TypeExtension.GetValue(object, string, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_String_">TypeExtension.GetValue(object, string)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Read__1_System_Object_System_Object_System_Int32_System_Int32_">ObjectExtension.Read&lt;T&gt;(object, object, int, int)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Read__1_System_Object_System_Int32_System_Object_System_Int32_System_Int32_">ObjectExtension.Read&lt;T&gt;(object, int, object, int, int)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_SetDictionary_System_Object_System_Collections_Generic_IDictionary_System_String_System_Object__">DictionaryExtension.SetDictionary(object, IDictionary&lt;string, object&gt;)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey_System_Object_System_String_System_Object_">TypeExtension.SetFieldKey(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey__1_System_Object_System_String_System_Object_">TypeExtension.SetFieldKey&lt;T&gt;(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey_System_Object_System_Type_System_String_System_Object_">TypeExtension.SetFieldKey(object, Type, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey_System_Object_System_String_System_Object_">TypeExtension.SetPropertyKey(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey__1_System_Object_System_String_System_Object_">TypeExtension.SetPropertyKey&lt;T&gt;(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey_System_Object_System_Type_System_String_System_Object_">TypeExtension.SetPropertyKey(object, Type, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_ComponentModel_PropertyDescriptor_System_Object_">TypeExtension.SetValue(object, PropertyDescriptor, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_String_System_Object_System_Boolean_">TypeExtension.SetValue(object, string, object, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_String_System_Object_">TypeExtension.SetValue(object, string, object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBase64String_System_Object_">ObjectExtension.ToBase64String(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBytes_System_Object_">ObjectExtension.ToBytes(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBytes_System_Object_System_Type__">ObjectExtension.ToBytes(object, out Type)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToDictionary_System_Object_">DictionaryExtension.ToDictionary(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToDictionary__1_System_Object_">DictionaryExtension.ToDictionary&lt;T&gt;(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToIDictionary_System_Object_">DictionaryExtension.ToIDictionary(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToIDictionary__1_System_Object_">DictionaryExtension.ToIDictionary&lt;T&gt;(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJson_System_Object_">ObjectExtension.ToJson(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJson_System_Object_System_Text_Json_JsonSerializerOptions_">ObjectExtension.ToJson(object, JsonSerializerOptions)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJsonWeb_System_Object_">ObjectExtension.ToJsonWeb(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJsonWeb_System_Object_System_Action_System_Text_Json_JsonSerializerOptions__">ObjectExtension.ToJsonWeb(object, Action&lt;JsonSerializerOptions&gt;)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToTryVar__1_System_Object___0_">ObjectExtension.ToTryVar&lt;T&gt;(object, T)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar__1_System_Object_">ObjectExtension.ToVar&lt;T&gt;(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar_System_Object_System_Type_System_Boolean_">ObjectExtension.ToVar(object, Type, bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar_System_Object_System_String_">ObjectExtension.ToVar(object, string)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToXml_System_Object_">ObjectExtension.ToXml(object)</a></p><h2 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h2><p>代码由逆血提供支持</p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="actiondispatcher-methodinfo" tabindex="-1"><a id="Tool_Utils_ActionDelegate_ActionDispatcher_1__ctor_System_Reflection_MethodInfo_"></a> ActionDispatcher(MethodInfo) <a class="header-anchor" href="#actiondispatcher-methodinfo" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Utils_ActionDelegate_ActionDispatcher_1__ctor_System_Reflection_MethodInfo_&quot;&gt;&lt;/a&gt; ActionDispatcher\\(MethodInfo\\)&quot;">​</a></h3><p>初始化对象</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ActionDispatcher</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MethodInfo methodInfo)</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>methodInfo</code> <a href="https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo" target="_blank" rel="noreferrer">MethodInfo</a></p><p>方法对象</p><h3 id="actiondispatcher-methodinfo-type" tabindex="-1"><a id="Tool_Utils_ActionDelegate_ActionDispatcher_1__ctor_System_Reflection_MethodInfo_System_Type_"></a> ActionDispatcher(MethodInfo, Type) <a class="header-anchor" href="#actiondispatcher-methodinfo-type" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Utils_ActionDelegate_ActionDispatcher_1__ctor_System_Reflection_MethodInfo_System_Type_&quot;&gt;&lt;/a&gt; ActionDispatcher\\(MethodInfo, Type\\)&quot;">​</a></h3><p>初始化对象</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ActionDispatcher</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MethodInfo methodInfo, Type classtype)</span></span></code></pre></div><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>methodInfo</code> <a href="https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo" target="_blank" rel="noreferrer">MethodInfo</a></p><p>方法对象</p><p><code>classtype</code> <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noreferrer">Type</a></p><p>调用类类型（明确调用类）</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="invoke-e-t-params-object" tabindex="-1"><a id="Tool_Utils_ActionDelegate_ActionDispatcher_1_Invoke__1__0_System_Object___"></a> Invoke&lt;E&gt;(T, params object[]) <a class="header-anchor" href="#invoke-e-t-params-object" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Utils_ActionDelegate_ActionDispatcher_1_Invoke__1__0_System_Object___&quot;&gt;&lt;/a&gt; Invoke&lt;E\\&gt;\\(T, params object\\[\\]\\)&quot;">​</a></h3><p>可不区分是否有返回值的调用方法,返回泛型值</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> E</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Invoke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CallClass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">params</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>CallClass</code> T</p><p>调用方法的类</p><p><code>parameters</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a>[]</p><p>参数</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p>E</p><p>返回方法的返回值</p><h4 id="type-parameters-1" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p><code>E</code></p><h3 id="invokeasync-e-t-params-object" tabindex="-1"><a id="Tool_Utils_ActionDelegate_ActionDispatcher_1_InvokeAsync__1__0_System_Object___"></a> InvokeAsync&lt;E&gt;(T, params object[]) <a class="header-anchor" href="#invokeasync-e-t-params-object" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Utils_ActionDelegate_ActionDispatcher_1_InvokeAsync__1__0_System_Object___&quot;&gt;&lt;/a&gt; InvokeAsync&lt;E\\&gt;\\(T, params object\\[\\]\\)&quot;">​</a></h3><p>可不区分是否有返回值的调用方法,返回泛型值</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InvokeAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CallClass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">params</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>CallClass</code> T</p><p>调用方法的类</p><p><code>parameters</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a>[]</p><p>参数</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank" rel="noreferrer">Task</a>&lt;E&gt;</p><p>返回方法的返回值</p><h4 id="type-parameters-2" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p><code>E</code></p>',58)]))}const m=e(a,[["render",n]]);export{y as __pageData,m as default};
