import{_ as s,c as i,a2 as t,j as o,a as n,G as l,B as r,o as h}from"./chunks/framework.CQii86iU.js";const g=JSON.parse('{"title":"Class ClientFrame","description":"","frontmatter":{},"headers":[],"relativePath":"docfx/Tool.Sockets.NetFrame.ClientFrame.md","filePath":"zh/docfx/Tool.Sockets.NetFrame.ClientFrame.md"}'),p={name:"docfx/Tool.Sockets.NetFrame.ClientFrame.md"};function c(_,e,d,k,m,y){const a=r("xref");return h(),i("div",null,[e[1]||(e[1]=t('<h1 id="class-clientframe" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame"></a> Class ClientFrame <a class="header-anchor" href="#class-clientframe" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame&quot;&gt;&lt;/a&gt; Class ClientFrame&quot;">​</a></h1><p>Namespace: <a href="./Tool.Sockets.NetFrame.html">Tool.Sockets.NetFrame</a><br> Assembly: Tool.Net.dll</p><p>封装的一个TCP框架（客户端）</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ClientFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EnClientEventDrive</span></span></code></pre></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Tool.Sockets.Kernels.EnClientEventDrive.html">EnClientEventDrive</a> ← <a href="./Tool.Sockets.NetFrame.ClientFrame.html">ClientFrame</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="./Tool.Sockets.Kernels.EnClientEventDrive.html#Tool_Sockets_Kernels_EnClientEventDrive_OnInterceptor_Tool_Sockets_Kernels_EnClient_System_Boolean_">EnClientEventDrive.OnInterceptor(EnClient, bool)</a>, <a href="./Tool.Sockets.Kernels.EnClientEventDrive.html#Tool_Sockets_Kernels_EnClientEventDrive_OnIsQueue_Tool_Sockets_Kernels_EnClient_System_Boolean_">EnClientEventDrive.OnIsQueue(EnClient, bool)</a>, <a href="./Tool.Sockets.Kernels.EnClientEventDrive.html#Tool_Sockets_Kernels_EnClientEventDrive_IsEvent_Tool_Sockets_Kernels_EnClient_">EnClientEventDrive.IsEvent(EnClient)</a>, <a href="./Tool.Sockets.Kernels.EnClientEventDrive.html#Tool_Sockets_Kernels_EnClientEventDrive_IsQueue_Tool_Sockets_Kernels_EnClient_">EnClientEventDrive.IsQueue(EnClient)</a>, <a href="./Tool.Sockets.Kernels.EnClientEventDrive.html#Tool_Sockets_Kernels_EnClientEventDrive_OpenAllEvent">EnClientEventDrive.OpenAllEvent()</a>, <a href="./Tool.Sockets.Kernels.EnClientEventDrive.html#Tool_Sockets_Kernels_EnClientEventDrive_OpenAllQueue">EnClientEventDrive.OpenAllQueue()</a>, <a href="./Tool.Sockets.Kernels.EnClientEventDrive.html#Tool_Sockets_Kernels_EnClientEventDrive_CloseAllEvent">EnClientEventDrive.CloseAllEvent()</a>, <a href="./Tool.Sockets.Kernels.EnClientEventDrive.html#Tool_Sockets_Kernels_EnClientEventDrive_CloseAllQueue">EnClientEventDrive.CloseAllQueue()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noreferrer">object.MemberwiseClone()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h4 id="extension-methods" tabindex="-1">Extension Methods <a class="header-anchor" href="#extension-methods" aria-label="Permalink to &quot;Extension Methods&quot;">​</a></h4><p><a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Add__1_System_Object_System_Object_System_Object_">ObjectExtension.Add&lt;T&gt;(object, object, object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_CopyEntity_System_Object_System_Object_System_String___">ObjectExtension.CopyEntity(object, object, params string[])</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_">ObjectExtension.EntityToJson(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_System_Boolean_">ObjectExtension.EntityToJson(object, bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_System_Boolean_System_String_">ObjectExtension.EntityToJson(object, bool, string)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_GetDictionary_System_Object_">DictionaryExtension.GetDictionary(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey_System_Object_System_String_System_Boolean__">TypeExtension.GetFieldKey(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey__1_System_Object_System_String_System_Boolean__">TypeExtension.GetFieldKey&lt;T&gt;(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey_System_Object_System_Type_System_String_System_Boolean__">TypeExtension.GetFieldKey(object, Type, string, out bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_GetIntPtr_System_Object_">ObjectExtension.GetIntPtr(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_GetIntPtrInt_System_Object_">ObjectExtension.GetIntPtrInt(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertieFind_System_Object_System_String_System_Boolean_">TypeExtension.GetPropertieFind(object, string, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetProperties_System_Object_">TypeExtension.GetProperties(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey_System_Object_System_String_System_Boolean__">TypeExtension.GetPropertyKey(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey__1_System_Object_System_String_System_Boolean__">TypeExtension.GetPropertyKey&lt;T&gt;(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey_System_Object_System_Type_System_String_System_Boolean__">TypeExtension.GetPropertyKey(object, Type, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_ComponentModel_PropertyDescriptor_">TypeExtension.GetValue(object, PropertyDescriptor)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_String_System_Boolean_">TypeExtension.GetValue(object, string, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_String_">TypeExtension.GetValue(object, string)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Read__1_System_Object_System_Object_System_Int32_System_Int32_">ObjectExtension.Read&lt;T&gt;(object, object, int, int)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Read__1_System_Object_System_Int32_System_Object_System_Int32_System_Int32_">ObjectExtension.Read&lt;T&gt;(object, int, object, int, int)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_SetDictionary_System_Object_System_Collections_Generic_IDictionary_System_String_System_Object__">DictionaryExtension.SetDictionary(object, IDictionary&lt;string, object&gt;)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey_System_Object_System_String_System_Object_">TypeExtension.SetFieldKey(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey__1_System_Object_System_String_System_Object_">TypeExtension.SetFieldKey&lt;T&gt;(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey_System_Object_System_Type_System_String_System_Object_">TypeExtension.SetFieldKey(object, Type, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey_System_Object_System_String_System_Object_">TypeExtension.SetPropertyKey(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey__1_System_Object_System_String_System_Object_">TypeExtension.SetPropertyKey&lt;T&gt;(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey_System_Object_System_Type_System_String_System_Object_">TypeExtension.SetPropertyKey(object, Type, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_ComponentModel_PropertyDescriptor_System_Object_">TypeExtension.SetValue(object, PropertyDescriptor, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_String_System_Object_System_Boolean_">TypeExtension.SetValue(object, string, object, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_String_System_Object_">TypeExtension.SetValue(object, string, object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBase64String_System_Object_">ObjectExtension.ToBase64String(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBytes_System_Object_">ObjectExtension.ToBytes(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBytes_System_Object_System_Type__">ObjectExtension.ToBytes(object, out Type)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToDictionary_System_Object_">DictionaryExtension.ToDictionary(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToDictionary__1_System_Object_">DictionaryExtension.ToDictionary&lt;T&gt;(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToIDictionary_System_Object_">DictionaryExtension.ToIDictionary(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToIDictionary__1_System_Object_">DictionaryExtension.ToIDictionary&lt;T&gt;(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJson_System_Object_">ObjectExtension.ToJson(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJson_System_Object_System_Text_Json_JsonSerializerOptions_">ObjectExtension.ToJson(object, JsonSerializerOptions)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJsonWeb_System_Object_">ObjectExtension.ToJsonWeb(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJsonWeb_System_Object_System_Action_System_Text_Json_JsonSerializerOptions__">ObjectExtension.ToJsonWeb(object, Action&lt;JsonSerializerOptions&gt;)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToTryVar__1_System_Object___0_">ObjectExtension.ToTryVar&lt;T&gt;(object, T)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar__1_System_Object_">ObjectExtension.ToVar&lt;T&gt;(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar_System_Object_System_Type_System_Boolean_">ObjectExtension.ToVar(object, Type, bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar_System_Object_System_String_">ObjectExtension.ToVar(object, string)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToXml_System_Object_">ObjectExtension.ToXml(object)</a></p><h2 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h2><p>代码由逆血提供支持</p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="clientframe" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame__ctor"></a> ClientFrame() <a class="header-anchor" href="#clientframe" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame__ctor&quot;&gt;&lt;/a&gt; ClientFrame\\(\\)&quot;">​</a></h3><p>无参构造</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ClientFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="clientframe-netbuffersize" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame__ctor_Tool_Sockets_Kernels_NetBufferSize_"></a> ClientFrame(NetBufferSize) <a class="header-anchor" href="#clientframe-netbuffersize" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame__ctor_Tool_Sockets_Kernels_NetBufferSize_&quot;&gt;&lt;/a&gt; ClientFrame\\(NetBufferSize\\)&quot;">​</a></h3><p>初始化包</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ClientFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NetBufferSize bufferSize)</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>bufferSize</code> <a href="./Tool.Sockets.Kernels.NetBufferSize.html">NetBufferSize</a></p><p>收包规范</p><h3 id="clientframe-netbuffersize-bool" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame__ctor_Tool_Sockets_Kernels_NetBufferSize_System_Boolean_"></a> ClientFrame(NetBufferSize, bool) <a class="header-anchor" href="#clientframe-netbuffersize-bool" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame__ctor_Tool_Sockets_Kernels_NetBufferSize_System_Boolean_&quot;&gt;&lt;/a&gt; ClientFrame\\(NetBufferSize, bool\\)&quot;">​</a></h3><p>初始化包</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ClientFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NetBufferSize bufferSize, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IsReconnect)</span></span></code></pre></div><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>bufferSize</code> <a href="./Tool.Sockets.Kernels.NetBufferSize.html">NetBufferSize</a></p><p>收包规范</p><p><code>IsReconnect</code> <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>是否在与服务器断开后主动重连？</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="connected" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame_Connected"></a> Connected <a class="header-anchor" href="#connected" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame_Connected&quot;&gt;&lt;/a&gt; Connected&quot;">​</a></h3><p>获取一个值，该值指示 Client 的基础 Socket 是否已连接到远程主机。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Connected { get; }</span></span></code></pre></div><h4 id="property-value" tabindex="-1">Property Value <a class="header-anchor" href="#property-value" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><h3 id="isclose" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame_IsClose"></a> IsClose <a class="header-anchor" href="#isclose" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame_IsClose&quot;&gt;&lt;/a&gt; IsClose&quot;">​</a></h3><p>标识客户端是否关闭</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IsClose { get; }</span></span></code></pre></div><h4 id="property-value-1" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-1" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><h3 id="isthreadpool" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame_IsThreadPool"></a> IsThreadPool <a class="header-anchor" href="#isthreadpool" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame_IsThreadPool&quot;&gt;&lt;/a&gt; IsThreadPool&quot;">​</a></h3><p>是否使用线程池调度接收后的数据（允许使用者初始化时设置，消息是否有序获取） 默认 true 开启</p><table><tbody></tbody></table><table><tbody></tbody></table><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IsThreadPool { get; init; }</span></span></code></pre></div><h4 id="property-value-2" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-2" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><h3 id="localpoint" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame_LocalPoint"></a> LocalPoint <a class="header-anchor" href="#localpoint" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame_LocalPoint&quot;&gt;&lt;/a&gt; LocalPoint&quot;">​</a></h3><p>当前设备的连接信息</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Ipv4Port LocalPoint { get; }</span></span></code></pre></div><h4 id="property-value-3" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-3" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><h3 id="server" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame_Server"></a> Server <a class="header-anchor" href="#server" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame_Server&quot;&gt;&lt;/a&gt; Server&quot;">​</a></h3><p>服务器的连接信息</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UserKey Server { get; }</span></span></code></pre></div><h4 id="property-value-4" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-4" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="./Tool.Sockets.Kernels.UserKey.html">UserKey</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="addkeepalive-byte" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame_AddKeepAlive_System_Byte_"></a> AddKeepAlive(byte) <a class="header-anchor" href="#addkeepalive-byte" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame_AddKeepAlive_System_Byte_&quot;&gt;&lt;/a&gt; AddKeepAlive\\(byte\\)&quot;">​</a></h3><p>添加持久化消息（心跳），防止特殊情况下的断开连接</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AddKeepAlive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TimeInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>TimeInterval</code> <a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_blank" rel="noreferrer">byte</a></p><h3 id="close" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame_Close"></a> Close() <a class="header-anchor" href="#close" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame_Close&quot;&gt;&lt;/a&gt; Close\\(\\)&quot;">​</a></h3><p>关闭连接，断开处于连接状态的服务器</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="connectasync-int" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame_ConnectAsync_System_Int32_"></a> ConnectAsync(int) <a class="header-anchor" href="#connectasync-int" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame_ConnectAsync_System_Int32_&quot;&gt;&lt;/a&gt; ConnectAsync\\(int\\)&quot;">​</a></h3><p>异步连接，连接ip地址为127.0.0.1</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ConnectAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>port</code> <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a></p><p>要连接的服务器的端口</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><h3 id="connectasync-string-int" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame_ConnectAsync_System_String_System_Int32_"></a> ConnectAsync(string, int) <a class="header-anchor" href="#connectasync-string-int" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame_ConnectAsync_System_String_System_Int32_&quot;&gt;&lt;/a&gt; ConnectAsync\\(string, int\\)&quot;">​</a></h3><p>异步连接</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ConnectAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>ip</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>要连接的服务器的ip地址</p><p><code>port</code> <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a></p><p>要连接的服务器的端口</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><h3 id="reconnection" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame_Reconnection"></a> Reconnection() <a class="header-anchor" href="#reconnection" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame_Reconnection&quot;&gt;&lt;/a&gt; Reconnection\\(\\)&quot;">​</a></h3><p>重连，返回是否重连，如果没有断开是不会重连的</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Reconnection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank" rel="noreferrer">Task</a>&lt;<a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a>&gt;</p><h3 id="send-apipacket" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame_Send_Tool_Sockets_NetFrame_ApiPacket_"></a> Send(ApiPacket) <a class="header-anchor" href="#send-apipacket" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame_Send_Tool_Sockets_NetFrame_ApiPacket_&quot;&gt;&lt;/a&gt; Send\\(ApiPacket\\)&quot;">​</a></h3><p>同步发送消息</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NetResponse</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ApiPacket</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> api</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>api</code> <a href="./Tool.Sockets.NetFrame.ApiPacket.html">ApiPacket</a></p><p>接口调用信息</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Tool.Sockets.NetFrame.NetResponse.html">NetResponse</a></p><h3 id="sendasync-apipacket" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame_SendAsync_Tool_Sockets_NetFrame_ApiPacket_"></a> SendAsync(ApiPacket) <a class="header-anchor" href="#sendasync-apipacket" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame_SendAsync_Tool_Sockets_NetFrame_ApiPacket_&quot;&gt;&lt;/a&gt; SendAsync\\(ApiPacket\\)&quot;">​</a></h3><p>异步发送消息</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ValueTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NetResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SendAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ApiPacket</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> api</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>api</code> <a href="./Tool.Sockets.NetFrame.ApiPacket.html">ApiPacket</a></p><p>接口调用信息</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1" target="_blank" rel="noreferrer">ValueTask</a>&lt;<a href="./Tool.Sockets.NetFrame.NetResponse.html">NetResponse</a>&gt;</p><h3 id="sendrelay-string-apipacket" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame_SendRelay_System_String_Tool_Sockets_NetFrame_ApiPacket_"></a> SendRelay(string, ApiPacket) <a class="header-anchor" href="#sendrelay-string-apipacket" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame_SendRelay_System_String_Tool_Sockets_NetFrame_ApiPacket_&quot;&gt;&lt;/a&gt; SendRelay\\(string, ApiPacket\\)&quot;">​</a></h3><p>同步发送消息（转发给指定客户端）</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NetResponse</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SendRelay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IpPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ApiPacket</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> api</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>IpPort</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>事件处理的服务器</p><p><code>api</code> <a href="./Tool.Sockets.NetFrame.ApiPacket.html">ApiPacket</a></p><p>接口调用信息</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Tool.Sockets.NetFrame.NetResponse.html">NetResponse</a></p><h3 id="sendrelayasync-string-apipacket" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame_SendRelayAsync_System_String_Tool_Sockets_NetFrame_ApiPacket_"></a> SendRelayAsync(string, ApiPacket) <a class="header-anchor" href="#sendrelayasync-string-apipacket" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame_SendRelayAsync_System_String_Tool_Sockets_NetFrame_ApiPacket_&quot;&gt;&lt;/a&gt; SendRelayAsync\\(string, ApiPacket\\)&quot;">​</a></h3><p>异步发送消息（转发给指定客户端）</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ValueTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NetResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SendRelayAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IpPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ApiPacket</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> api</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>IpPort</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>事件处理的服务器</p><p><code>api</code> <a href="./Tool.Sockets.NetFrame.ApiPacket.html">ApiPacket</a></p><p>接口调用信息</p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1" target="_blank" rel="noreferrer">ValueTask</a>&lt;<a href="./Tool.Sockets.NetFrame.NetResponse.html">NetResponse</a>&gt;</p><h3 id="setcompleted-completedevent-enclient" tabindex="-1"><a id="Tool_Sockets_NetFrame_ClientFrame_SetCompleted_Tool_Sockets_Kernels_CompletedEvent_Tool_Sockets_Kernels_EnClient__"></a> SetCompleted(CompletedEvent&lt;EnClient&gt;) <a class="header-anchor" href="#setcompleted-completedevent-enclient" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_NetFrame_ClientFrame_SetCompleted_Tool_Sockets_Kernels_CompletedEvent_Tool_Sockets_Kernels_EnClient__&quot;&gt;&lt;/a&gt; SetCompleted\\(CompletedEvent&lt;EnClient\\&gt;\\)&quot;">​</a></h3>',127)),o("p",null,[e[0]||(e[0]=n("连接、发送、关闭事件 ")),l(a,{href:"Tool.Sockets.Kernels.EnClient","data-throw-if-not-resolved":"false"})]),e[2]||(e[2]=t('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SetCompleted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CompletedEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EnClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Completed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>Completed</code> <a href="./Tool.Sockets.Kernels.CompletedEvent-1.html">CompletedEvent</a>&lt;<a href="./Tool.Sockets.Kernels.EnClient.html">EnClient</a>&gt;</p>',3))])}const E=s(p,[["render",c]]);export{g as __pageData,E as default};
