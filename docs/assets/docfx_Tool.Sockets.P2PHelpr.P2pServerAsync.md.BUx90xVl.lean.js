import{_ as t,c as s,a2 as a,o as i}from"./chunks/framework.CQii86iU.js";const y=JSON.parse('{"title":"Class P2pServerAsync","description":"","frontmatter":{},"headers":[],"relativePath":"docfx/Tool.Sockets.P2PHelpr.P2pServerAsync.md","filePath":"zh/docfx/Tool.Sockets.P2PHelpr.P2pServerAsync.md"}'),o={name:"docfx/Tool.Sockets.P2PHelpr.P2pServerAsync.md"};function n(r,e,l,p,h,c){return i(),s("div",null,e[0]||(e[0]=[a('<h1 id="class-p2pserverasync" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync"></a> Class P2pServerAsync <a class="header-anchor" href="#class-p2pserverasync" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync&quot;&gt;&lt;/a&gt; Class P2pServerAsync&quot;">​</a></h1><p>Namespace: <a href="./Tool.Sockets.P2PHelpr.html">Tool.Sockets.P2PHelpr</a><br> Assembly: Tool.Net.dll</p><p>开放用于P2P模块化的支持类 可以获取免费开放的打洞公网服务器支持</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sealed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> P2pServerAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IDisposable</span></span></code></pre></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Tool.Sockets.P2PHelpr.P2pServerAsync.html">P2pServerAsync</a></p><h4 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.idisposable" target="_blank" rel="noreferrer">IDisposable</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h4 id="extension-methods" tabindex="-1">Extension Methods <a class="header-anchor" href="#extension-methods" aria-label="Permalink to &quot;Extension Methods&quot;">​</a></h4><p><a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Add__1_System_Object_System_Object_System_Object_">ObjectExtension.Add&lt;T&gt;(object, object, object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_CopyEntity_System_Object_System_Object_System_String___">ObjectExtension.CopyEntity(object, object, params string[])</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_">ObjectExtension.EntityToJson(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_System_Boolean_">ObjectExtension.EntityToJson(object, bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_System_Boolean_System_String_">ObjectExtension.EntityToJson(object, bool, string)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_GetDictionary_System_Object_">DictionaryExtension.GetDictionary(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey_System_Object_System_String_System_Boolean__">TypeExtension.GetFieldKey(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey__1_System_Object_System_String_System_Boolean__">TypeExtension.GetFieldKey&lt;T&gt;(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey_System_Object_System_Type_System_String_System_Boolean__">TypeExtension.GetFieldKey(object, Type, string, out bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_GetIntPtr_System_Object_">ObjectExtension.GetIntPtr(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_GetIntPtrInt_System_Object_">ObjectExtension.GetIntPtrInt(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertieFind_System_Object_System_String_System_Boolean_">TypeExtension.GetPropertieFind(object, string, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetProperties_System_Object_">TypeExtension.GetProperties(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey_System_Object_System_String_System_Boolean__">TypeExtension.GetPropertyKey(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey__1_System_Object_System_String_System_Boolean__">TypeExtension.GetPropertyKey&lt;T&gt;(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey_System_Object_System_Type_System_String_System_Boolean__">TypeExtension.GetPropertyKey(object, Type, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_ComponentModel_PropertyDescriptor_">TypeExtension.GetValue(object, PropertyDescriptor)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_String_System_Boolean_">TypeExtension.GetValue(object, string, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_String_">TypeExtension.GetValue(object, string)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Read__1_System_Object_System_Object_System_Int32_System_Int32_">ObjectExtension.Read&lt;T&gt;(object, object, int, int)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Read__1_System_Object_System_Int32_System_Object_System_Int32_System_Int32_">ObjectExtension.Read&lt;T&gt;(object, int, object, int, int)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_SetDictionary_System_Object_System_Collections_Generic_IDictionary_System_String_System_Object__">DictionaryExtension.SetDictionary(object, IDictionary&lt;string, object&gt;)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey_System_Object_System_String_System_Object_">TypeExtension.SetFieldKey(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey__1_System_Object_System_String_System_Object_">TypeExtension.SetFieldKey&lt;T&gt;(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey_System_Object_System_Type_System_String_System_Object_">TypeExtension.SetFieldKey(object, Type, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey_System_Object_System_String_System_Object_">TypeExtension.SetPropertyKey(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey__1_System_Object_System_String_System_Object_">TypeExtension.SetPropertyKey&lt;T&gt;(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey_System_Object_System_Type_System_String_System_Object_">TypeExtension.SetPropertyKey(object, Type, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_ComponentModel_PropertyDescriptor_System_Object_">TypeExtension.SetValue(object, PropertyDescriptor, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_String_System_Object_System_Boolean_">TypeExtension.SetValue(object, string, object, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_String_System_Object_">TypeExtension.SetValue(object, string, object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBase64String_System_Object_">ObjectExtension.ToBase64String(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBytes_System_Object_">ObjectExtension.ToBytes(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBytes_System_Object_System_Type__">ObjectExtension.ToBytes(object, out Type)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToDictionary_System_Object_">DictionaryExtension.ToDictionary(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToDictionary__1_System_Object_">DictionaryExtension.ToDictionary&lt;T&gt;(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToIDictionary_System_Object_">DictionaryExtension.ToIDictionary(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToIDictionary__1_System_Object_">DictionaryExtension.ToIDictionary&lt;T&gt;(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJson_System_Object_">ObjectExtension.ToJson(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJson_System_Object_System_Text_Json_JsonSerializerOptions_">ObjectExtension.ToJson(object, JsonSerializerOptions)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJsonWeb_System_Object_">ObjectExtension.ToJsonWeb(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJsonWeb_System_Object_System_Action_System_Text_Json_JsonSerializerOptions__">ObjectExtension.ToJsonWeb(object, Action&lt;JsonSerializerOptions&gt;)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToTryVar__1_System_Object___0_">ObjectExtension.ToTryVar&lt;T&gt;(object, T)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar__1_System_Object_">ObjectExtension.ToVar&lt;T&gt;(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar_System_Object_System_Type_System_Boolean_">ObjectExtension.ToVar(object, Type, bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar_System_Object_System_String_">ObjectExtension.ToVar(object, string)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToXml_System_Object_">ObjectExtension.ToXml(object)</a></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="localep" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync_LocalEP"></a> LocalEP <a class="header-anchor" href="#localep" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync_LocalEP&quot;&gt;&lt;/a&gt; LocalEP&quot;">​</a></h3><p>用于本地绑定的IP:Port</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Ipv4Port LocalEP { get; }</span></span></code></pre></div><h4 id="property-value" tabindex="-1">Property Value <a class="header-anchor" href="#property-value" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><h3 id="millisecond" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync_Millisecond"></a> Millisecond <a class="header-anchor" href="#millisecond" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync_Millisecond&quot;&gt;&lt;/a&gt; Millisecond&quot;">​</a></h3><p>设置连接服务器超时时间</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Millisecond { get; init; }</span></span></code></pre></div><h4 id="property-value-1" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-1" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a></p><h3 id="remoteep" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync_RemoteEP"></a> RemoteEP <a class="header-anchor" href="#remoteep" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync_RemoteEP&quot;&gt;&lt;/a&gt; RemoteEP&quot;">​</a></h3><p>用于P2P绑定的IP:Port</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Ipv4Port RemoteEP { get; }</span></span></code></pre></div><h4 id="property-value-2" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-2" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><h3 id="tcptop" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync_TcpTop"></a> TcpTop <a class="header-anchor" href="#tcptop" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync_TcpTop&quot;&gt;&lt;/a&gt; TcpTop&quot;">​</a></h3><p>TCP验证头</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Memory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;byte&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TcpTop { get; }</span></span></code></pre></div><h4 id="property-value-3" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-3" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.memory-1" target="_blank" rel="noreferrer">Memory</a>&lt;<a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_blank" rel="noreferrer">byte</a>&gt;</p><h3 id="udptop" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync_UdpTop"></a> UdpTop <a class="header-anchor" href="#udptop" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync_UdpTop&quot;&gt;&lt;/a&gt; UdpTop&quot;">​</a></h3><p>UDP验证头</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Memory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;byte&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UdpTop { get; }</span></span></code></pre></div><h4 id="property-value-4" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-4" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.memory-1" target="_blank" rel="noreferrer">Memory</a>&lt;<a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_blank" rel="noreferrer">byte</a>&gt;</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="dispose" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync_Dispose"></a> Dispose() <a class="header-anchor" href="#dispose" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync_Dispose&quot;&gt;&lt;/a&gt; Dispose\\(\\)&quot;">​</a></h3><p>回收相关资源</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Dispose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="getfree-ipendpoint-bool" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync_GetFree_System_Net_IPEndPoint_System_Boolean_"></a> GetFree(IPEndPoint, bool) <a class="header-anchor" href="#getfree-ipendpoint-bool" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync_GetFree_System_Net_IPEndPoint_System_Boolean_&quot;&gt;&lt;/a&gt; GetFree\\(IPEndPoint, bool\\)&quot;">​</a></h3><p>用于获取私有P2PServer服务器的通信消息</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ValueTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">P2pServerAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetFree</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IPEndPoint</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> endPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isTcp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>endPoint</code> <a href="https://learn.microsoft.com/dotnet/api/system.net.ipendpoint" target="_blank" rel="noreferrer">IPEndPoint</a></p><p>服务器IP端口</p><p><code>isTcp</code> <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>获取的P2P类型</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1" target="_blank" rel="noreferrer">ValueTask</a>&lt;<a href="./Tool.Sockets.P2PHelpr.P2pServerAsync.html">P2pServerAsync</a>&gt;</p><p>成功后的结果</p><h3 id="getfreetcp" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync_GetFreeTcp"></a> GetFreeTcp() <a class="header-anchor" href="#getfreetcp" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync_GetFreeTcp&quot;&gt;&lt;/a&gt; GetFreeTcp\\(\\)&quot;">​</a></h3><p>获取公共的P2PServer服务器的通信消息 TCP版本</p><table><tbody></tbody></table><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ValueTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">P2pServerAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetFreeTcp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1" target="_blank" rel="noreferrer">ValueTask</a>&lt;<a href="./Tool.Sockets.P2PHelpr.P2pServerAsync.html">P2pServerAsync</a>&gt;</p><p>成功后的结果</p><h3 id="getfreeudp" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync_GetFreeUdp"></a> GetFreeUdp() <a class="header-anchor" href="#getfreeudp" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync_GetFreeUdp&quot;&gt;&lt;/a&gt; GetFreeUdp\\(\\)&quot;">​</a></h3><p>获取公共的P2PServer服务器的通信消息 UDP版本</p><table><tbody></tbody></table><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ValueTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">P2pServerAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetFreeUdp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1" target="_blank" rel="noreferrer">ValueTask</a>&lt;<a href="./Tool.Sockets.P2PHelpr.P2pServerAsync.html">P2pServerAsync</a>&gt;</p><p>成功后的结果</p><h3 id="isp2pauth-span-byte-out-ipv4port" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync_IsP2pAuth_System_Span_System_Byte__Tool_Sockets_Kernels_Ipv4Port__"></a> IsP2pAuth(Span&lt;byte&gt;, out Ipv4Port) <a class="header-anchor" href="#isp2pauth-span-byte-out-ipv4port" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync_IsP2pAuth_System_Span_System_Byte__Tool_Sockets_Kernels_Ipv4Port__&quot;&gt;&lt;/a&gt; IsP2pAuth\\(Span&lt;byte\\&gt;, out Ipv4Port\\)&quot;">​</a></h3><p>验证一个数据流，确定它是否是符合协议的P2P（发起）协议</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IsP2pAuth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">out</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Ipv4Port</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> localEP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>span</code> <a href="https://learn.microsoft.com/dotnet/api/system.span-1" target="_blank" rel="noreferrer">Span</a>&lt;<a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_blank" rel="noreferrer">byte</a>&gt;</p><p><code>localEP</code> <a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><h3 id="isp2pwait-span-byte-out-ipv4port" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync_IsP2pWait_System_Span_System_Byte__Tool_Sockets_Kernels_Ipv4Port__"></a> IsP2pWait(Span&lt;byte&gt;, out Ipv4Port) <a class="header-anchor" href="#isp2pwait-span-byte-out-ipv4port" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync_IsP2pWait_System_Span_System_Byte__Tool_Sockets_Kernels_Ipv4Port__&quot;&gt;&lt;/a&gt; IsP2pWait\\(Span&lt;byte\\&gt;, out Ipv4Port\\)&quot;">​</a></h3><p>验证一个数据流，确定它是否是符合协议的P2P（等待）协议</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IsP2pWait</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">out</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Ipv4Port</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> localEP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>span</code> <a href="https://learn.microsoft.com/dotnet/api/system.span-1" target="_blank" rel="noreferrer">Span</a>&lt;<a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_blank" rel="noreferrer">byte</a>&gt;</p><p><code>localEP</code> <a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><h3 id="issuccess" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync_IsSuccess"></a> IsSuccess() <a class="header-anchor" href="#issuccess" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync_IsSuccess&quot;&gt;&lt;/a&gt; IsSuccess\\(\\)&quot;">​</a></h3><p>判断是否P2P是否可用</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IsSuccess</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><h3 id="okwait-cancellationtoken" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync_OkWait_System_Threading_CancellationToken_"></a> OkWait(CancellationToken) <a class="header-anchor" href="#okwait-cancellationtoken" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync_OkWait_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; OkWait\\(CancellationToken\\)&quot;">​</a></h3><p>判断是否通过双方等待验证</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OkWait</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>token</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><h3 id="p2pconnectasync-tcpclientasync-ipv4port-int" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync_P2PConnectAsync_Tool_Sockets_TcpHelper_TcpClientAsync_Tool_Sockets_Kernels_Ipv4Port_System_Int32_"></a> P2PConnectAsync(TcpClientAsync, Ipv4Port, int) <a class="header-anchor" href="#p2pconnectasync-tcpclientasync-ipv4port-int" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync_P2PConnectAsync_Tool_Sockets_TcpHelper_TcpClientAsync_Tool_Sockets_Kernels_Ipv4Port_System_Int32_&quot;&gt;&lt;/a&gt; P2PConnectAsync\\(TcpClientAsync, Ipv4Port, int\\)&quot;">​</a></h3><p>尝试发起P2P连接，通过服务器验证确保可以更可靠的完成连接</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> P2PConnectAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TcpClientAsync</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> clientAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Ipv4Port</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RemoteEP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> timedDelay</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>clientAsync</code> <a href="./Tool.Sockets.TcpHelper.TcpClientAsync.html">TcpClientAsync</a></p><p>要建立连接的对象</p><p><code>RemoteEP</code> <a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><p>连接的对方设备</p><p><code>timedDelay</code> <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a></p><p>尝试等待超时时间（不能小于1000ms）</p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><p>结果</p><h4 id="exceptions" tabindex="-1">Exceptions <a class="header-anchor" href="#exceptions" aria-label="Permalink to &quot;Exceptions&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.exception" target="_blank" rel="noreferrer">Exception</a></p><p>不可用 或 模式不一致 或 超时！</p><h3 id="p2pconnectasync-udpclientasync-ipv4port-int" tabindex="-1"><a id="Tool_Sockets_P2PHelpr_P2pServerAsync_P2PConnectAsync_Tool_Sockets_UdpHelper_UdpClientAsync_Tool_Sockets_Kernels_Ipv4Port_System_Int32_"></a> P2PConnectAsync(UdpClientAsync, Ipv4Port, int) <a class="header-anchor" href="#p2pconnectasync-udpclientasync-ipv4port-int" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_P2PHelpr_P2pServerAsync_P2PConnectAsync_Tool_Sockets_UdpHelper_UdpClientAsync_Tool_Sockets_Kernels_Ipv4Port_System_Int32_&quot;&gt;&lt;/a&gt; P2PConnectAsync\\(UdpClientAsync, Ipv4Port, int\\)&quot;">​</a></h3><p>尝试发起P2P连接，通过服务器验证确保可以更可靠的完成连接</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> P2PConnectAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UdpClientAsync</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> clientAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Ipv4Port</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RemoteEP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> timedDelay</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>clientAsync</code> <a href="./Tool.Sockets.UdpHelper.UdpClientAsync.html">UdpClientAsync</a></p><p>要建立连接的对象</p><p><code>RemoteEP</code> <a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><p>连接的对方设备</p><p><code>timedDelay</code> <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a></p><p>尝试等待超时时间（不能小于1000ms）</p><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><p>结果</p><h4 id="exceptions-1" tabindex="-1">Exceptions <a class="header-anchor" href="#exceptions-1" aria-label="Permalink to &quot;Exceptions&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.exception" target="_blank" rel="noreferrer">Exception</a></p><p>不可用 或 模式不一致 或 超时！</p>',127)]))}const d=t(o,[["render",n]]);export{y as __pageData,d as default};
