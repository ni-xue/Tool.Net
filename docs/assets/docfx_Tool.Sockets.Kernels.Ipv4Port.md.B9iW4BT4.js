import{_ as r,c as n,a2 as i,j as s,a as e,G as a,B as l,o as p}from"./chunks/framework.CQii86iU.js";const g=JSON.parse('{"title":"Struct Ipv4Port","description":"","frontmatter":{},"headers":[],"relativePath":"docfx/Tool.Sockets.Kernels.Ipv4Port.md","filePath":"zh/docfx/Tool.Sockets.Kernels.Ipv4Port.md"}'),h={name:"docfx/Tool.Sockets.Kernels.Ipv4Port.md"};function _(c,t,d,y,k,b){const o=l("xref");return p(),n("div",null,[t[21]||(t[21]=i('<h1 id="struct-ipv4port" tabindex="-1"><a id="Tool_Sockets_Kernels_Ipv4Port"></a> Struct Ipv4Port <a class="header-anchor" href="#struct-ipv4port" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_Ipv4Port&quot;&gt;&lt;/a&gt; Struct Ipv4Port&quot;">​</a></h1><p>Namespace: <a href="./Tool.Sockets.Kernels.html">Tool.Sockets.Kernels</a><br> Assembly: Tool.Net.dll</p><p>用于IP:Port信息</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> readonly</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Ipv4Port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IEquatable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Ipv4Port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.iequatable-1" target="_blank" rel="noreferrer">IEquatable&lt;Ipv4Port&gt;</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h4 id="extension-methods" tabindex="-1">Extension Methods <a class="header-anchor" href="#extension-methods" aria-label="Permalink to &quot;Extension Methods&quot;">​</a></h4><p><a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Add__1_System_Object_System_Object_System_Object_">ObjectExtension.Add&lt;T&gt;(object, object, object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_CopyEntity_System_Object_System_Object_System_String___">ObjectExtension.CopyEntity(object, object, params string[])</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_">ObjectExtension.EntityToJson(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_System_Boolean_">ObjectExtension.EntityToJson(object, bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_System_Boolean_System_String_">ObjectExtension.EntityToJson(object, bool, string)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_GetDictionary_System_Object_">DictionaryExtension.GetDictionary(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey_System_Object_System_String_System_Boolean__">TypeExtension.GetFieldKey(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey__1_System_Object_System_String_System_Boolean__">TypeExtension.GetFieldKey&lt;T&gt;(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey_System_Object_System_Type_System_String_System_Boolean__">TypeExtension.GetFieldKey(object, Type, string, out bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_GetIntPtr_System_Object_">ObjectExtension.GetIntPtr(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_GetIntPtrInt_System_Object_">ObjectExtension.GetIntPtrInt(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertieFind_System_Object_System_String_System_Boolean_">TypeExtension.GetPropertieFind(object, string, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetProperties_System_Object_">TypeExtension.GetProperties(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey_System_Object_System_String_System_Boolean__">TypeExtension.GetPropertyKey(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey__1_System_Object_System_String_System_Boolean__">TypeExtension.GetPropertyKey&lt;T&gt;(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey_System_Object_System_Type_System_String_System_Boolean__">TypeExtension.GetPropertyKey(object, Type, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_ComponentModel_PropertyDescriptor_">TypeExtension.GetValue(object, PropertyDescriptor)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_String_System_Boolean_">TypeExtension.GetValue(object, string, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_String_">TypeExtension.GetValue(object, string)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Read__1_System_Object_System_Object_System_Int32_System_Int32_">ObjectExtension.Read&lt;T&gt;(object, object, int, int)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Read__1_System_Object_System_Int32_System_Object_System_Int32_System_Int32_">ObjectExtension.Read&lt;T&gt;(object, int, object, int, int)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_SetDictionary_System_Object_System_Collections_Generic_IDictionary_System_String_System_Object__">DictionaryExtension.SetDictionary(object, IDictionary&lt;string, object&gt;)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey_System_Object_System_String_System_Object_">TypeExtension.SetFieldKey(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey__1_System_Object_System_String_System_Object_">TypeExtension.SetFieldKey&lt;T&gt;(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey_System_Object_System_Type_System_String_System_Object_">TypeExtension.SetFieldKey(object, Type, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey_System_Object_System_String_System_Object_">TypeExtension.SetPropertyKey(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey__1_System_Object_System_String_System_Object_">TypeExtension.SetPropertyKey&lt;T&gt;(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey_System_Object_System_Type_System_String_System_Object_">TypeExtension.SetPropertyKey(object, Type, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_ComponentModel_PropertyDescriptor_System_Object_">TypeExtension.SetValue(object, PropertyDescriptor, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_String_System_Object_System_Boolean_">TypeExtension.SetValue(object, string, object, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_String_System_Object_">TypeExtension.SetValue(object, string, object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBase64String_System_Object_">ObjectExtension.ToBase64String(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBytes_System_Object_">ObjectExtension.ToBytes(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBytes_System_Object_System_Type__">ObjectExtension.ToBytes(object, out Type)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToDictionary_System_Object_">DictionaryExtension.ToDictionary(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToDictionary__1_System_Object_">DictionaryExtension.ToDictionary&lt;T&gt;(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToIDictionary_System_Object_">DictionaryExtension.ToIDictionary(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToIDictionary__1_System_Object_">DictionaryExtension.ToIDictionary&lt;T&gt;(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJson_System_Object_">ObjectExtension.ToJson(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJson_System_Object_System_Text_Json_JsonSerializerOptions_">ObjectExtension.ToJson(object, JsonSerializerOptions)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJsonWeb_System_Object_">ObjectExtension.ToJsonWeb(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJsonWeb_System_Object_System_Action_System_Text_Json_JsonSerializerOptions__">ObjectExtension.ToJsonWeb(object, Action&lt;JsonSerializerOptions&gt;)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToTryVar__1_System_Object___0_">ObjectExtension.ToTryVar&lt;T&gt;(object, T)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar__1_System_Object_">ObjectExtension.ToVar&lt;T&gt;(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar_System_Object_System_Type_System_Boolean_">ObjectExtension.ToVar(object, Type, bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar_System_Object_System_String_">ObjectExtension.ToVar(object, string)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToXml_System_Object_">ObjectExtension.ToXml(object)</a></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="empty" tabindex="-1"><a id="Tool_Sockets_Kernels_Ipv4Port_Empty"></a> Empty <a class="header-anchor" href="#empty" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_Ipv4Port_Empty&quot;&gt;&lt;/a&gt; Empty&quot;">​</a></h3><p>获取一个空类型</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Ipv4Port Empty { get; }</span></span></code></pre></div><h4 id="property-value" tabindex="-1">Property Value <a class="header-anchor" href="#property-value" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><h3 id="ip" tabindex="-1"><a id="Tool_Sockets_Kernels_Ipv4Port_Ip"></a> Ip <a class="header-anchor" href="#ip" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_Ipv4Port_Ip&quot;&gt;&lt;/a&gt; Ip&quot;">​</a></h3>',17)),s("p",null,[t[0]||(t[0]=e("获取 ")),a(o,{href:"System.Net.IPAddress","data-throw-if-not-resolved":"false"}),t[1]||(t[1]=e(" 对象"))]),t[22]||(t[22]=i('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IPAddress Ip { get; }</span></span></code></pre></div><h4 id="property-value-1" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-1" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.net.ipaddress" target="_blank" rel="noreferrer">IPAddress</a></p><h3 id="isempty" tabindex="-1"><a id="Tool_Sockets_Kernels_Ipv4Port_IsEmpty"></a> IsEmpty <a class="header-anchor" href="#isempty" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_Ipv4Port_IsEmpty&quot;&gt;&lt;/a&gt; IsEmpty&quot;">​</a></h3><p>判断当前值是否为空</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IsEmpty { get; }</span></span></code></pre></div><h4 id="property-value-2" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-2" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><h3 id="port" tabindex="-1"><a id="Tool_Sockets_Kernels_Ipv4Port_Port"></a> Port <a class="header-anchor" href="#port" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_Ipv4Port_Port&quot;&gt;&lt;/a&gt; Port&quot;">​</a></h3><p>获取端口号</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ushort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Port { get; }</span></span></code></pre></div><h4 id="property-value-3" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-3" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.uint16" target="_blank" rel="noreferrer">ushort</a></p><h3 id="span" tabindex="-1"><a id="Tool_Sockets_Kernels_Ipv4Port_Span"></a> Span <a class="header-anchor" href="#span" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_Ipv4Port_Span&quot;&gt;&lt;/a&gt; Span&quot;">​</a></h3><p>当前IP:Port信息内存数据</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Span</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;byte&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Span { get; }</span></span></code></pre></div><h4 id="property-value-4" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-4" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.span-1" target="_blank" rel="noreferrer">Span</a>&lt;<a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_blank" rel="noreferrer">byte</a>&gt;</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="copyto-span-byte" tabindex="-1"><a id="Tool_Sockets_Kernels_Ipv4Port_CopyTo_System_Span_System_Byte__"></a> CopyTo(Span&lt;byte&gt;) <a class="header-anchor" href="#copyto-span-byte" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_Ipv4Port_CopyTo_System_Span_System_Byte__&quot;&gt;&lt;/a&gt; CopyTo\\(Span&lt;byte\\&gt;\\)&quot;">​</a></h3><p>将IP:Port信息拷贝到内存</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CopyTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">destination</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>destination</code> <a href="https://learn.microsoft.com/dotnet/api/system.span-1" target="_blank" rel="noreferrer">Span</a>&lt;<a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_blank" rel="noreferrer">byte</a>&gt;</p><p>内存数据</p><h3 id="equals-ipv4port" tabindex="-1"><a id="Tool_Sockets_Kernels_Ipv4Port_Equals_Tool_Sockets_Kernels_Ipv4Port_"></a> Equals(Ipv4Port) <a class="header-anchor" href="#equals-ipv4port" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_Ipv4Port_Equals_Tool_Sockets_Kernels_Ipv4Port_&quot;&gt;&lt;/a&gt; Equals\\(Ipv4Port\\)&quot;">​</a></h3><p>判断是否一致</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Equals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Ipv4Port</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> other</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>other</code> <a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><p>比较值</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>是或否</p><h3 id="equals-object" tabindex="-1"><a id="Tool_Sockets_Kernels_Ipv4Port_Equals_System_Object_"></a> Equals(object) <a class="header-anchor" href="#equals-object" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_Ipv4Port_Equals_System_Object_&quot;&gt;&lt;/a&gt; Equals\\(object\\)&quot;">​</a></h3><p>比较两个值是否一致</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Equals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>obj</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a></p><p>比较值</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>是或否</p><h3 id="gethashcode" tabindex="-1"><a id="Tool_Sockets_Kernels_Ipv4Port_GetHashCode"></a> GetHashCode() <a class="header-anchor" href="#gethashcode" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_Ipv4Port_GetHashCode&quot;&gt;&lt;/a&gt; GetHashCode\\(\\)&quot;">​</a></h3><p>获取哈希值</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GetHashCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a></p><p>哈希值</p><h3 id="tostring" tabindex="-1"><a id="Tool_Sockets_Kernels_Ipv4Port_ToString"></a> ToString() <a class="header-anchor" href="#tostring" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_Ipv4Port_ToString&quot;&gt;&lt;/a&gt; ToString\\(\\)&quot;">​</a></h3><p>获取IP:Port信息</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ToString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>结果</p><h2 id="operators" tabindex="-1">Operators <a class="header-anchor" href="#operators" aria-label="Permalink to &quot;Operators&quot;">​</a></h2><h3 id="operator-ipv4port-ipv4port" tabindex="-1"><a id="Tool_Sockets_Kernels_Ipv4Port_op_Equality_Tool_Sockets_Kernels_Ipv4Port_Tool_Sockets_Kernels_Ipv4Port_"></a> operator ==(Ipv4Port, Ipv4Port) <a class="header-anchor" href="#operator-ipv4port-ipv4port" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_Ipv4Port_op_Equality_Tool_Sockets_Kernels_Ipv4Port_Tool_Sockets_Kernels_Ipv4Port_&quot;&gt;&lt;/a&gt; operator ==\\(Ipv4Port, Ipv4Port\\)&quot;">​</a></h3>',57)),s("p",null,[t[2]||(t[2]=e("指示两个 ")),a(o,{href:"Tool.Sockets.Kernels.Ipv4Port","data-throw-if-not-resolved":"false"}),t[3]||(t[3]=e(" 结构是否相等。"))]),t[23]||(t[23]=i('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> operator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ==(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Ipv4Port</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Ipv4Port</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>a</code> <a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><p>相等运算符左侧的结构</p><p><code>b</code> <a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><p>相等运算符右侧的结构</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>如果 true 等于 a，则为 b；否则为 false。</p><h3 id="implicit-operator-ipv4port-string" tabindex="-1"><a id="Tool_Sockets_Kernels_Ipv4Port_op_Implicit_System_String__Tool_Sockets_Kernels_Ipv4Port"></a> implicit operator Ipv4Port(string) <a class="header-anchor" href="#implicit-operator-ipv4port-string" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Sockets_Kernels_Ipv4Port_op_Implicit_System_String__Tool_Sockets_Kernels_Ipv4Port&quot;&gt;&lt;/a&gt; implicit operator Ipv4Port\\(string\\)&quot;">​</a></h3>',10)),s("p",null,[t[4]||(t[4]=e("定义从 ")),a(o,{href:"System.String","data-throw-if-not-resolved":"false"}),t[5]||(t[5]=e(" 对象到 ")),a(o,{href:"Tool.Sockets.Kernels.Ipv4Port","data-throw-if-not-resolved":"false"}),t[6]||(t[6]=e(" 对象的隐式转换。"))]),t[24]||(t[24]=i('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> implicit </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Ipv4Port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ipport</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>ipport</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>要转换的对象。</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p>',6)),s("p",null,[t[7]||(t[7]=e("转换的 ")),a(o,{href:"Tool.Sockets.Kernels.Ipv4Port","data-throw-if-not-resolved":"false"}),t[8]||(t[8]=e(" 对象。"))]),t[25]||(t[25]=s("h3",{id:"implicit-operator-ipv4port-userkey",tabindex:"-1"},[s("a",{id:"Tool_Sockets_Kernels_Ipv4Port_op_Implicit_Tool_Sockets_Kernels_UserKey__Tool_Sockets_Kernels_Ipv4Port"}),e(" implicit operator Ipv4Port(UserKey) "),s("a",{class:"header-anchor",href:"#implicit-operator-ipv4port-userkey","aria-label":'Permalink to "<a id="Tool_Sockets_Kernels_Ipv4Port_op_Implicit_Tool_Sockets_Kernels_UserKey__Tool_Sockets_Kernels_Ipv4Port"></a> implicit operator Ipv4Port\\(UserKey\\)"'},"​")],-1)),s("p",null,[t[9]||(t[9]=e("定义从 ")),a(o,{href:"Tool.Sockets.Kernels.UserKey","data-throw-if-not-resolved":"false"}),t[10]||(t[10]=e(" 对象到 ")),a(o,{href:"Tool.Sockets.Kernels.Ipv4Port","data-throw-if-not-resolved":"false"}),t[11]||(t[11]=e(" 对象的隐式转换。"))]),t[26]||(t[26]=i('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> implicit </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Ipv4Port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UserKey</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ipport</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>ipport</code> <a href="./Tool.Sockets.Kernels.UserKey.html">UserKey</a></p><p>要转换的对象。</p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p>',6)),s("p",null,[t[12]||(t[12]=e("转换的 ")),a(o,{href:"Tool.Sockets.Kernels.Ipv4Port","data-throw-if-not-resolved":"false"}),t[13]||(t[13]=e(" 对象。"))]),t[27]||(t[27]=s("h3",{id:"implicit-operator-string-ipv4port",tabindex:"-1"},[s("a",{id:"Tool_Sockets_Kernels_Ipv4Port_op_Implicit_Tool_Sockets_Kernels_Ipv4Port__System_String"}),e(" implicit operator string(Ipv4Port) "),s("a",{class:"header-anchor",href:"#implicit-operator-string-ipv4port","aria-label":'Permalink to "<a id="Tool_Sockets_Kernels_Ipv4Port_op_Implicit_Tool_Sockets_Kernels_Ipv4Port__System_String"></a> implicit operator string\\(Ipv4Port\\)"'},"​")],-1)),s("p",null,[t[14]||(t[14]=e("定义从 ")),a(o,{href:"Tool.Sockets.Kernels.Ipv4Port","data-throw-if-not-resolved":"false"}),t[15]||(t[15]=e(" 对象到 ")),a(o,{href:"System.String","data-throw-if-not-resolved":"false"}),t[16]||(t[16]=e(" 对象的隐式转换。"))]),t[28]||(t[28]=i('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> implicit </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Ipv4Port</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ipport</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>ipport</code> <a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><p>要转换的对象。</p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p>',6)),s("p",null,[t[17]||(t[17]=e("转换的 ")),a(o,{href:"System.String","data-throw-if-not-resolved":"false"}),t[18]||(t[18]=e(" 对象。"))]),t[29]||(t[29]=s("h3",{id:"operator-ipv4port-ipv4port-1",tabindex:"-1"},[s("a",{id:"Tool_Sockets_Kernels_Ipv4Port_op_Inequality_Tool_Sockets_Kernels_Ipv4Port_Tool_Sockets_Kernels_Ipv4Port_"}),e(" operator !=(Ipv4Port, Ipv4Port) "),s("a",{class:"header-anchor",href:"#operator-ipv4port-ipv4port-1","aria-label":'Permalink to "<a id="Tool_Sockets_Kernels_Ipv4Port_op_Inequality_Tool_Sockets_Kernels_Ipv4Port_Tool_Sockets_Kernels_Ipv4Port_"></a> operator \\!=\\(Ipv4Port, Ipv4Port\\)"'},"​")],-1)),s("p",null,[t[19]||(t[19]=e("指示两个 ")),a(o,{href:"Tool.Sockets.Kernels.Ipv4Port","data-throw-if-not-resolved":"false"}),t[20]||(t[20]=e(" 结构是否不相等。"))]),t[30]||(t[30]=i('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operator </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Ipv4Port a, Ipv4Port b)</span></span></code></pre></div><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>a</code> <a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><p>不等运算符左侧的结构</p><p><code>b</code> <a href="./Tool.Sockets.Kernels.Ipv4Port.html">Ipv4Port</a></p><p>不等运算符右侧的结构</p><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>如果 true 不等于 a，则为 b；否则为 false。</p>',9))])}const u=r(h,[["render",_]]);export{g as __pageData,u as default};
