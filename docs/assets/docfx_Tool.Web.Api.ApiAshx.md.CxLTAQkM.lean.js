import{_ as p,c as h,j as t,a as s,G as a,w as r,a2 as i,B as l,o as c}from"./chunks/framework.CQii86iU.js";const x=JSON.parse('{"title":"Class ApiAshx","description":"","frontmatter":{},"headers":[],"relativePath":"docfx/Tool.Web.Api.ApiAshx.md","filePath":"zh/docfx/Tool.Web.Api.ApiAshx.md"}'),d={name:"docfx/Tool.Web.Api.ApiAshx.md"};function _(b,e,y,k,m,g){const n=l("example"),o=l("xref");return c(),h("div",null,[e[10]||(e[10]=t("h1",{id:"class-apiashx",tabindex:"-1"},[t("a",{id:"Tool_Web_Api_ApiAshx"}),s(" Class ApiAshx "),t("a",{class:"header-anchor",href:"#class-apiashx","aria-label":'Permalink to "<a id="Tool_Web_Api_ApiAshx"></a> Class ApiAshx"'},"​")],-1)),e[11]||(e[11]=t("p",null,[s("Namespace: "),t("a",{href:"./Tool.Web.Api.html"},"Tool.Web.Api"),t("br"),s(" Assembly: Tool.Net.dll")],-1)),e[12]||(e[12]=t("p",null,"针对于新版Ashx路由模式，的同步，异步，支持",-1)),e[13]||(e[13]=t("p",null,"该控制器，相对于Mvc的控制器轻，应有功能都有，可自由扩展。",-1)),e[14]||(e[14]=t("p",null,"方便实现，您最想实现的效果，最大的优点还是因为他轻量级。",-1)),a(n,null,{default:r(()=>e[0]||(e[0]=[s(" Api 方法创建示例： "),t("pre",null,[t("code",{class:"lang-csharp"},'public  GetApi( context)  => Json(new { msg = "路由版本api。" });')],-1)])),_:1}),a(n,null,{default:r(()=>e[1]||(e[1]=[s("Api 方法创建示例：(异步实现) "),t("pre",null,[t("code",{class:"lang-csharp"},'public async  GetTaskApi( context) => await JsonAsync(new { msg = "路由版本api。" });')],-1)])),_:1}),e[15]||(e[15]=i('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> abstract</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ApiAshx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IHttpAsynApi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IHttpApi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IDisposable</span></span></code></pre></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Tool.Web.Api.ApiAshx.html">ApiAshx</a></p><h4 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h4><p><a href="./Tool.Web.Api.ApiCore.IHttpAsynApi.html">IHttpAsynApi</a>, <a href="./Tool.Web.Api.ApiCore.IHttpApi.html">IHttpApi</a>, <a href="https://learn.microsoft.com/dotnet/api/system.idisposable" target="_blank" rel="noreferrer">IDisposable</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noreferrer">object.MemberwiseClone()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h4 id="extension-methods" tabindex="-1">Extension Methods <a class="header-anchor" href="#extension-methods" aria-label="Permalink to &quot;Extension Methods&quot;">​</a></h4><p><a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Add__1_System_Object_System_Object_System_Object_">ObjectExtension.Add&lt;T&gt;(object, object, object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_CopyEntity_System_Object_System_Object_System_String___">ObjectExtension.CopyEntity(object, object, params string[])</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_">ObjectExtension.EntityToJson(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_System_Boolean_">ObjectExtension.EntityToJson(object, bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_EntityToJson_System_Object_System_Boolean_System_String_">ObjectExtension.EntityToJson(object, bool, string)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_GetDictionary_System_Object_">DictionaryExtension.GetDictionary(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey_System_Object_System_String_System_Boolean__">TypeExtension.GetFieldKey(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey__1_System_Object_System_String_System_Boolean__">TypeExtension.GetFieldKey&lt;T&gt;(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetFieldKey_System_Object_System_Type_System_String_System_Boolean__">TypeExtension.GetFieldKey(object, Type, string, out bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_GetIntPtr_System_Object_">ObjectExtension.GetIntPtr(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_GetIntPtrInt_System_Object_">ObjectExtension.GetIntPtrInt(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertieFind_System_Object_System_String_System_Boolean_">TypeExtension.GetPropertieFind(object, string, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetProperties_System_Object_">TypeExtension.GetProperties(object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey_System_Object_System_String_System_Boolean__">TypeExtension.GetPropertyKey(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey__1_System_Object_System_String_System_Boolean__">TypeExtension.GetPropertyKey&lt;T&gt;(object, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetPropertyKey_System_Object_System_Type_System_String_System_Boolean__">TypeExtension.GetPropertyKey(object, Type, string, out bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_ComponentModel_PropertyDescriptor_">TypeExtension.GetValue(object, PropertyDescriptor)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_String_System_Boolean_">TypeExtension.GetValue(object, string, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_GetValue_System_Object_System_String_">TypeExtension.GetValue(object, string)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Read__1_System_Object_System_Object_System_Int32_System_Int32_">ObjectExtension.Read&lt;T&gt;(object, object, int, int)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_Read__1_System_Object_System_Int32_System_Object_System_Int32_System_Int32_">ObjectExtension.Read&lt;T&gt;(object, int, object, int, int)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_SetDictionary_System_Object_System_Collections_Generic_IDictionary_System_String_System_Object__">DictionaryExtension.SetDictionary(object, IDictionary&lt;string, object&gt;)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey_System_Object_System_String_System_Object_">TypeExtension.SetFieldKey(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey__1_System_Object_System_String_System_Object_">TypeExtension.SetFieldKey&lt;T&gt;(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetFieldKey_System_Object_System_Type_System_String_System_Object_">TypeExtension.SetFieldKey(object, Type, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey_System_Object_System_String_System_Object_">TypeExtension.SetPropertyKey(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey__1_System_Object_System_String_System_Object_">TypeExtension.SetPropertyKey&lt;T&gt;(object, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetPropertyKey_System_Object_System_Type_System_String_System_Object_">TypeExtension.SetPropertyKey(object, Type, string, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_ComponentModel_PropertyDescriptor_System_Object_">TypeExtension.SetValue(object, PropertyDescriptor, object)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_String_System_Object_System_Boolean_">TypeExtension.SetValue(object, string, object, bool)</a>, <a href="./Tool.Utils.TypeExtension.html#Tool_Utils_TypeExtension_SetValue_System_Object_System_String_System_Object_">TypeExtension.SetValue(object, string, object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBase64String_System_Object_">ObjectExtension.ToBase64String(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBytes_System_Object_">ObjectExtension.ToBytes(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToBytes_System_Object_System_Type__">ObjectExtension.ToBytes(object, out Type)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToDictionary_System_Object_">DictionaryExtension.ToDictionary(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToDictionary__1_System_Object_">DictionaryExtension.ToDictionary&lt;T&gt;(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToIDictionary_System_Object_">DictionaryExtension.ToIDictionary(object)</a>, <a href="./Tool.Utils.Data.DictionaryExtension.html#Tool_Utils_Data_DictionaryExtension_ToIDictionary__1_System_Object_">DictionaryExtension.ToIDictionary&lt;T&gt;(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJson_System_Object_">ObjectExtension.ToJson(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJson_System_Object_System_Text_Json_JsonSerializerOptions_">ObjectExtension.ToJson(object, JsonSerializerOptions)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJsonWeb_System_Object_">ObjectExtension.ToJsonWeb(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToJsonWeb_System_Object_System_Action_System_Text_Json_JsonSerializerOptions__">ObjectExtension.ToJsonWeb(object, Action&lt;JsonSerializerOptions&gt;)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToTryVar__1_System_Object___0_">ObjectExtension.ToTryVar&lt;T&gt;(object, T)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar__1_System_Object_">ObjectExtension.ToVar&lt;T&gt;(object)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar_System_Object_System_Type_System_Boolean_">ObjectExtension.ToVar(object, Type, bool)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToVar_System_Object_System_String_">ObjectExtension.ToVar(object, string)</a>, <a href="./Tool.ObjectExtension.html#Tool_ObjectExtension_ToXml_System_Object_">ObjectExtension.ToXml(object)</a></p><h2 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h2><p>代码由逆血提供支持</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="apikey" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_ApiKey"></a> ApiKey <a class="header-anchor" href="#apikey" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_ApiKey&quot;&gt;&lt;/a&gt; ApiKey&quot;">​</a></h3><p>获取当前请求的接口唯一ID</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ApiKey { get; }</span></span></code></pre></div><h4 id="property-value" tabindex="-1">Property Value <a class="header-anchor" href="#property-value" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><h3 id="contentlength" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_ContentLength"></a> ContentLength <a class="header-anchor" href="#contentlength" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_ContentLength&quot;&gt;&lt;/a&gt; ContentLength&quot;">​</a></h3><p>指定客户端发送的内容长度（以字节计）。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> long?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ContentLength { get; }</span></span></code></pre></div><h4 id="property-value-1" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-1" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.int64" target="_blank" rel="noreferrer">long</a>?</p><h3 id="contenttype" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_ContentType"></a> ContentType <a class="header-anchor" href="#contenttype" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_ContentType&quot;&gt;&lt;/a&gt; ContentType&quot;">​</a></h3><p>获取或设置传入请求的 MIME 内容类型。(ContentType)</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ContentType { get; set; }</span></span></code></pre></div><h4 id="property-value-2" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-2" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><h3 id="context" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_Context"></a> Context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_Context&quot;&gt;&lt;/a&gt; Context&quot;">​</a></h3>',28)),t("p",null,[e[2]||(e[2]=s("获取当前 请求获取 ")),a(o,{href:"Microsoft.AspNetCore.Http.HttpContext","data-throw-if-not-resolved":"false"}),e[3]||(e[3]=s(" 对象。"))]),e[16]||(e[16]=i('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HttpContext Context { get; }</span></span></code></pre></div><h4 id="property-value-3" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-3" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http.httpcontext" target="_blank" rel="noreferrer">HttpContext</a></p><h3 id="cookies" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_Cookies"></a> Cookies <a class="header-anchor" href="#cookies" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_Cookies&quot;&gt;&lt;/a&gt; Cookies&quot;">​</a></h3><p>获取客户端发送的 Cookie 的集合。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IRequestCookieCollection Cookies { get; }</span></span></code></pre></div><h4 id="property-value-4" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-4" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http.irequestcookiecollection" target="_blank" rel="noreferrer">IRequestCookieCollection</a></p><h3 id="httpmethod" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_HttpMethod"></a> HttpMethod <a class="header-anchor" href="#httpmethod" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_HttpMethod&quot;&gt;&lt;/a&gt; HttpMethod&quot;">​</a></h3><p>获取客户端使用的 HTTP 数据传输方法（如 GET、POST 或 HEAD）。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HttpMethod { get; }</span></span></code></pre></div><h4 id="property-value-5" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-5" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><h3 id="request" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_Request"></a> Request <a class="header-anchor" href="#request" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_Request&quot;&gt;&lt;/a&gt; Request&quot;">​</a></h3>',14)),t("p",null,[e[4]||(e[4]=s("获取当前 HTTP 请求的 ")),a(o,{href:"Microsoft.AspNetCore.Http.HttpRequest","data-throw-if-not-resolved":"false"}),e[5]||(e[5]=s(" 对象。"))]),e[17]||(e[17]=i('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HttpRequest Request { get; }</span></span></code></pre></div><h4 id="property-value-6" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-6" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http.httprequest" target="_blank" rel="noreferrer">HttpRequest</a></p><h3 id="requestbody" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_RequestBody"></a> RequestBody <a class="header-anchor" href="#requestbody" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_RequestBody&quot;&gt;&lt;/a&gt; RequestBody&quot;">​</a></h3><p>获取传入的 HTTP 实体主体的内容。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Stream RequestBody { get; }</span></span></code></pre></div><h4 id="property-value-7" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-7" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.io.stream" target="_blank" rel="noreferrer">Stream</a></p><h3 id="response" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_Response"></a> Response <a class="header-anchor" href="#response" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_Response&quot;&gt;&lt;/a&gt; Response&quot;">​</a></h3>',9)),t("p",null,[e[6]||(e[6]=s("获取当前 HTTP 响应的 ")),a(o,{href:"Microsoft.AspNetCore.Http.HttpResponse","data-throw-if-not-resolved":"false"}),e[7]||(e[7]=s(" 对象。"))]),e[18]||(e[18]=i('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HttpResponse Response { get; }</span></span></code></pre></div><h4 id="property-value-8" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-8" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http.httpresponse" target="_blank" rel="noreferrer">HttpResponse</a></p><h3 id="responsebody" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_ResponseBody"></a> ResponseBody <a class="header-anchor" href="#responsebody" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_ResponseBody&quot;&gt;&lt;/a&gt; ResponseBody&quot;">​</a></h3><p>启用到输出 HTTP 内容主体的二进制输出。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Stream ResponseBody { get; }</span></span></code></pre></div><h4 id="property-value-9" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-9" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.io.stream" target="_blank" rel="noreferrer">Stream</a></p><h4 id="exceptions" tabindex="-1">Exceptions <a class="header-anchor" href="#exceptions" aria-label="Permalink to &quot;Exceptions&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.exception" target="_blank" rel="noreferrer">Exception</a></p><p>Body 不可用。</p><h3 id="routedata" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_RouteData"></a> RouteData <a class="header-anchor" href="#routedata" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_RouteData&quot;&gt;&lt;/a&gt; RouteData&quot;">​</a></h3><p>路由模式</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AshxRouteData RouteData { get; }</span></span></code></pre></div><h4 id="property-value-10" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-10" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="./Tool.Web.Routing.AshxRouteData.html">AshxRouteData</a></p><h3 id="session" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_Session"></a> Session <a class="header-anchor" href="#session" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_Session&quot;&gt;&lt;/a&gt; Session&quot;">​</a></h3>',17)),t("p",null,[e[8]||(e[8]=s("为当前 HTTP 请求获取 ")),a(o,{href:"Microsoft.AspNetCore.Http.ISession","data-throw-if-not-resolved":"false"}),e[9]||(e[9]=s(" 对象。"))]),e[19]||(e[19]=i('<div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ISession Session { get; }</span></span></code></pre></div><h4 id="property-value-11" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-11" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http.isession" target="_blank" rel="noreferrer">ISession</a></p><h3 id="totalbytes" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_TotalBytes"></a> TotalBytes <a class="header-anchor" href="#totalbytes" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_TotalBytes&quot;&gt;&lt;/a&gt; TotalBytes&quot;">​</a></h3><p>获取当前输入流中的字节数。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TotalBytes { get; }</span></span></code></pre></div><h4 id="property-value-12" tabindex="-1">Property Value <a class="header-anchor" href="#property-value-12" aria-label="Permalink to &quot;Property Value&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.int64" target="_blank" rel="noreferrer">long</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="ashxexception-ashxexception" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_AshxException_Tool_Web_Api_AshxException_"></a> AshxException(AshxException) <a class="header-anchor" href="#ashxexception-ashxexception" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_AshxException_Tool_Web_Api_AshxException_&quot;&gt;&lt;/a&gt; AshxException\\(AshxException\\)&quot;">​</a></h3><p>当前API接口发生异常时触发</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> virtual</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AshxException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AshxException</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>ex</code> <a href="./Tool.Web.Api.AshxException.html">AshxException</a></p><p>异常信息</p><h3 id="initialize-ashx" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_Initialize_Tool_Web_Api_Ashx_"></a> Initialize(Ashx) <a class="header-anchor" href="#initialize-ashx" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_Initialize_Tool_Web_Api_Ashx_&quot;&gt;&lt;/a&gt; Initialize\\(Ashx\\)&quot;">​</a></h3><p>当链接真实有效时被执行，默认返回成功。（该方法是用于给使用者重写的）</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> virtual</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Ashx</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ashx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>ashx</code> <a href="./Tool.Web.Api.Ashx.html">Ashx</a></p><p>当前可以被调起的接口信息</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>当前请求会根据返回状态决定是否继续执行接口方法</p><h3 id="json-object" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_Json_System_Object_"></a> Json(object) <a class="header-anchor" href="#json-object" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_Json_System_Object_&quot;&gt;&lt;/a&gt; Json\\(object\\)&quot;">​</a></h3><p>Json 格式输出，将 System.Object 写入 HTTP 响应流。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>obj</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a></p><p>要写入 HTTP 输出流的 System.Object。</p><h3 id="json-object-jsonserializeroptions" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_Json_System_Object_System_Text_Json_JsonSerializerOptions_"></a> Json(object, JsonSerializerOptions) <a class="header-anchor" href="#json-object-jsonserializeroptions" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_Json_System_Object_System_Text_Json_JsonSerializerOptions_&quot;&gt;&lt;/a&gt; Json\\(object, JsonSerializerOptions\\)&quot;">​</a></h3><p>Json 格式输出，将 System.Object 写入 HTTP 响应流。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">JsonSerializerOptions</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JsonOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>obj</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a></p><p>要写入 HTTP 输出流的 System.Object。</p><p><code>JsonOptions</code> <a href="https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions" target="_blank" rel="noreferrer">JsonSerializerOptions</a></p><p>Json 特殊格式输出</p><h3 id="jsonasync-object" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_JsonAsync_System_Object_"></a> JsonAsync(object) <a class="header-anchor" href="#jsonasync-object" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_JsonAsync_System_Object_&quot;&gt;&lt;/a&gt; JsonAsync\\(object\\)&quot;">​</a></h3><p>Json 格式输出，将 System.Object 写入 HTTP 响应流。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JsonAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>obj</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a></p><p>要写入 HTTP 输出流的 System.Object。</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><h3 id="jsonasync-object-jsonserializeroptions" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_JsonAsync_System_Object_System_Text_Json_JsonSerializerOptions_"></a> JsonAsync(object, JsonSerializerOptions) <a class="header-anchor" href="#jsonasync-object-jsonserializeroptions" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_JsonAsync_System_Object_System_Text_Json_JsonSerializerOptions_&quot;&gt;&lt;/a&gt; JsonAsync\\(object, JsonSerializerOptions\\)&quot;">​</a></h3><p>Json 格式输出，将 System.Object 写入 HTTP 响应流。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JsonAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">JsonSerializerOptions</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JsonOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>obj</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a></p><p>要写入 HTTP 输出流的 System.Object。</p><p><code>JsonOptions</code> <a href="https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions" target="_blank" rel="noreferrer">JsonSerializerOptions</a></p><p>Json 特殊格式输出</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><h3 id="onresult-ashx" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_OnResult_Tool_Web_Api_Ashx_"></a> OnResult(Ashx) <a class="header-anchor" href="#onresult-ashx" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_OnResult_Tool_Web_Api_Ashx_&quot;&gt;&lt;/a&gt; OnResult\\(Ashx\\)&quot;">​</a></h3><p>在请求正常完成结束时触发</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> virtual</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Ashx</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ashx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>ashx</code> <a href="./Tool.Web.Api.Ashx.html">Ashx</a></p><p>获取接口信息</p><h3 id="redirect-string-bool" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_Redirect_System_String_System_Boolean_"></a> Redirect(string, bool) <a class="header-anchor" href="#redirect-string-bool" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_Redirect_System_String_System_Boolean_&quot;&gt;&lt;/a&gt; Redirect\\(string, bool\\)&quot;">​</a></h3><p>将客户端重定向到新的 URL。 指定新的 URL 并指定当前页的执行是否应终止。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Redirect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> endResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>url</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>目标的位置。</p><p><code>endResponse</code> <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>指示当前页的执行是否应终止。</p><h4 id="exceptions-1" tabindex="-1">Exceptions <a class="header-anchor" href="#exceptions-1" aria-label="Permalink to &quot;Exceptions&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noreferrer">ArgumentNullException</a></p><p>url 为 null。</p><p><a href="https://learn.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noreferrer">ArgumentException</a></p><p>url 包含换行符。</p><p><a href="https://learn.microsoft.com/dotnet/api/system.exception" target="_blank" rel="noreferrer">Exception</a></p><p>在发送了 HTTP 头之后尝试重定向。</p><p><a href="https://learn.microsoft.com/dotnet/api/system.applicationexception" target="_blank" rel="noreferrer">ApplicationException</a></p><p>页请求是回调的结果。</p><h3 id="redirect-string" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_Redirect_System_String_"></a> Redirect(string) <a class="header-anchor" href="#redirect-string" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_Redirect_System_String_&quot;&gt;&lt;/a&gt; Redirect\\(string\\)&quot;">​</a></h3><p>将请求重定向到新 URL 并指定该新 URL。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Redirect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>url</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>目标位置。</p><h4 id="exceptions-2" tabindex="-1">Exceptions <a class="header-anchor" href="#exceptions-2" aria-label="Permalink to &quot;Exceptions&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.exception" target="_blank" rel="noreferrer">Exception</a></p><p>在发送了 HTTP 头之后尝试重定向。</p><h3 id="write-object" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_Write_System_Object_"></a> Write(object) <a class="header-anchor" href="#write-object" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_Write_System_Object_&quot;&gt;&lt;/a&gt; Write\\(object\\)&quot;">​</a></h3><p>将 System.Object 写入 HTTP 响应流。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>obj</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a></p><p>要写入 HTTP 输出流的 System.Object。</p><h3 id="write-string" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_Write_System_String_"></a> Write(string) <a class="header-anchor" href="#write-string" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_Write_System_String_&quot;&gt;&lt;/a&gt; Write\\(string\\)&quot;">​</a></h3><p>将一个字符串写入 HTTP 响应输出流。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>test</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>要写入 HTTP 输出流的字符串。</p><h3 id="write-object-writetype" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_Write_System_Object_Tool_Web_Api_WriteType_"></a> Write(object, WriteType) <a class="header-anchor" href="#write-object-writetype" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_Write_System_Object_Tool_Web_Api_WriteType_&quot;&gt;&lt;/a&gt; Write\\(object, WriteType\\)&quot;">​</a></h3><p>将 System.Object 写入 HTTP 响应流。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WriteType</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> contentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-11" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-11" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>obj</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a></p><p>要写入 HTTP 输出流的 System.Object。</p><p><code>contentType</code> <a href="./Tool.Web.Api.WriteType.html">WriteType</a></p><p>返回客户端的类型</p><h3 id="writeasync-object" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_WriteAsync_System_Object_"></a> WriteAsync(object) <a class="header-anchor" href="#writeasync-object" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_WriteAsync_System_Object_&quot;&gt;&lt;/a&gt; WriteAsync\\(object\\)&quot;">​</a></h3><p>将 System.Object 写入 HTTP 响应流。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WriteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-12" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-12" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>obj</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a></p><p>要写入 HTTP 输出流的 System.Object。</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><h3 id="writeasync-string" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_WriteAsync_System_String_"></a> WriteAsync(string) <a class="header-anchor" href="#writeasync-string" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_WriteAsync_System_String_&quot;&gt;&lt;/a&gt; WriteAsync\\(string\\)&quot;">​</a></h3><p>将一个字符串写入 HTTP 响应输出流。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WriteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-13" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-13" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>test</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>要写入 HTTP 输出流的字符串。</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><h3 id="writeasync-object-writetype" tabindex="-1"><a id="Tool_Web_Api_ApiAshx_WriteAsync_System_Object_Tool_Web_Api_WriteType_"></a> WriteAsync(object, WriteType) <a class="header-anchor" href="#writeasync-object-writetype" aria-label="Permalink to &quot;&lt;a id=&quot;Tool_Web_Api_ApiAshx_WriteAsync_System_Object_Tool_Web_Api_WriteType_&quot;&gt;&lt;/a&gt; WriteAsync\\(object, WriteType\\)&quot;">​</a></h3><p>将 System.Object 写入 HTTP 响应流。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WriteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WriteType</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> contentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-14" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-14" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p><code>obj</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a></p><p>要写入 HTTP 输出流的 System.Object。</p><p><code>contentType</code> <a href="./Tool.Web.Api.WriteType.html">WriteType</a></p><p>返回客户端的类型</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p>',134))])}const T=p(d,[["render",_]]);export{x as __pageData,T as default};
