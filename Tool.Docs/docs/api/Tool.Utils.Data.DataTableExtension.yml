### YamlMime:ManagedReference
items:
- uid: Tool.Utils.Data.DataTableExtension
  commentId: T:Tool.Utils.Data.DataTableExtension
  id: DataTableExtension
  parent: Tool.Utils.Data
  children:
  - Tool.Utils.Data.DataTableExtension.CloneArray(System.Data.DataTable,System.Collections.ArrayList)
  - Tool.Utils.Data.DataTableExtension.CloneArray(System.Data.DataTable,Tool.Utils.JsonVar)
  - Tool.Utils.Data.DataTableExtension.DataTableToEntityList``1(System.Data.DataTable)
  - Tool.Utils.Data.DataTableExtension.DataTableToEntity``1(System.Data.DataTable)
  - Tool.Utils.Data.DataTableExtension.IsEmpty(System.Data.DataTable)
  - Tool.Utils.Data.DataTableExtension.TableToJson(System.Data.DataTable)
  - Tool.Utils.Data.DataTableExtension.TableToJson(System.Data.DataTable,System.Boolean)
  - Tool.Utils.Data.DataTableExtension.TableToJson(System.Data.DataTable,System.Boolean,System.String)
  - Tool.Utils.Data.DataTableExtension.ToArray(System.Data.DataTable)
  - Tool.Utils.Data.DataTableExtension.ToArrayIf(System.Data.DataTable,System.Func{System.String,System.Object,System.Object})
  - Tool.Utils.Data.DataTableExtension.ToDictionary(System.Data.DataTable)
  - Tool.Utils.Data.DataTableExtension.ToDictionaryIf(System.Data.DataTable,System.Func{System.String,System.Object,System.Object})
  - Tool.Utils.Data.DataTableExtension.ToEntityList``1(System.Data.DataTable)
  - Tool.Utils.Data.DataTableExtension.ToEntityList``1(System.Data.DataTable,System.Int32[])
  - Tool.Utils.Data.DataTableExtension.ToEntity``1(System.Data.DataTable)
  - Tool.Utils.Data.DataTableExtension.ToEntity``1(System.Data.DataTable,System.Int32)
  - Tool.Utils.Data.DataTableExtension.ToObject(System.Data.DataTable)
  langs:
  - csharp
  - vb
  name: DataTableExtension
  nameWithType: DataTableExtension
  fullName: Tool.Utils.Data.DataTableExtension
  type: Class
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: DataTableExtension
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 14
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: 对DataTable进行升级
  remarks: 代码由逆血提供支持
  example: []
  syntax:
    content: public static class DataTableExtension
    content.vb: Public Module DataTableExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Tool.Utils.Data.DataTableExtension.IsEmpty(System.Data.DataTable)
  commentId: M:Tool.Utils.Data.DataTableExtension.IsEmpty(System.Data.DataTable)
  id: IsEmpty(System.Data.DataTable)
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: IsEmpty(DataTable)
  nameWithType: DataTableExtension.IsEmpty(DataTable)
  fullName: Tool.Utils.Data.DataTableExtension.IsEmpty(System.Data.DataTable)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: IsEmpty
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 21
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: 判断<xref href="System.Data.DataTable" data-throw-if-not-resolved="false"></xref>对象中的是否为空，行为空，对象为空
  example: []
  syntax:
    content: public static bool IsEmpty(this DataTable table)
    parameters:
    - id: table
      type: System.Data.DataTable
      description: <xref href="System.Data.DataTable" data-throw-if-not-resolved="false"></xref>对象
    return:
      type: System.Boolean
      description: 返回<xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>类型
    content.vb: Public Shared Function IsEmpty(table As DataTable) As Boolean
  overload: Tool.Utils.Data.DataTableExtension.IsEmpty*
- uid: Tool.Utils.Data.DataTableExtension.ToDictionary(System.Data.DataTable)
  commentId: M:Tool.Utils.Data.DataTableExtension.ToDictionary(System.Data.DataTable)
  id: ToDictionary(System.Data.DataTable)
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: ToDictionary(DataTable)
  nameWithType: DataTableExtension.ToDictionary(DataTable)
  fullName: Tool.Utils.Data.DataTableExtension.ToDictionary(System.Data.DataTable)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: ToDictionary
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 49
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: （DataTable）转换 <xref href="System.Collections.Generic.Dictionary%602" data-throw-if-not-resolved="false"></xref> 集合
  example: []
  syntax:
    content: public static List<Dictionary<string, object>> ToDictionary(this DataTable table)
    parameters:
    - id: table
      type: System.Data.DataTable
      description: DataTable
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
      description: 返回Dictionary
    content.vb: Public Shared Function ToDictionary(table As DataTable) As List(Of Dictionary(Of String, Object))
  overload: Tool.Utils.Data.DataTableExtension.ToDictionary*
- uid: Tool.Utils.Data.DataTableExtension.ToDictionaryIf(System.Data.DataTable,System.Func{System.String,System.Object,System.Object})
  commentId: M:Tool.Utils.Data.DataTableExtension.ToDictionaryIf(System.Data.DataTable,System.Func{System.String,System.Object,System.Object})
  id: ToDictionaryIf(System.Data.DataTable,System.Func{System.String,System.Object,System.Object})
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: ToDictionaryIf(DataTable, Func<string, object, object>)
  nameWithType: DataTableExtension.ToDictionaryIf(DataTable, Func<string, object, object>)
  fullName: Tool.Utils.Data.DataTableExtension.ToDictionaryIf(System.Data.DataTable, System.Func<string, object, object>)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: ToDictionaryIf
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 77
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: （DataTable）转换 <xref href="System.Collections.Generic.Dictionary%602" data-throw-if-not-resolved="false"></xref> 集合（结果可自定义）
  example: []
  syntax:
    content: public static List<Dictionary<string, object>> ToDictionaryIf(this DataTable table, Func<string, object, object> func)
    parameters:
    - id: table
      type: System.Data.DataTable
      description: DataTable
    - id: func
      type: System.Func{System.String,System.Object,System.Object}
      description: 用于指定特殊结果的函数
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
      description: 返回Dictionary
    content.vb: Public Shared Function ToDictionaryIf(table As DataTable, func As Func(Of String, Object, Object)) As List(Of Dictionary(Of String, Object))
  overload: Tool.Utils.Data.DataTableExtension.ToDictionaryIf*
  nameWithType.vb: DataTableExtension.ToDictionaryIf(DataTable, Func(Of String, Object, Object))
  fullName.vb: Tool.Utils.Data.DataTableExtension.ToDictionaryIf(System.Data.DataTable, System.Func(Of String, Object, Object))
  name.vb: ToDictionaryIf(DataTable, Func(Of String, Object, Object))
- uid: Tool.Utils.Data.DataTableExtension.CloneArray(System.Data.DataTable,System.Collections.ArrayList)
  commentId: M:Tool.Utils.Data.DataTableExtension.CloneArray(System.Data.DataTable,System.Collections.ArrayList)
  id: CloneArray(System.Data.DataTable,System.Collections.ArrayList)
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: CloneArray(DataTable, ArrayList)
  nameWithType: DataTableExtension.CloneArray(DataTable, ArrayList)
  fullName: Tool.Utils.Data.DataTableExtension.CloneArray(System.Data.DataTable, System.Collections.ArrayList)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: CloneArray
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 105
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: >-
    将 <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> 集合数据克隆到 <xref href="System.Data.DataTable" data-throw-if-not-resolved="false"></xref> 中

    <ul></ul>
  example: []
  syntax:
    content: public static void CloneArray(this DataTable table, ArrayList objects)
    parameters:
    - id: table
      type: System.Data.DataTable
      description: DataTable
    - id: objects
      type: System.Collections.ArrayList
      description: 数据集合
    content.vb: Public Shared Sub CloneArray(table As DataTable, objects As ArrayList)
  overload: Tool.Utils.Data.DataTableExtension.CloneArray*
- uid: Tool.Utils.Data.DataTableExtension.CloneArray(System.Data.DataTable,Tool.Utils.JsonVar)
  commentId: M:Tool.Utils.Data.DataTableExtension.CloneArray(System.Data.DataTable,Tool.Utils.JsonVar)
  id: CloneArray(System.Data.DataTable,Tool.Utils.JsonVar)
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: CloneArray(DataTable, JsonVar)
  nameWithType: DataTableExtension.CloneArray(DataTable, JsonVar)
  fullName: Tool.Utils.Data.DataTableExtension.CloneArray(System.Data.DataTable, Tool.Utils.JsonVar)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: CloneArray
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 146
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: >-
    将 <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> 集合数据克隆到 <xref href="System.Data.DataTable" data-throw-if-not-resolved="false"></xref> 中

    <ul></ul>
  example: []
  syntax:
    content: public static void CloneArray(this DataTable table, JsonVar json)
    parameters:
    - id: table
      type: System.Data.DataTable
      description: DataTable
    - id: json
      type: Tool.Utils.JsonVar
      description: Json数据
    content.vb: Public Shared Sub CloneArray(table As DataTable, json As JsonVar)
  overload: Tool.Utils.Data.DataTableExtension.CloneArray*
- uid: Tool.Utils.Data.DataTableExtension.ToArray(System.Data.DataTable)
  commentId: M:Tool.Utils.Data.DataTableExtension.ToArray(System.Data.DataTable)
  id: ToArray(System.Data.DataTable)
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: ToArray(DataTable)
  nameWithType: DataTableExtension.ToArray(DataTable)
  fullName: Tool.Utils.Data.DataTableExtension.ToArray(System.Data.DataTable)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: ToArray
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 171
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: （DataTable）转换 <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> 集合
  example: []
  syntax:
    content: public static ArrayList ToArray(this DataTable table)
    parameters:
    - id: table
      type: System.Data.DataTable
      description: DataTable
    return:
      type: System.Collections.ArrayList
      description: 返回<xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function ToArray(table As DataTable) As ArrayList
  overload: Tool.Utils.Data.DataTableExtension.ToArray*
- uid: Tool.Utils.Data.DataTableExtension.ToArrayIf(System.Data.DataTable,System.Func{System.String,System.Object,System.Object})
  commentId: M:Tool.Utils.Data.DataTableExtension.ToArrayIf(System.Data.DataTable,System.Func{System.String,System.Object,System.Object})
  id: ToArrayIf(System.Data.DataTable,System.Func{System.String,System.Object,System.Object})
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: ToArrayIf(DataTable, Func<string, object, object>)
  nameWithType: DataTableExtension.ToArrayIf(DataTable, Func<string, object, object>)
  fullName: Tool.Utils.Data.DataTableExtension.ToArrayIf(System.Data.DataTable, System.Func<string, object, object>)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: ToArrayIf
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 182
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: （DataTable）转换 <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> 集合（结果可自定义）
  example: []
  syntax:
    content: public static ArrayList ToArrayIf(this DataTable table, Func<string, object, object> func)
    parameters:
    - id: table
      type: System.Data.DataTable
      description: DataTable
    - id: func
      type: System.Func{System.String,System.Object,System.Object}
      description: 用于指定特殊结果的函数
    return:
      type: System.Collections.ArrayList
      description: 返回<xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function ToArrayIf(table As DataTable, func As Func(Of String, Object, Object)) As ArrayList
  overload: Tool.Utils.Data.DataTableExtension.ToArrayIf*
  nameWithType.vb: DataTableExtension.ToArrayIf(DataTable, Func(Of String, Object, Object))
  fullName.vb: Tool.Utils.Data.DataTableExtension.ToArrayIf(System.Data.DataTable, System.Func(Of String, Object, Object))
  name.vb: ToArrayIf(DataTable, Func(Of String, Object, Object))
- uid: Tool.Utils.Data.DataTableExtension.ToObject(System.Data.DataTable)
  commentId: M:Tool.Utils.Data.DataTableExtension.ToObject(System.Data.DataTable)
  id: ToObject(System.Data.DataTable)
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: ToObject(DataTable)
  nameWithType: DataTableExtension.ToObject(DataTable)
  fullName: Tool.Utils.Data.DataTableExtension.ToObject(System.Data.DataTable)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: ToObject
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 221
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: （DataTable）转换 <xref href="System.Object" data-throw-if-not-resolved="false"></xref> 集合
  example: []
  syntax:
    content: public static dynamic[] ToObject(this DataTable dataTable)
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: DataTable
    return:
      type: dynamic[]
      description: 返回dynamic[]
    content.vb: Public Shared Function ToObject(dataTable As DataTable) As Object()
  overload: Tool.Utils.Data.DataTableExtension.ToObject*
- uid: Tool.Utils.Data.DataTableExtension.TableToJson(System.Data.DataTable)
  commentId: M:Tool.Utils.Data.DataTableExtension.TableToJson(System.Data.DataTable)
  id: TableToJson(System.Data.DataTable)
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: TableToJson(DataTable)
  nameWithType: DataTableExtension.TableToJson(DataTable)
  fullName: Tool.Utils.Data.DataTableExtension.TableToJson(System.Data.DataTable)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: TableToJson
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 231
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: 序列化AjaxJson（DataTable）
  example: []
  syntax:
    content: public static string TableToJson(this DataTable table)
    parameters:
    - id: table
      type: System.Data.DataTable
      description: DataTable
    return:
      type: System.String
      description: 返回JSON字符串
    content.vb: Public Shared Function TableToJson(table As DataTable) As String
  overload: Tool.Utils.Data.DataTableExtension.TableToJson*
- uid: Tool.Utils.Data.DataTableExtension.TableToJson(System.Data.DataTable,System.Boolean)
  commentId: M:Tool.Utils.Data.DataTableExtension.TableToJson(System.Data.DataTable,System.Boolean)
  id: TableToJson(System.Data.DataTable,System.Boolean)
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: TableToJson(DataTable, bool)
  nameWithType: DataTableExtension.TableToJson(DataTable, bool)
  fullName: Tool.Utils.Data.DataTableExtension.TableToJson(System.Data.DataTable, bool)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: TableToJson
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 242
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: 序列化AjaxJson（DataTable）
  example: []
  syntax:
    content: public static string TableToJson(this DataTable table, bool IsDate)
    parameters:
    - id: table
      type: System.Data.DataTable
      description: DataTable
    - id: IsDate
      type: System.Boolean
      description: ToJson格式时间，启用转字符串
    return:
      type: System.String
      description: 返回JSON字符串
    content.vb: Public Shared Function TableToJson(table As DataTable, IsDate As Boolean) As String
  overload: Tool.Utils.Data.DataTableExtension.TableToJson*
  nameWithType.vb: DataTableExtension.TableToJson(DataTable, Boolean)
  fullName.vb: Tool.Utils.Data.DataTableExtension.TableToJson(System.Data.DataTable, Boolean)
  name.vb: TableToJson(DataTable, Boolean)
- uid: Tool.Utils.Data.DataTableExtension.TableToJson(System.Data.DataTable,System.Boolean,System.String)
  commentId: M:Tool.Utils.Data.DataTableExtension.TableToJson(System.Data.DataTable,System.Boolean,System.String)
  id: TableToJson(System.Data.DataTable,System.Boolean,System.String)
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: TableToJson(DataTable, bool, string)
  nameWithType: DataTableExtension.TableToJson(DataTable, bool, string)
  fullName: Tool.Utils.Data.DataTableExtension.TableToJson(System.Data.DataTable, bool, string)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: TableToJson
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 254
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: 序列化AjaxJson（DataTable）
  example: []
  syntax:
    content: public static string TableToJson(this DataTable table, bool IsDate, string ToDateString)
    parameters:
    - id: table
      type: System.Data.DataTable
      description: DataTable
    - id: IsDate
      type: System.Boolean
      description: ToJson格式时间，启用转字符串
    - id: ToDateString
      type: System.String
      description: Date.ToString()的写法。
    return:
      type: System.String
      description: 返回JSON字符串
    content.vb: Public Shared Function TableToJson(table As DataTable, IsDate As Boolean, ToDateString As String) As String
  overload: Tool.Utils.Data.DataTableExtension.TableToJson*
  nameWithType.vb: DataTableExtension.TableToJson(DataTable, Boolean, String)
  fullName.vb: Tool.Utils.Data.DataTableExtension.TableToJson(System.Data.DataTable, Boolean, String)
  name.vb: TableToJson(DataTable, Boolean, String)
- uid: Tool.Utils.Data.DataTableExtension.DataTableToEntity``1(System.Data.DataTable)
  commentId: M:Tool.Utils.Data.DataTableExtension.DataTableToEntity``1(System.Data.DataTable)
  id: DataTableToEntity``1(System.Data.DataTable)
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: DataTableToEntity<T>(DataTable)
  nameWithType: DataTableExtension.DataTableToEntity<T>(DataTable)
  fullName: Tool.Utils.Data.DataTableExtension.DataTableToEntity<T>(System.Data.DataTable)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: DataTableToEntity
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 305
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: 将<xref href="System.Data.DataTable" data-throw-if-not-resolved="false"></xref>对象 转换为 实体对象 (老版)
  example: []
  syntax:
    content: >-
      [Obsolete("当前方法，已被弃用，有更新的方法，请使用（ToEntity<T>）方法", false)]

      public static T DataTableToEntity<T>(this DataTable table) where T : new()
    parameters:
    - id: table
      type: System.Data.DataTable
      description: 数据源
    typeParameters:
    - id: T
      description: 实体对象
    return:
      type: '{T}'
      description: 返回实体对象
    content.vb: >-
      <Obsolete("当前方法，已被弃用，有更新的方法，请使用（ToEntity<T>）方法", False)>

      Public Shared Function DataTableToEntity(Of T As New)(table As DataTable) As T
  overload: Tool.Utils.Data.DataTableExtension.DataTableToEntity*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: 当前方法，已被弃用，有更新的方法，请使用（ToEntity<T>）方法
    - type: System.Boolean
      value: false
  nameWithType.vb: DataTableExtension.DataTableToEntity(Of T)(DataTable)
  fullName.vb: Tool.Utils.Data.DataTableExtension.DataTableToEntity(Of T)(System.Data.DataTable)
  name.vb: DataTableToEntity(Of T)(DataTable)
- uid: Tool.Utils.Data.DataTableExtension.DataTableToEntityList``1(System.Data.DataTable)
  commentId: M:Tool.Utils.Data.DataTableExtension.DataTableToEntityList``1(System.Data.DataTable)
  id: DataTableToEntityList``1(System.Data.DataTable)
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: DataTableToEntityList<T>(DataTable)
  nameWithType: DataTableExtension.DataTableToEntityList<T>(DataTable)
  fullName: Tool.Utils.Data.DataTableExtension.DataTableToEntityList<T>(System.Data.DataTable)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: DataTableToEntityList
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 321
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: 将<xref href="System.Data.DataTable" data-throw-if-not-resolved="false"></xref>对象 转换为 <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref>实体对象 (老版)
  example: []
  syntax:
    content: >-
      [Obsolete("当前方法，已被弃用，有更新的方法，请使用（ToEntityList<T>）方法", false)]

      public static IList<T> DataTableToEntityList<T>(this DataTable table) where T : new()
    parameters:
    - id: table
      type: System.Data.DataTable
      description: 数据源
    typeParameters:
    - id: T
      description: 实体对象
    return:
      type: System.Collections.Generic.IList{{T}}
      description: 返回<xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref>实体对象
    content.vb: >-
      <Obsolete("当前方法，已被弃用，有更新的方法，请使用（ToEntityList<T>）方法", False)>

      Public Shared Function DataTableToEntityList(Of T As New)(table As DataTable) As IList(Of T)
  overload: Tool.Utils.Data.DataTableExtension.DataTableToEntityList*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: 当前方法，已被弃用，有更新的方法，请使用（ToEntityList<T>）方法
    - type: System.Boolean
      value: false
  nameWithType.vb: DataTableExtension.DataTableToEntityList(Of T)(DataTable)
  fullName.vb: Tool.Utils.Data.DataTableExtension.DataTableToEntityList(Of T)(System.Data.DataTable)
  name.vb: DataTableToEntityList(Of T)(DataTable)
- uid: Tool.Utils.Data.DataTableExtension.ToEntity``1(System.Data.DataTable)
  commentId: M:Tool.Utils.Data.DataTableExtension.ToEntity``1(System.Data.DataTable)
  id: ToEntity``1(System.Data.DataTable)
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: ToEntity<T>(DataTable)
  nameWithType: DataTableExtension.ToEntity<T>(DataTable)
  fullName: Tool.Utils.Data.DataTableExtension.ToEntity<T>(System.Data.DataTable)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: ToEntity
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 337
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: 将<xref href="System.Data.DataTable" data-throw-if-not-resolved="false"></xref>对象 转换为 实体对象，不管有表中有几条数据指读出第一条 (优化版)
  example: []
  syntax:
    content: 'public static T ToEntity<T>(this DataTable dataTable) where T : new()'
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: 数据源
    typeParameters:
    - id: T
      description: 实体对象
    return:
      type: '{T}'
      description: 返回实体对象数组
    content.vb: Public Shared Function ToEntity(Of T As New)(dataTable As DataTable) As T
  overload: Tool.Utils.Data.DataTableExtension.ToEntity*
  nameWithType.vb: DataTableExtension.ToEntity(Of T)(DataTable)
  fullName.vb: Tool.Utils.Data.DataTableExtension.ToEntity(Of T)(System.Data.DataTable)
  name.vb: ToEntity(Of T)(DataTable)
- uid: Tool.Utils.Data.DataTableExtension.ToEntity``1(System.Data.DataTable,System.Int32)
  commentId: M:Tool.Utils.Data.DataTableExtension.ToEntity``1(System.Data.DataTable,System.Int32)
  id: ToEntity``1(System.Data.DataTable,System.Int32)
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: ToEntity<T>(DataTable, int)
  nameWithType: DataTableExtension.ToEntity<T>(DataTable, int)
  fullName: Tool.Utils.Data.DataTableExtension.ToEntity<T>(System.Data.DataTable, int)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: ToEntity
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 349
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: 将<xref href="System.Data.DataTable" data-throw-if-not-resolved="false"></xref>对象 转换为 实体对象，不管有表中有几条数据只读出一条 (优化版)
  example: []
  syntax:
    content: 'public static T ToEntity<T>(this DataTable dataTable, int index) where T : new()'
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: 数据源
    - id: index
      type: System.Int32
      description: 要读取的那一条数组的下标
    typeParameters:
    - id: T
      description: 实体对象
    return:
      type: '{T}'
      description: 返回实体对象数组
    content.vb: Public Shared Function ToEntity(Of T As New)(dataTable As DataTable, index As Integer) As T
  overload: Tool.Utils.Data.DataTableExtension.ToEntity*
  nameWithType.vb: DataTableExtension.ToEntity(Of T)(DataTable, Integer)
  fullName.vb: Tool.Utils.Data.DataTableExtension.ToEntity(Of T)(System.Data.DataTable, Integer)
  name.vb: ToEntity(Of T)(DataTable, Integer)
- uid: Tool.Utils.Data.DataTableExtension.ToEntityList``1(System.Data.DataTable)
  commentId: M:Tool.Utils.Data.DataTableExtension.ToEntityList``1(System.Data.DataTable)
  id: ToEntityList``1(System.Data.DataTable)
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: ToEntityList<T>(DataTable)
  nameWithType: DataTableExtension.ToEntityList<T>(DataTable)
  fullName: Tool.Utils.Data.DataTableExtension.ToEntityList<T>(System.Data.DataTable)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: ToEntityList
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 414
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: 将<xref href="System.Data.DataTable" data-throw-if-not-resolved="false"></xref>对象 转换为 实体对象数组 (优化版)
  example: []
  syntax:
    content: 'public static IList<T> ToEntityList<T>(this DataTable dataTable) where T : new()'
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: 数据源
    typeParameters:
    - id: T
      description: 实体对象
    return:
      type: System.Collections.Generic.IList{{T}}
      description: 返回实体对象数组
    content.vb: Public Shared Function ToEntityList(Of T As New)(dataTable As DataTable) As IList(Of T)
  overload: Tool.Utils.Data.DataTableExtension.ToEntityList*
  nameWithType.vb: DataTableExtension.ToEntityList(Of T)(DataTable)
  fullName.vb: Tool.Utils.Data.DataTableExtension.ToEntityList(Of T)(System.Data.DataTable)
  name.vb: ToEntityList(Of T)(DataTable)
- uid: Tool.Utils.Data.DataTableExtension.ToEntityList``1(System.Data.DataTable,System.Int32[])
  commentId: M:Tool.Utils.Data.DataTableExtension.ToEntityList``1(System.Data.DataTable,System.Int32[])
  id: ToEntityList``1(System.Data.DataTable,System.Int32[])
  isExtensionMethod: true
  parent: Tool.Utils.Data.DataTableExtension
  langs:
  - csharp
  - vb
  name: ToEntityList<T>(DataTable, params int[])
  nameWithType: DataTableExtension.ToEntityList<T>(DataTable, params int[])
  fullName: Tool.Utils.Data.DataTableExtension.ToEntityList<T>(System.Data.DataTable, params int[])
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/Data/DataTableExtension.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: ToEntityList
    path: ../../Tool.Net/Utils/Data/DataTableExtension.cs
    startLine: 509
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.Data
  summary: 将<xref href="System.Data.DataTable" data-throw-if-not-resolved="false"></xref>对象 转换为 实体对象数组 (优化版)
  example: []
  syntax:
    content: 'public static IList<T> ToEntityList<T>(this DataTable dataTable, params int[] indexs) where T : new()'
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: 数据源
    - id: indexs
      type: System.Int32[]
      description: 要获取的多个下标的数据
    typeParameters:
    - id: T
      description: 实体对象
    return:
      type: System.Collections.Generic.IList{{T}}
      description: 返回实体对象数组
    content.vb: Public Shared Function ToEntityList(Of T As New)(dataTable As DataTable, ParamArray indexs As Integer()) As IList(Of T)
  overload: Tool.Utils.Data.DataTableExtension.ToEntityList*
  nameWithType.vb: DataTableExtension.ToEntityList(Of T)(DataTable, ParamArray Integer())
  fullName.vb: Tool.Utils.Data.DataTableExtension.ToEntityList(Of T)(System.Data.DataTable, ParamArray Integer())
  name.vb: ToEntityList(Of T)(DataTable, ParamArray Integer())
references:
- uid: Tool.Utils.Data
  commentId: N:Tool.Utils.Data
  href: Tool.html
  name: Tool.Utils.Data
  nameWithType: Tool.Utils.Data
  fullName: Tool.Utils.Data
  spec.csharp:
  - uid: Tool
    name: Tool
    href: Tool.html
  - name: .
  - uid: Tool.Utils
    name: Utils
    href: Tool.Utils.html
  - name: .
  - uid: Tool.Utils.Data
    name: Data
    href: Tool.Utils.Data.html
  spec.vb:
  - uid: Tool
    name: Tool
    href: Tool.html
  - name: .
  - uid: Tool.Utils
    name: Utils
    href: Tool.Utils.html
  - name: .
  - uid: Tool.Utils.Data
    name: Data
    href: Tool.Utils.Data.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Data.DataTable
  commentId: T:System.Data.DataTable
  parent: System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.datatable
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Tool.Utils.Data.DataTableExtension.IsEmpty*
  commentId: Overload:Tool.Utils.Data.DataTableExtension.IsEmpty
  href: Tool.Utils.Data.DataTableExtension.html#Tool_Utils_Data_DataTableExtension_IsEmpty_System_Data_DataTable_
  name: IsEmpty
  nameWithType: DataTableExtension.IsEmpty
  fullName: Tool.Utils.Data.DataTableExtension.IsEmpty
- uid: System.Data
  commentId: N:System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Tool.Utils.Data.DataTableExtension.ToDictionary*
  commentId: Overload:Tool.Utils.Data.DataTableExtension.ToDictionary
  href: Tool.Utils.Data.DataTableExtension.html#Tool_Utils_Data_DataTableExtension_ToDictionary_System_Data_DataTable_
  name: ToDictionary
  nameWithType: DataTableExtension.ToDictionary
  fullName: Tool.Utils.Data.DataTableExtension.ToDictionary
- uid: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Dictionary<string, object>>
  nameWithType: List<Dictionary<string, object>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, object>>
  nameWithType.vb: List(Of Dictionary(Of String, Object))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: List(Of Dictionary(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Tool.Utils.Data.DataTableExtension.ToDictionaryIf*
  commentId: Overload:Tool.Utils.Data.DataTableExtension.ToDictionaryIf
  href: Tool.Utils.Data.DataTableExtension.html#Tool_Utils_Data_DataTableExtension_ToDictionaryIf_System_Data_DataTable_System_Func_System_String_System_Object_System_Object__
  name: ToDictionaryIf
  nameWithType: DataTableExtension.ToDictionaryIf
  fullName: Tool.Utils.Data.DataTableExtension.ToDictionaryIf
- uid: System.Func{System.String,System.Object,System.Object}
  commentId: T:System.Func{System.String,System.Object,System.Object}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<string, object, object>
  nameWithType: Func<string, object, object>
  fullName: System.Func<string, object, object>
  nameWithType.vb: Func(Of String, Object, Object)
  fullName.vb: System.Func(Of String, Object, Object)
  name.vb: Func(Of String, Object, Object)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Collections.ArrayList
  commentId: T:System.Collections.ArrayList
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.arraylist
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: Tool.Utils.Data.DataTableExtension.CloneArray*
  commentId: Overload:Tool.Utils.Data.DataTableExtension.CloneArray
  href: Tool.Utils.Data.DataTableExtension.html#Tool_Utils_Data_DataTableExtension_CloneArray_System_Data_DataTable_System_Collections_ArrayList_
  name: CloneArray
  nameWithType: DataTableExtension.CloneArray
  fullName: Tool.Utils.Data.DataTableExtension.CloneArray
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Tool.Utils.JsonVar
  commentId: T:Tool.Utils.JsonVar
  parent: Tool.Utils
  href: Tool.Utils.JsonVar.html
  name: JsonVar
  nameWithType: JsonVar
  fullName: Tool.Utils.JsonVar
- uid: Tool.Utils
  commentId: N:Tool.Utils
  href: Tool.html
  name: Tool.Utils
  nameWithType: Tool.Utils
  fullName: Tool.Utils
  spec.csharp:
  - uid: Tool
    name: Tool
    href: Tool.html
  - name: .
  - uid: Tool.Utils
    name: Utils
    href: Tool.Utils.html
  spec.vb:
  - uid: Tool
    name: Tool
    href: Tool.html
  - name: .
  - uid: Tool.Utils
    name: Utils
    href: Tool.Utils.html
- uid: Tool.Utils.Data.DataTableExtension.ToArray*
  commentId: Overload:Tool.Utils.Data.DataTableExtension.ToArray
  href: Tool.Utils.Data.DataTableExtension.html#Tool_Utils_Data_DataTableExtension_ToArray_System_Data_DataTable_
  name: ToArray
  nameWithType: DataTableExtension.ToArray
  fullName: Tool.Utils.Data.DataTableExtension.ToArray
- uid: Tool.Utils.Data.DataTableExtension.ToArrayIf*
  commentId: Overload:Tool.Utils.Data.DataTableExtension.ToArrayIf
  href: Tool.Utils.Data.DataTableExtension.html#Tool_Utils_Data_DataTableExtension_ToArrayIf_System_Data_DataTable_System_Func_System_String_System_Object_System_Object__
  name: ToArrayIf
  nameWithType: DataTableExtension.ToArrayIf
  fullName: Tool.Utils.Data.DataTableExtension.ToArrayIf
- uid: Tool.Utils.Data.DataTableExtension.ToObject*
  commentId: Overload:Tool.Utils.Data.DataTableExtension.ToObject
  href: Tool.Utils.Data.DataTableExtension.html#Tool_Utils_Data_DataTableExtension_ToObject_System_Data_DataTable_
  name: ToObject
  nameWithType: DataTableExtension.ToObject
  fullName: Tool.Utils.Data.DataTableExtension.ToObject
- uid: dynamic[]
  isExternal: true
  name: dynamic[]
  nameWithType: dynamic[]
  fullName: dynamic[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: dynamic
    name: dynamic
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - name: Object
  - name: (
  - name: )
- uid: Tool.Utils.Data.DataTableExtension.TableToJson*
  commentId: Overload:Tool.Utils.Data.DataTableExtension.TableToJson
  href: Tool.Utils.Data.DataTableExtension.html#Tool_Utils_Data_DataTableExtension_TableToJson_System_Data_DataTable_
  name: TableToJson
  nameWithType: DataTableExtension.TableToJson
  fullName: Tool.Utils.Data.DataTableExtension.TableToJson
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Tool.Utils.Data.DataTableExtension.DataTableToEntity*
  commentId: Overload:Tool.Utils.Data.DataTableExtension.DataTableToEntity
  href: Tool.Utils.Data.DataTableExtension.html#Tool_Utils_Data_DataTableExtension_DataTableToEntity__1_System_Data_DataTable_
  name: DataTableToEntity
  nameWithType: DataTableExtension.DataTableToEntity
  fullName: Tool.Utils.Data.DataTableExtension.DataTableToEntity
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Tool.Utils.Data.DataTableExtension.DataTableToEntityList*
  commentId: Overload:Tool.Utils.Data.DataTableExtension.DataTableToEntityList
  href: Tool.Utils.Data.DataTableExtension.html#Tool_Utils_Data_DataTableExtension_DataTableToEntityList__1_System_Data_DataTable_
  name: DataTableToEntityList
  nameWithType: DataTableExtension.DataTableToEntityList
  fullName: Tool.Utils.Data.DataTableExtension.DataTableToEntityList
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Tool.Utils.Data.DataTableExtension.ToEntity*
  commentId: Overload:Tool.Utils.Data.DataTableExtension.ToEntity
  href: Tool.Utils.Data.DataTableExtension.html#Tool_Utils_Data_DataTableExtension_ToEntity__1_System_Data_DataTable_
  name: ToEntity
  nameWithType: DataTableExtension.ToEntity
  fullName: Tool.Utils.Data.DataTableExtension.ToEntity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Tool.Utils.Data.DataTableExtension.ToEntityList*
  commentId: Overload:Tool.Utils.Data.DataTableExtension.ToEntityList
  href: Tool.Utils.Data.DataTableExtension.html#Tool_Utils_Data_DataTableExtension_ToEntityList__1_System_Data_DataTable_
  name: ToEntityList
  nameWithType: DataTableExtension.ToEntityList
  fullName: Tool.Utils.Data.DataTableExtension.ToEntityList
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
