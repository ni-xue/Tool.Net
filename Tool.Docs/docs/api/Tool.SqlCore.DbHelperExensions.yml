### YamlMime:ManagedReference
items:
- uid: Tool.SqlCore.DbHelperExensions
  commentId: T:Tool.SqlCore.DbHelperExensions
  id: DbHelperExensions
  parent: Tool.SqlCore
  children:
  - Tool.SqlCore.DbHelperExensions.Delete(Tool.SqlCore.DbHelper,System.String,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.Delete(Tool.SqlCore.DbHelper,System.String[])
  - Tool.SqlCore.DbHelperExensions.DeleteAsync(Tool.SqlCore.DbHelper,System.String,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.DeleteAsync(Tool.SqlCore.DbHelper,System.String[])
  - Tool.SqlCore.DbHelperExensions.DeleteAsync``1(Tool.SqlCore.DbHelper,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.Delete``1(Tool.SqlCore.DbHelper,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.GetDataColumnSchema(System.Data.Common.DbDataReader)
  - Tool.SqlCore.DbHelperExensions.GetDataColumnSchemaAsync(System.Data.Common.DbDataReader)
  - Tool.SqlCore.DbHelperExensions.GetDataSet(System.Data.Common.DbDataReader)
  - Tool.SqlCore.DbHelperExensions.GetDataSetAsync(System.Data.Common.DbDataReader)
  - Tool.SqlCore.DbHelperExensions.GetDataTable(System.Data.Common.DbDataReader)
  - Tool.SqlCore.DbHelperExensions.GetDataTableAsync(System.Data.Common.DbDataReader)
  - Tool.SqlCore.DbHelperExensions.GetInsertParams(Tool.SqlCore.DbHelper,System.Collections.Generic.IDictionary{System.String,System.Object},System.String@,System.String@)
  - Tool.SqlCore.DbHelperExensions.GetListHash(System.Data.Common.DbDataReader,System.Boolean)
  - Tool.SqlCore.DbHelperExensions.GetListHashAsync(System.Data.Common.DbDataReader,System.Boolean)
  - Tool.SqlCore.DbHelperExensions.GetReaderArray(System.Data.Common.DbDataReader,System.Boolean)
  - Tool.SqlCore.DbHelperExensions.GetReaderArrayAsync(System.Data.Common.DbDataReader,System.Boolean)
  - Tool.SqlCore.DbHelperExensions.GetReader``1
  - Tool.SqlCore.DbHelperExensions.GetTextParameter(Tool.SqlCore.DbHelper,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.GetUpdateParams(Tool.SqlCore.DbHelper,System.Collections.Generic.IDictionary{System.String,System.Object},System.String@)
  - Tool.SqlCore.DbHelperExensions.Insert(Tool.SqlCore.DbHelper,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.Insert(Tool.SqlCore.DbHelper,System.String[])
  - Tool.SqlCore.DbHelperExensions.InsertAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.InsertAsync(Tool.SqlCore.DbHelper,System.String[])
  - Tool.SqlCore.DbHelperExensions.InsertAsync``1(Tool.SqlCore.DbHelper,System.Object)
  - Tool.SqlCore.DbHelperExensions.Insert``1(Tool.SqlCore.DbHelper,System.Object)
  - Tool.SqlCore.DbHelperExensions.Select(Tool.SqlCore.DbHelper,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.Select(Tool.SqlCore.DbHelper,System.String[])
  - Tool.SqlCore.DbHelperExensions.SelectArray(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.SelectArray(Tool.SqlCore.DbHelper,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.SelectArrayAsync(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.SelectArrayAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.SelectAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.SelectAsync(Tool.SqlCore.DbHelper,System.String[])
  - Tool.SqlCore.DbHelperExensions.SelectAsync``1(Tool.SqlCore.DbHelper,System.Action{``0})
  - Tool.SqlCore.DbHelperExensions.SelectDictionary(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.SelectDictionary(Tool.SqlCore.DbHelper,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.SelectDictionaryAsync(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.SelectDictionaryAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  - Tool.SqlCore.DbHelperExensions.Select``1(Tool.SqlCore.DbHelper,System.Action{``0})
  - Tool.SqlCore.DbHelperExensions.Update(Tool.SqlCore.DbHelper,System.String,System.String,System.Object[])
  - Tool.SqlCore.DbHelperExensions.Update(Tool.SqlCore.DbHelper,System.String[])
  - Tool.SqlCore.DbHelperExensions.UpdateAsync(Tool.SqlCore.DbHelper,System.String,System.String,System.Object[])
  - Tool.SqlCore.DbHelperExensions.UpdateAsync(Tool.SqlCore.DbHelper,System.String[])
  - Tool.SqlCore.DbHelperExensions.UpdateAsync``1(Tool.SqlCore.DbHelper,System.String,System.Object[])
  - Tool.SqlCore.DbHelperExensions.Update``1(Tool.SqlCore.DbHelper,System.String,System.Object[])
  - Tool.SqlCore.DbHelperExensions.WhereStr(System.String)
  langs:
  - csharp
  - vb
  name: DbHelperExensions
  nameWithType: DbHelperExensions
  fullName: Tool.SqlCore.DbHelperExensions
  type: Class
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: DbHelperExensions
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 21
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 对<xref href="Tool.SqlCore.DbHelper" data-throw-if-not-resolved="false"></xref> 对象，提供扩展支持
  remarks: 代码由逆血提供支持
  example: []
  syntax:
    content: public static class DbHelperExensions
    content.vb: Public Module DbHelperExensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Tool.SqlCore.DbHelperExensions.Select(Tool.SqlCore.DbHelper,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.Select(Tool.SqlCore.DbHelper,System.String,System.Object)
  id: Select(Tool.SqlCore.DbHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: Select(DbHelper, string, object)
  nameWithType: DbHelperExensions.Select(DbHelper, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.Select(Tool.SqlCore.DbHelper, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: Select
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 30
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 查询单张表
  example: []
  syntax:
    content: public static DataTable Select(this DbHelper dbHelper, string commandText, object prams = null)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: commandText
      type: System.String
      description: 查询语句
    - id: prams
      type: System.Object
      description: 实体类，虚构对象,任何类型的键值对
    return:
      type: System.Data.DataTable
      description: ''
    content.vb: Public Shared Function [Select](dbHelper As DbHelper, commandText As String, prams As Object = Nothing) As DataTable
  overload: Tool.SqlCore.DbHelperExensions.Select*
  nameWithType.vb: DbHelperExensions.Select(DbHelper, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.Select(Tool.SqlCore.DbHelper, String, Object)
  name.vb: Select(DbHelper, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.SelectDictionary(Tool.SqlCore.DbHelper,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.SelectDictionary(Tool.SqlCore.DbHelper,System.String,System.Object)
  id: SelectDictionary(Tool.SqlCore.DbHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: SelectDictionary(DbHelper, string, object)
  nameWithType: DbHelperExensions.SelectDictionary(DbHelper, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.SelectDictionary(Tool.SqlCore.DbHelper, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: SelectDictionary
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 52
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 查询单张表
  example: []
  syntax:
    content: public static IList<IDictionary<string, object>> SelectDictionary(this DbHelper dbHelper, string commandText, object prams = null)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: commandText
      type: System.String
      description: 查询语句
    - id: prams
      type: System.Object
      description: 实体类，虚构对象,任何类型的键值对
    return:
      type: System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}
      description: ''
    content.vb: Public Shared Function SelectDictionary(dbHelper As DbHelper, commandText As String, prams As Object = Nothing) As IList(Of IDictionary(Of String, Object))
  overload: Tool.SqlCore.DbHelperExensions.SelectDictionary*
  nameWithType.vb: DbHelperExensions.SelectDictionary(DbHelper, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.SelectDictionary(Tool.SqlCore.DbHelper, String, Object)
  name.vb: SelectDictionary(DbHelper, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.SelectDictionary(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.SelectDictionary(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  id: SelectDictionary(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: SelectDictionary(DbHelper, CommandType, string, object)
  nameWithType: DbHelperExensions.SelectDictionary(DbHelper, CommandType, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.SelectDictionary(Tool.SqlCore.DbHelper, System.Data.CommandType, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: SelectDictionary
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 65
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 查询单张表
  example: []
  syntax:
    content: public static IList<IDictionary<string, object>> SelectDictionary(this DbHelper dbHelper, CommandType command, string commandText, object prams = null)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: command
      type: System.Data.CommandType
      description: 执行模式
    - id: commandText
      type: System.String
      description: 查询语句
    - id: prams
      type: System.Object
      description: 实体类，虚构对象,任何类型的键值对
    return:
      type: System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}
      description: ''
    content.vb: Public Shared Function SelectDictionary(dbHelper As DbHelper, command As CommandType, commandText As String, prams As Object = Nothing) As IList(Of IDictionary(Of String, Object))
  overload: Tool.SqlCore.DbHelperExensions.SelectDictionary*
  nameWithType.vb: DbHelperExensions.SelectDictionary(DbHelper, CommandType, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.SelectDictionary(Tool.SqlCore.DbHelper, System.Data.CommandType, String, Object)
  name.vb: SelectDictionary(DbHelper, CommandType, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.SelectArray(Tool.SqlCore.DbHelper,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.SelectArray(Tool.SqlCore.DbHelper,System.String,System.Object)
  id: SelectArray(Tool.SqlCore.DbHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: SelectArray(DbHelper, string, object)
  nameWithType: DbHelperExensions.SelectArray(DbHelper, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.SelectArray(Tool.SqlCore.DbHelper, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: SelectArray
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 84
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 查询单张表
  example: []
  syntax:
    content: public static ArrayList SelectArray(this DbHelper dbHelper, string commandText, object prams = null)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: commandText
      type: System.String
      description: 查询语句
    - id: prams
      type: System.Object
      description: 实体类，虚构对象,任何类型的键值对
    return:
      type: System.Collections.ArrayList
      description: ''
    content.vb: Public Shared Function SelectArray(dbHelper As DbHelper, commandText As String, prams As Object = Nothing) As ArrayList
  overload: Tool.SqlCore.DbHelperExensions.SelectArray*
  nameWithType.vb: DbHelperExensions.SelectArray(DbHelper, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.SelectArray(Tool.SqlCore.DbHelper, String, Object)
  name.vb: SelectArray(DbHelper, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.SelectArray(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.SelectArray(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  id: SelectArray(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: SelectArray(DbHelper, CommandType, string, object)
  nameWithType: DbHelperExensions.SelectArray(DbHelper, CommandType, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.SelectArray(Tool.SqlCore.DbHelper, System.Data.CommandType, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: SelectArray
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 97
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 查询单张表
  example: []
  syntax:
    content: public static ArrayList SelectArray(this DbHelper dbHelper, CommandType command, string commandText, object prams = null)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: command
      type: System.Data.CommandType
      description: 执行模式
    - id: commandText
      type: System.String
      description: 查询语句
    - id: prams
      type: System.Object
      description: 实体类，虚构对象,任何类型的键值对
    return:
      type: System.Collections.ArrayList
      description: ''
    content.vb: Public Shared Function SelectArray(dbHelper As DbHelper, command As CommandType, commandText As String, prams As Object = Nothing) As ArrayList
  overload: Tool.SqlCore.DbHelperExensions.SelectArray*
  nameWithType.vb: DbHelperExensions.SelectArray(DbHelper, CommandType, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.SelectArray(Tool.SqlCore.DbHelper, System.Data.CommandType, String, Object)
  name.vb: SelectArray(DbHelper, CommandType, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.Select``1(Tool.SqlCore.DbHelper,System.Action{``0})
  commentId: M:Tool.SqlCore.DbHelperExensions.Select``1(Tool.SqlCore.DbHelper,System.Action{``0})
  id: Select``1(Tool.SqlCore.DbHelper,System.Action{``0})
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: Select<T>(DbHelper, Action<T>)
  nameWithType: DbHelperExensions.Select<T>(DbHelper, Action<T>)
  fullName: Tool.SqlCore.DbHelperExensions.Select<T>(Tool.SqlCore.DbHelper, System.Action<T>)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: Select
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 115
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 查询单张表
  example: []
  syntax:
    content: 'public static IList<T> Select<T>(this DbHelper dbHelper, Action<T> prams = null) where T : new()'
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: prams
      type: System.Action{{T}}
      description: 查询条件
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IList{{T}}
      description: ''
    content.vb: Public Shared Function [Select](Of T As New)(dbHelper As DbHelper, prams As Action(Of T) = Nothing) As IList(Of T)
  overload: Tool.SqlCore.DbHelperExensions.Select*
  nameWithType.vb: DbHelperExensions.Select(Of T)(DbHelper, Action(Of T))
  fullName.vb: Tool.SqlCore.DbHelperExensions.Select(Of T)(Tool.SqlCore.DbHelper, System.Action(Of T))
  name.vb: Select(Of T)(DbHelper, Action(Of T))
- uid: Tool.SqlCore.DbHelperExensions.Select(Tool.SqlCore.DbHelper,System.String[])
  commentId: M:Tool.SqlCore.DbHelperExensions.Select(Tool.SqlCore.DbHelper,System.String[])
  id: Select(Tool.SqlCore.DbHelper,System.String[])
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: Select(DbHelper, params string[])
  nameWithType: DbHelperExensions.Select(DbHelper, params string[])
  fullName: Tool.SqlCore.DbHelperExensions.Select(Tool.SqlCore.DbHelper, params string[])
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: Select
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 185
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 查询多张表
  example: []
  syntax:
    content: public static DataSet Select(this DbHelper dbHelper, params string[] commandTexts)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: commandTexts
      type: System.String[]
      description: 多条查询语句
    return:
      type: System.Data.DataSet
      description: ''
    content.vb: Public Shared Function [Select](dbHelper As DbHelper, ParamArray commandTexts As String()) As DataSet
  overload: Tool.SqlCore.DbHelperExensions.Select*
  nameWithType.vb: DbHelperExensions.Select(DbHelper, ParamArray String())
  fullName.vb: Tool.SqlCore.DbHelperExensions.Select(Tool.SqlCore.DbHelper, ParamArray String())
  name.vb: Select(DbHelper, ParamArray String())
- uid: Tool.SqlCore.DbHelperExensions.Insert``1(Tool.SqlCore.DbHelper,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.Insert``1(Tool.SqlCore.DbHelper,System.Object)
  id: Insert``1(Tool.SqlCore.DbHelper,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: Insert<T>(DbHelper, object)
  nameWithType: DbHelperExensions.Insert<T>(DbHelper, object)
  fullName: Tool.SqlCore.DbHelperExensions.Insert<T>(Tool.SqlCore.DbHelper, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: Insert
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 201
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 插入一条结果
  example: []
  syntax:
    content: 'public static int Insert<T>(this DbHelper dbHelper, object prams) where T : new()'
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: prams
      type: System.Object
      description: 实体类，虚构对象,任何类型的键值对
    typeParameters:
    - id: T
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function Insert(Of T As New)(dbHelper As DbHelper, prams As Object) As Integer
  overload: Tool.SqlCore.DbHelperExensions.Insert*
  nameWithType.vb: DbHelperExensions.Insert(Of T)(DbHelper, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.Insert(Of T)(Tool.SqlCore.DbHelper, Object)
  name.vb: Insert(Of T)(DbHelper, Object)
- uid: Tool.SqlCore.DbHelperExensions.Insert(Tool.SqlCore.DbHelper,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.Insert(Tool.SqlCore.DbHelper,System.String,System.Object)
  id: Insert(Tool.SqlCore.DbHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: Insert(DbHelper, string, object)
  nameWithType: DbHelperExensions.Insert(DbHelper, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.Insert(Tool.SqlCore.DbHelper, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: Insert
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 213
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 插入一条结果
  example: []
  syntax:
    content: public static int Insert(this DbHelper dbHelper, string TableName, object prams)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: TableName
      type: System.String
      description: 表名
    - id: prams
      type: System.Object
      description: 实体类，虚构对象,任何类型的键值对
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function Insert(dbHelper As DbHelper, TableName As String, prams As Object) As Integer
  overload: Tool.SqlCore.DbHelperExensions.Insert*
  nameWithType.vb: DbHelperExensions.Insert(DbHelper, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.Insert(Tool.SqlCore.DbHelper, String, Object)
  name.vb: Insert(DbHelper, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.Insert(Tool.SqlCore.DbHelper,System.String[])
  commentId: M:Tool.SqlCore.DbHelperExensions.Insert(Tool.SqlCore.DbHelper,System.String[])
  id: Insert(Tool.SqlCore.DbHelper,System.String[])
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: Insert(DbHelper, params string[])
  nameWithType: DbHelperExensions.Insert(DbHelper, params string[])
  fullName: Tool.SqlCore.DbHelperExensions.Insert(Tool.SqlCore.DbHelper, params string[])
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: Insert
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 234
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 插入多条结果，可以是多张不同的表
  example: []
  syntax:
    content: public static int Insert(this DbHelper dbHelper, params string[] commandTexts)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: commandTexts
      type: System.String[]
      description: 多条插入语句
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function Insert(dbHelper As DbHelper, ParamArray commandTexts As String()) As Integer
  overload: Tool.SqlCore.DbHelperExensions.Insert*
  nameWithType.vb: DbHelperExensions.Insert(DbHelper, ParamArray String())
  fullName.vb: Tool.SqlCore.DbHelperExensions.Insert(Tool.SqlCore.DbHelper, ParamArray String())
  name.vb: Insert(DbHelper, ParamArray String())
- uid: Tool.SqlCore.DbHelperExensions.Update``1(Tool.SqlCore.DbHelper,System.String,System.Object[])
  commentId: M:Tool.SqlCore.DbHelperExensions.Update``1(Tool.SqlCore.DbHelper,System.String,System.Object[])
  id: Update``1(Tool.SqlCore.DbHelper,System.String,System.Object[])
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: Update<T>(DbHelper, string, params object[])
  nameWithType: DbHelperExensions.Update<T>(DbHelper, string, params object[])
  fullName: Tool.SqlCore.DbHelperExensions.Update<T>(Tool.SqlCore.DbHelper, string, params object[])
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: Update
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 246
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 修改单表结果
  example: []
  syntax:
    content: 'public static int Update<T>(this DbHelper dbHelper, string where, params object[] prams) where T : new()'
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: where
      type: System.String
      description: 修改的条件
    - id: prams
      type: System.Object[]
      description: 修改表的参数 Or 修改条件的参数,可以是任何类型的键值对
    typeParameters:
    - id: T
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function Update(Of T As New)(dbHelper As DbHelper, where As String, ParamArray prams As Object()) As Integer
  overload: Tool.SqlCore.DbHelperExensions.Update*
  nameWithType.vb: DbHelperExensions.Update(Of T)(DbHelper, String, ParamArray Object())
  fullName.vb: Tool.SqlCore.DbHelperExensions.Update(Of T)(Tool.SqlCore.DbHelper, String, ParamArray Object())
  name.vb: Update(Of T)(DbHelper, String, ParamArray Object())
- uid: Tool.SqlCore.DbHelperExensions.Update(Tool.SqlCore.DbHelper,System.String,System.String,System.Object[])
  commentId: M:Tool.SqlCore.DbHelperExensions.Update(Tool.SqlCore.DbHelper,System.String,System.String,System.Object[])
  id: Update(Tool.SqlCore.DbHelper,System.String,System.String,System.Object[])
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: Update(DbHelper, string, string, params object[])
  nameWithType: DbHelperExensions.Update(DbHelper, string, string, params object[])
  fullName: Tool.SqlCore.DbHelperExensions.Update(Tool.SqlCore.DbHelper, string, string, params object[])
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: Update
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 259
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 修改单表结果
  example: []
  syntax:
    content: public static int Update(this DbHelper dbHelper, string TableName, string where, params object[] prams)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: TableName
      type: System.String
      description: 表名
    - id: where
      type: System.String
      description: 修改的条件，无需写 WHERE 直接条件
    - id: prams
      type: System.Object[]
      description: 修改表的参数 Or 修改条件的参数,可以是任何类型的键值对
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function Update(dbHelper As DbHelper, TableName As String, where As String, ParamArray prams As Object()) As Integer
  overload: Tool.SqlCore.DbHelperExensions.Update*
  nameWithType.vb: DbHelperExensions.Update(DbHelper, String, String, ParamArray Object())
  fullName.vb: Tool.SqlCore.DbHelperExensions.Update(Tool.SqlCore.DbHelper, String, String, ParamArray Object())
  name.vb: Update(DbHelper, String, String, ParamArray Object())
- uid: Tool.SqlCore.DbHelperExensions.Update(Tool.SqlCore.DbHelper,System.String[])
  commentId: M:Tool.SqlCore.DbHelperExensions.Update(Tool.SqlCore.DbHelper,System.String[])
  id: Update(Tool.SqlCore.DbHelper,System.String[])
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: Update(DbHelper, params string[])
  nameWithType: DbHelperExensions.Update(DbHelper, params string[])
  fullName: Tool.SqlCore.DbHelperExensions.Update(Tool.SqlCore.DbHelper, params string[])
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: Update
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 295
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 修改多表结果
  example: []
  syntax:
    content: public static int Update(this DbHelper dbHelper, params string[] commandTexts)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: commandTexts
      type: System.String[]
      description: 多条插入语句
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function Update(dbHelper As DbHelper, ParamArray commandTexts As String()) As Integer
  overload: Tool.SqlCore.DbHelperExensions.Update*
  nameWithType.vb: DbHelperExensions.Update(DbHelper, ParamArray String())
  fullName.vb: Tool.SqlCore.DbHelperExensions.Update(Tool.SqlCore.DbHelper, ParamArray String())
  name.vb: Update(DbHelper, ParamArray String())
- uid: Tool.SqlCore.DbHelperExensions.Delete``1(Tool.SqlCore.DbHelper,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.Delete``1(Tool.SqlCore.DbHelper,System.String,System.Object)
  id: Delete``1(Tool.SqlCore.DbHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: Delete<T>(DbHelper, string, object)
  nameWithType: DbHelperExensions.Delete<T>(DbHelper, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.Delete<T>(Tool.SqlCore.DbHelper, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: Delete
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 307
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 删除单张表数据
  example: []
  syntax:
    content: 'public static int Delete<T>(this DbHelper dbHelper, string where, object prams) where T : new()'
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: where
      type: System.String
      description: 删除的条件
    - id: prams
      type: System.Object
      description: 删除条件的参数,可以是任何类型的键值对
    typeParameters:
    - id: T
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function Delete(Of T As New)(dbHelper As DbHelper, where As String, prams As Object) As Integer
  overload: Tool.SqlCore.DbHelperExensions.Delete*
  nameWithType.vb: DbHelperExensions.Delete(Of T)(DbHelper, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.Delete(Of T)(Tool.SqlCore.DbHelper, String, Object)
  name.vb: Delete(Of T)(DbHelper, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.Delete(Tool.SqlCore.DbHelper,System.String,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.Delete(Tool.SqlCore.DbHelper,System.String,System.String,System.Object)
  id: Delete(Tool.SqlCore.DbHelper,System.String,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: Delete(DbHelper, string, string, object)
  nameWithType: DbHelperExensions.Delete(DbHelper, string, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.Delete(Tool.SqlCore.DbHelper, string, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: Delete
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 320
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 删除单张表数据
  example: []
  syntax:
    content: public static int Delete(this DbHelper dbHelper, string TableName, string where, object prams)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: TableName
      type: System.String
      description: 表名
    - id: where
      type: System.String
      description: 删除的条件
    - id: prams
      type: System.Object
      description: 删除条件的参数,可以是任何类型的键值对
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function Delete(dbHelper As DbHelper, TableName As String, where As String, prams As Object) As Integer
  overload: Tool.SqlCore.DbHelperExensions.Delete*
  nameWithType.vb: DbHelperExensions.Delete(DbHelper, String, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.Delete(Tool.SqlCore.DbHelper, String, String, Object)
  name.vb: Delete(DbHelper, String, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.Delete(Tool.SqlCore.DbHelper,System.String[])
  commentId: M:Tool.SqlCore.DbHelperExensions.Delete(Tool.SqlCore.DbHelper,System.String[])
  id: Delete(Tool.SqlCore.DbHelper,System.String[])
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: Delete(DbHelper, params string[])
  nameWithType: DbHelperExensions.Delete(DbHelper, params string[])
  fullName: Tool.SqlCore.DbHelperExensions.Delete(Tool.SqlCore.DbHelper, params string[])
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: Delete
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 339
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 删除多多张表数据
  example: []
  syntax:
    content: public static int Delete(this DbHelper dbHelper, params string[] commandTexts)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: commandTexts
      type: System.String[]
      description: 多张表删除语句
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function Delete(dbHelper As DbHelper, ParamArray commandTexts As String()) As Integer
  overload: Tool.SqlCore.DbHelperExensions.Delete*
  nameWithType.vb: DbHelperExensions.Delete(DbHelper, ParamArray String())
  fullName.vb: Tool.SqlCore.DbHelperExensions.Delete(Tool.SqlCore.DbHelper, ParamArray String())
  name.vb: Delete(DbHelper, ParamArray String())
- uid: Tool.SqlCore.DbHelperExensions.SelectAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.SelectAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  id: SelectAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: SelectAsync(DbHelper, string, object)
  nameWithType: DbHelperExensions.SelectAsync(DbHelper, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.SelectAsync(Tool.SqlCore.DbHelper, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: SelectAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 351
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 查询单张表
  example: []
  syntax:
    content: public static Task<DataTable> SelectAsync(this DbHelper dbHelper, string commandText, object prams = null)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: commandText
      type: System.String
      description: 查询语句
    - id: prams
      type: System.Object
      description: 实体类，虚构对象,任何类型的键值对
    return:
      type: System.Threading.Tasks.Task{System.Data.DataTable}
      description: ''
    content.vb: Public Shared Function SelectAsync(dbHelper As DbHelper, commandText As String, prams As Object = Nothing) As Task(Of DataTable)
  overload: Tool.SqlCore.DbHelperExensions.SelectAsync*
  nameWithType.vb: DbHelperExensions.SelectAsync(DbHelper, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.SelectAsync(Tool.SqlCore.DbHelper, String, Object)
  name.vb: SelectAsync(DbHelper, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.SelectDictionaryAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.SelectDictionaryAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  id: SelectDictionaryAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: SelectDictionaryAsync(DbHelper, string, object)
  nameWithType: DbHelperExensions.SelectDictionaryAsync(DbHelper, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.SelectDictionaryAsync(Tool.SqlCore.DbHelper, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: SelectDictionaryAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 372
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 查询单张表
  example: []
  syntax:
    content: public static Task<IList<IDictionary<string, object>>> SelectDictionaryAsync(this DbHelper dbHelper, string commandText, object prams = null)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: commandText
      type: System.String
      description: 查询语句
    - id: prams
      type: System.Object
      description: 实体类，虚构对象,任何类型的键值对
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}}
      description: ''
    content.vb: Public Shared Function SelectDictionaryAsync(dbHelper As DbHelper, commandText As String, prams As Object = Nothing) As Task(Of IList(Of IDictionary(Of String, Object)))
  overload: Tool.SqlCore.DbHelperExensions.SelectDictionaryAsync*
  nameWithType.vb: DbHelperExensions.SelectDictionaryAsync(DbHelper, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.SelectDictionaryAsync(Tool.SqlCore.DbHelper, String, Object)
  name.vb: SelectDictionaryAsync(DbHelper, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.SelectDictionaryAsync(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.SelectDictionaryAsync(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  id: SelectDictionaryAsync(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: SelectDictionaryAsync(DbHelper, CommandType, string, object)
  nameWithType: DbHelperExensions.SelectDictionaryAsync(DbHelper, CommandType, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.SelectDictionaryAsync(Tool.SqlCore.DbHelper, System.Data.CommandType, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: SelectDictionaryAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 385
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 查询单张表
  example: []
  syntax:
    content: public static Task<IList<IDictionary<string, object>>> SelectDictionaryAsync(this DbHelper dbHelper, CommandType command, string commandText, object prams = null)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: command
      type: System.Data.CommandType
      description: 执行模式
    - id: commandText
      type: System.String
      description: 查询语句
    - id: prams
      type: System.Object
      description: 实体类，虚构对象,任何类型的键值对
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}}
      description: ''
    content.vb: Public Shared Function SelectDictionaryAsync(dbHelper As DbHelper, command As CommandType, commandText As String, prams As Object = Nothing) As Task(Of IList(Of IDictionary(Of String, Object)))
  overload: Tool.SqlCore.DbHelperExensions.SelectDictionaryAsync*
  nameWithType.vb: DbHelperExensions.SelectDictionaryAsync(DbHelper, CommandType, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.SelectDictionaryAsync(Tool.SqlCore.DbHelper, System.Data.CommandType, String, Object)
  name.vb: SelectDictionaryAsync(DbHelper, CommandType, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.SelectArrayAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.SelectArrayAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  id: SelectArrayAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: SelectArrayAsync(DbHelper, string, object)
  nameWithType: DbHelperExensions.SelectArrayAsync(DbHelper, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.SelectArrayAsync(Tool.SqlCore.DbHelper, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: SelectArrayAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 404
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 查询单张表
  example: []
  syntax:
    content: public static Task<ArrayList> SelectArrayAsync(this DbHelper dbHelper, string commandText, object prams = null)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: commandText
      type: System.String
      description: 查询语句
    - id: prams
      type: System.Object
      description: 实体类，虚构对象,任何类型的键值对
    return:
      type: System.Threading.Tasks.Task{System.Collections.ArrayList}
      description: ''
    content.vb: Public Shared Function SelectArrayAsync(dbHelper As DbHelper, commandText As String, prams As Object = Nothing) As Task(Of ArrayList)
  overload: Tool.SqlCore.DbHelperExensions.SelectArrayAsync*
  nameWithType.vb: DbHelperExensions.SelectArrayAsync(DbHelper, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.SelectArrayAsync(Tool.SqlCore.DbHelper, String, Object)
  name.vb: SelectArrayAsync(DbHelper, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.SelectArrayAsync(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.SelectArrayAsync(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  id: SelectArrayAsync(Tool.SqlCore.DbHelper,System.Data.CommandType,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: SelectArrayAsync(DbHelper, CommandType, string, object)
  nameWithType: DbHelperExensions.SelectArrayAsync(DbHelper, CommandType, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.SelectArrayAsync(Tool.SqlCore.DbHelper, System.Data.CommandType, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: SelectArrayAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 417
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 查询单张表
  example: []
  syntax:
    content: public static Task<ArrayList> SelectArrayAsync(this DbHelper dbHelper, CommandType command, string commandText, object prams = null)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: command
      type: System.Data.CommandType
      description: 执行模式
    - id: commandText
      type: System.String
      description: 查询语句
    - id: prams
      type: System.Object
      description: 实体类，虚构对象,任何类型的键值对
    return:
      type: System.Threading.Tasks.Task{System.Collections.ArrayList}
      description: ''
    content.vb: Public Shared Function SelectArrayAsync(dbHelper As DbHelper, command As CommandType, commandText As String, prams As Object = Nothing) As Task(Of ArrayList)
  overload: Tool.SqlCore.DbHelperExensions.SelectArrayAsync*
  nameWithType.vb: DbHelperExensions.SelectArrayAsync(DbHelper, CommandType, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.SelectArrayAsync(Tool.SqlCore.DbHelper, System.Data.CommandType, String, Object)
  name.vb: SelectArrayAsync(DbHelper, CommandType, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.SelectAsync``1(Tool.SqlCore.DbHelper,System.Action{``0})
  commentId: M:Tool.SqlCore.DbHelperExensions.SelectAsync``1(Tool.SqlCore.DbHelper,System.Action{``0})
  id: SelectAsync``1(Tool.SqlCore.DbHelper,System.Action{``0})
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: SelectAsync<T>(DbHelper, Action<T>)
  nameWithType: DbHelperExensions.SelectAsync<T>(DbHelper, Action<T>)
  fullName: Tool.SqlCore.DbHelperExensions.SelectAsync<T>(Tool.SqlCore.DbHelper, System.Action<T>)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: SelectAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 435
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 查询单张表
  example: []
  syntax:
    content: 'public static Task<IList<T>> SelectAsync<T>(this DbHelper dbHelper, Action<T> prams = null) where T : new()'
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: prams
      type: System.Action{{T}}
      description: 查询条件
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{{T}}}
      description: ''
    content.vb: Public Shared Function SelectAsync(Of T As New)(dbHelper As DbHelper, prams As Action(Of T) = Nothing) As Task(Of IList(Of T))
  overload: Tool.SqlCore.DbHelperExensions.SelectAsync*
  nameWithType.vb: DbHelperExensions.SelectAsync(Of T)(DbHelper, Action(Of T))
  fullName.vb: Tool.SqlCore.DbHelperExensions.SelectAsync(Of T)(Tool.SqlCore.DbHelper, System.Action(Of T))
  name.vb: SelectAsync(Of T)(DbHelper, Action(Of T))
- uid: Tool.SqlCore.DbHelperExensions.SelectAsync(Tool.SqlCore.DbHelper,System.String[])
  commentId: M:Tool.SqlCore.DbHelperExensions.SelectAsync(Tool.SqlCore.DbHelper,System.String[])
  id: SelectAsync(Tool.SqlCore.DbHelper,System.String[])
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: SelectAsync(DbHelper, params string[])
  nameWithType: DbHelperExensions.SelectAsync(DbHelper, params string[])
  fullName: Tool.SqlCore.DbHelperExensions.SelectAsync(Tool.SqlCore.DbHelper, params string[])
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: SelectAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 505
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 查询多张表
  example: []
  syntax:
    content: public static Task<DataSet> SelectAsync(this DbHelper dbHelper, params string[] commandTexts)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: commandTexts
      type: System.String[]
      description: 多条查询语句
    return:
      type: System.Threading.Tasks.Task{System.Data.DataSet}
      description: ''
    content.vb: Public Shared Function SelectAsync(dbHelper As DbHelper, ParamArray commandTexts As String()) As Task(Of DataSet)
  overload: Tool.SqlCore.DbHelperExensions.SelectAsync*
  nameWithType.vb: DbHelperExensions.SelectAsync(DbHelper, ParamArray String())
  fullName.vb: Tool.SqlCore.DbHelperExensions.SelectAsync(Tool.SqlCore.DbHelper, ParamArray String())
  name.vb: SelectAsync(DbHelper, ParamArray String())
- uid: Tool.SqlCore.DbHelperExensions.InsertAsync``1(Tool.SqlCore.DbHelper,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.InsertAsync``1(Tool.SqlCore.DbHelper,System.Object)
  id: InsertAsync``1(Tool.SqlCore.DbHelper,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: InsertAsync<T>(DbHelper, object)
  nameWithType: DbHelperExensions.InsertAsync<T>(DbHelper, object)
  fullName: Tool.SqlCore.DbHelperExensions.InsertAsync<T>(Tool.SqlCore.DbHelper, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: InsertAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 521
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 插入一条结果
  example: []
  syntax:
    content: 'public static Task<int> InsertAsync<T>(this DbHelper dbHelper, object prams) where T : new()'
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: prams
      type: System.Object
      description: 实体类，虚构对象,任何类型的键值对
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
    content.vb: Public Shared Function InsertAsync(Of T As New)(dbHelper As DbHelper, prams As Object) As Task(Of Integer)
  overload: Tool.SqlCore.DbHelperExensions.InsertAsync*
  nameWithType.vb: DbHelperExensions.InsertAsync(Of T)(DbHelper, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.InsertAsync(Of T)(Tool.SqlCore.DbHelper, Object)
  name.vb: InsertAsync(Of T)(DbHelper, Object)
- uid: Tool.SqlCore.DbHelperExensions.InsertAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.InsertAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  id: InsertAsync(Tool.SqlCore.DbHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: InsertAsync(DbHelper, string, object)
  nameWithType: DbHelperExensions.InsertAsync(DbHelper, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.InsertAsync(Tool.SqlCore.DbHelper, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: InsertAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 533
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 插入一条结果
  example: []
  syntax:
    content: public static Task<int> InsertAsync(this DbHelper dbHelper, string TableName, object prams)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: TableName
      type: System.String
      description: 表名
    - id: prams
      type: System.Object
      description: 实体类，虚构对象,任何类型的键值对
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
    content.vb: Public Shared Function InsertAsync(dbHelper As DbHelper, TableName As String, prams As Object) As Task(Of Integer)
  overload: Tool.SqlCore.DbHelperExensions.InsertAsync*
  nameWithType.vb: DbHelperExensions.InsertAsync(DbHelper, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.InsertAsync(Tool.SqlCore.DbHelper, String, Object)
  name.vb: InsertAsync(DbHelper, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.InsertAsync(Tool.SqlCore.DbHelper,System.String[])
  commentId: M:Tool.SqlCore.DbHelperExensions.InsertAsync(Tool.SqlCore.DbHelper,System.String[])
  id: InsertAsync(Tool.SqlCore.DbHelper,System.String[])
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: InsertAsync(DbHelper, params string[])
  nameWithType: DbHelperExensions.InsertAsync(DbHelper, params string[])
  fullName: Tool.SqlCore.DbHelperExensions.InsertAsync(Tool.SqlCore.DbHelper, params string[])
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: InsertAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 554
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 插入多条结果，可以是多张不同的表
  example: []
  syntax:
    content: public static Task<int> InsertAsync(this DbHelper dbHelper, params string[] commandTexts)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: commandTexts
      type: System.String[]
      description: 多条插入语句
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
    content.vb: Public Shared Function InsertAsync(dbHelper As DbHelper, ParamArray commandTexts As String()) As Task(Of Integer)
  overload: Tool.SqlCore.DbHelperExensions.InsertAsync*
  nameWithType.vb: DbHelperExensions.InsertAsync(DbHelper, ParamArray String())
  fullName.vb: Tool.SqlCore.DbHelperExensions.InsertAsync(Tool.SqlCore.DbHelper, ParamArray String())
  name.vb: InsertAsync(DbHelper, ParamArray String())
- uid: Tool.SqlCore.DbHelperExensions.UpdateAsync``1(Tool.SqlCore.DbHelper,System.String,System.Object[])
  commentId: M:Tool.SqlCore.DbHelperExensions.UpdateAsync``1(Tool.SqlCore.DbHelper,System.String,System.Object[])
  id: UpdateAsync``1(Tool.SqlCore.DbHelper,System.String,System.Object[])
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: UpdateAsync<T>(DbHelper, string, params object[])
  nameWithType: DbHelperExensions.UpdateAsync<T>(DbHelper, string, params object[])
  fullName: Tool.SqlCore.DbHelperExensions.UpdateAsync<T>(Tool.SqlCore.DbHelper, string, params object[])
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: UpdateAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 567
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 修改单表结果
  example: []
  syntax:
    content: 'public static Task<int> UpdateAsync<T>(this DbHelper dbHelper, string where, params object[] prams) where T : new()'
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: where
      type: System.String
      description: 修改的条件
    - id: prams
      type: System.Object[]
      description: 修改表的参数 Or 修改条件的参数,可以是任何类型的键值对
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
    content.vb: Public Shared Function UpdateAsync(Of T As New)(dbHelper As DbHelper, where As String, ParamArray prams As Object()) As Task(Of Integer)
  overload: Tool.SqlCore.DbHelperExensions.UpdateAsync*
  nameWithType.vb: DbHelperExensions.UpdateAsync(Of T)(DbHelper, String, ParamArray Object())
  fullName.vb: Tool.SqlCore.DbHelperExensions.UpdateAsync(Of T)(Tool.SqlCore.DbHelper, String, ParamArray Object())
  name.vb: UpdateAsync(Of T)(DbHelper, String, ParamArray Object())
- uid: Tool.SqlCore.DbHelperExensions.UpdateAsync(Tool.SqlCore.DbHelper,System.String,System.String,System.Object[])
  commentId: M:Tool.SqlCore.DbHelperExensions.UpdateAsync(Tool.SqlCore.DbHelper,System.String,System.String,System.Object[])
  id: UpdateAsync(Tool.SqlCore.DbHelper,System.String,System.String,System.Object[])
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: UpdateAsync(DbHelper, string, string, params object[])
  nameWithType: DbHelperExensions.UpdateAsync(DbHelper, string, string, params object[])
  fullName: Tool.SqlCore.DbHelperExensions.UpdateAsync(Tool.SqlCore.DbHelper, string, string, params object[])
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: UpdateAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 580
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 修改单表结果
  example: []
  syntax:
    content: public static Task<int> UpdateAsync(this DbHelper dbHelper, string TableName, string where, params object[] prams)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: TableName
      type: System.String
      description: 表名
    - id: where
      type: System.String
      description: 修改的条件，无需写 WHERE 直接条件
    - id: prams
      type: System.Object[]
      description: 修改表的参数 Or 修改条件的参数,可以是任何类型的键值对
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
    content.vb: Public Shared Function UpdateAsync(dbHelper As DbHelper, TableName As String, where As String, ParamArray prams As Object()) As Task(Of Integer)
  overload: Tool.SqlCore.DbHelperExensions.UpdateAsync*
  nameWithType.vb: DbHelperExensions.UpdateAsync(DbHelper, String, String, ParamArray Object())
  fullName.vb: Tool.SqlCore.DbHelperExensions.UpdateAsync(Tool.SqlCore.DbHelper, String, String, ParamArray Object())
  name.vb: UpdateAsync(DbHelper, String, String, ParamArray Object())
- uid: Tool.SqlCore.DbHelperExensions.UpdateAsync(Tool.SqlCore.DbHelper,System.String[])
  commentId: M:Tool.SqlCore.DbHelperExensions.UpdateAsync(Tool.SqlCore.DbHelper,System.String[])
  id: UpdateAsync(Tool.SqlCore.DbHelper,System.String[])
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: UpdateAsync(DbHelper, params string[])
  nameWithType: DbHelperExensions.UpdateAsync(DbHelper, params string[])
  fullName: Tool.SqlCore.DbHelperExensions.UpdateAsync(Tool.SqlCore.DbHelper, params string[])
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: UpdateAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 616
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 修改多表结果
  example: []
  syntax:
    content: public static Task<int> UpdateAsync(this DbHelper dbHelper, params string[] commandTexts)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: commandTexts
      type: System.String[]
      description: 多条插入语句
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
    content.vb: Public Shared Function UpdateAsync(dbHelper As DbHelper, ParamArray commandTexts As String()) As Task(Of Integer)
  overload: Tool.SqlCore.DbHelperExensions.UpdateAsync*
  nameWithType.vb: DbHelperExensions.UpdateAsync(DbHelper, ParamArray String())
  fullName.vb: Tool.SqlCore.DbHelperExensions.UpdateAsync(Tool.SqlCore.DbHelper, ParamArray String())
  name.vb: UpdateAsync(DbHelper, ParamArray String())
- uid: Tool.SqlCore.DbHelperExensions.DeleteAsync``1(Tool.SqlCore.DbHelper,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.DeleteAsync``1(Tool.SqlCore.DbHelper,System.String,System.Object)
  id: DeleteAsync``1(Tool.SqlCore.DbHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: DeleteAsync<T>(DbHelper, string, object)
  nameWithType: DbHelperExensions.DeleteAsync<T>(DbHelper, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.DeleteAsync<T>(Tool.SqlCore.DbHelper, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: DeleteAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 628
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 删除单张表数据
  example: []
  syntax:
    content: 'public static Task<int> DeleteAsync<T>(this DbHelper dbHelper, string where, object prams) where T : new()'
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: where
      type: System.String
      description: 删除的条件
    - id: prams
      type: System.Object
      description: 删除条件的参数,可以是任何类型的键值对
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
    content.vb: Public Shared Function DeleteAsync(Of T As New)(dbHelper As DbHelper, where As String, prams As Object) As Task(Of Integer)
  overload: Tool.SqlCore.DbHelperExensions.DeleteAsync*
  nameWithType.vb: DbHelperExensions.DeleteAsync(Of T)(DbHelper, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.DeleteAsync(Of T)(Tool.SqlCore.DbHelper, String, Object)
  name.vb: DeleteAsync(Of T)(DbHelper, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.DeleteAsync(Tool.SqlCore.DbHelper,System.String,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.DeleteAsync(Tool.SqlCore.DbHelper,System.String,System.String,System.Object)
  id: DeleteAsync(Tool.SqlCore.DbHelper,System.String,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(DbHelper, string, string, object)
  nameWithType: DbHelperExensions.DeleteAsync(DbHelper, string, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.DeleteAsync(Tool.SqlCore.DbHelper, string, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: DeleteAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 641
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 删除单张表数据
  example: []
  syntax:
    content: public static Task<int> DeleteAsync(this DbHelper dbHelper, string TableName, string where, object prams)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: TableName
      type: System.String
      description: 表名
    - id: where
      type: System.String
      description: 删除的条件
    - id: prams
      type: System.Object
      description: 删除条件的参数,可以是任何类型的键值对
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
    content.vb: Public Shared Function DeleteAsync(dbHelper As DbHelper, TableName As String, where As String, prams As Object) As Task(Of Integer)
  overload: Tool.SqlCore.DbHelperExensions.DeleteAsync*
  nameWithType.vb: DbHelperExensions.DeleteAsync(DbHelper, String, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.DeleteAsync(Tool.SqlCore.DbHelper, String, String, Object)
  name.vb: DeleteAsync(DbHelper, String, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.DeleteAsync(Tool.SqlCore.DbHelper,System.String[])
  commentId: M:Tool.SqlCore.DbHelperExensions.DeleteAsync(Tool.SqlCore.DbHelper,System.String[])
  id: DeleteAsync(Tool.SqlCore.DbHelper,System.String[])
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(DbHelper, params string[])
  nameWithType: DbHelperExensions.DeleteAsync(DbHelper, params string[])
  fullName: Tool.SqlCore.DbHelperExensions.DeleteAsync(Tool.SqlCore.DbHelper, params string[])
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: DeleteAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 660
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 删除多多张表数据
  example: []
  syntax:
    content: public static Task<int> DeleteAsync(this DbHelper dbHelper, params string[] commandTexts)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: commandTexts
      type: System.String[]
      description: 多张表删除语句
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
    content.vb: Public Shared Function DeleteAsync(dbHelper As DbHelper, ParamArray commandTexts As String()) As Task(Of Integer)
  overload: Tool.SqlCore.DbHelperExensions.DeleteAsync*
  nameWithType.vb: DbHelperExensions.DeleteAsync(DbHelper, ParamArray String())
  fullName.vb: Tool.SqlCore.DbHelperExensions.DeleteAsync(Tool.SqlCore.DbHelper, ParamArray String())
  name.vb: DeleteAsync(DbHelper, ParamArray String())
- uid: Tool.SqlCore.DbHelperExensions.GetTextParameter(Tool.SqlCore.DbHelper,System.String,System.Object)
  commentId: M:Tool.SqlCore.DbHelperExensions.GetTextParameter(Tool.SqlCore.DbHelper,System.String,System.Object)
  id: GetTextParameter(Tool.SqlCore.DbHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: GetTextParameter(DbHelper, string, object)
  nameWithType: DbHelperExensions.GetTextParameter(DbHelper, string, object)
  fullName: Tool.SqlCore.DbHelperExensions.GetTextParameter(Tool.SqlCore.DbHelper, string, object)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: GetTextParameter
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 672
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 提供快捷方式，匿名对象实现
  example: []
  syntax:
    content: public static SqlTextParameter GetTextParameter(this DbHelper dbHelper, string commandText, object prams)
    parameters:
    - id: dbHelper
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: commandText
      type: System.String
      description: 执行的SQL语句
    - id: prams
      type: System.Object
      description: 携带的参数可以是Null,可以是任何类型的键值对
    return:
      type: Tool.SqlCore.SqlTextParameter
      description: 返回<xref href="Tool.SqlCore.SqlTextParameter" data-throw-if-not-resolved="false"></xref>对象
    content.vb: Public Shared Function GetTextParameter(dbHelper As DbHelper, commandText As String, prams As Object) As SqlTextParameter
  overload: Tool.SqlCore.DbHelperExensions.GetTextParameter*
  nameWithType.vb: DbHelperExensions.GetTextParameter(DbHelper, String, Object)
  fullName.vb: Tool.SqlCore.DbHelperExensions.GetTextParameter(Tool.SqlCore.DbHelper, String, Object)
  name.vb: GetTextParameter(DbHelper, String, Object)
- uid: Tool.SqlCore.DbHelperExensions.WhereStr(System.String)
  commentId: M:Tool.SqlCore.DbHelperExensions.WhereStr(System.String)
  id: WhereStr(System.String)
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: WhereStr(string)
  nameWithType: DbHelperExensions.WhereStr(string)
  fullName: Tool.SqlCore.DbHelperExensions.WhereStr(string)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: WhereStr
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 703
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 避免问题where 第一位不能为空格
  example: []
  syntax:
    content: public static string WhereStr(string where)
    parameters:
    - id: where
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function WhereStr(where As String) As String
  overload: Tool.SqlCore.DbHelperExensions.WhereStr*
  nameWithType.vb: DbHelperExensions.WhereStr(String)
  fullName.vb: Tool.SqlCore.DbHelperExensions.WhereStr(String)
  name.vb: WhereStr(String)
- uid: Tool.SqlCore.DbHelperExensions.GetInsertParams(Tool.SqlCore.DbHelper,System.Collections.Generic.IDictionary{System.String,System.Object},System.String@,System.String@)
  commentId: M:Tool.SqlCore.DbHelperExensions.GetInsertParams(Tool.SqlCore.DbHelper,System.Collections.Generic.IDictionary{System.String,System.Object},System.String@,System.String@)
  id: GetInsertParams(Tool.SqlCore.DbHelper,System.Collections.Generic.IDictionary{System.String,System.Object},System.String@,System.String@)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: GetInsertParams(DbHelper, IDictionary<string, object>, out string, out string)
  nameWithType: DbHelperExensions.GetInsertParams(DbHelper, IDictionary<string, object>, out string, out string)
  fullName: Tool.SqlCore.DbHelperExensions.GetInsertParams(Tool.SqlCore.DbHelper, System.Collections.Generic.IDictionary<string, object>, out string, out string)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: GetInsertParams
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 731
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 根据键值对生成 Insert 部分语法，和值添加对象
  example: []
  syntax:
    content: public static List<DbParameter> GetInsertParams(this DbHelper database, IDictionary<string, object> keyValues, out string key, out string value)
    parameters:
    - id: database
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: keyValues
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: 数据集键值对
    - id: key
      type: System.String
      description: 返回生成的部分SQL语句
    - id: value
      type: System.String
      description: 返回生成的部分SQL语句
    return:
      type: System.Collections.Generic.List{System.Data.Common.DbParameter}
      description: <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function GetInsertParams(database As DbHelper, keyValues As IDictionary(Of String, Object), key As String, value As String) As List(Of DbParameter)
  overload: Tool.SqlCore.DbHelperExensions.GetInsertParams*
  nameWithType.vb: DbHelperExensions.GetInsertParams(DbHelper, IDictionary(Of String, Object), String, String)
  fullName.vb: Tool.SqlCore.DbHelperExensions.GetInsertParams(Tool.SqlCore.DbHelper, System.Collections.Generic.IDictionary(Of String, Object), String, String)
  name.vb: GetInsertParams(DbHelper, IDictionary(Of String, Object), String, String)
- uid: Tool.SqlCore.DbHelperExensions.GetUpdateParams(Tool.SqlCore.DbHelper,System.Collections.Generic.IDictionary{System.String,System.Object},System.String@)
  commentId: M:Tool.SqlCore.DbHelperExensions.GetUpdateParams(Tool.SqlCore.DbHelper,System.Collections.Generic.IDictionary{System.String,System.Object},System.String@)
  id: GetUpdateParams(Tool.SqlCore.DbHelper,System.Collections.Generic.IDictionary{System.String,System.Object},System.String@)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: GetUpdateParams(DbHelper, IDictionary<string, object>, out string)
  nameWithType: DbHelperExensions.GetUpdateParams(DbHelper, IDictionary<string, object>, out string)
  fullName: Tool.SqlCore.DbHelperExensions.GetUpdateParams(Tool.SqlCore.DbHelper, System.Collections.Generic.IDictionary<string, object>, out string)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: GetUpdateParams
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 781
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 根据键值对生成 Update 部分语法，和值添加对象
  example: []
  syntax:
    content: public static List<DbParameter> GetUpdateParams(this DbHelper database, IDictionary<string, object> keyValues, out string strsql)
    parameters:
    - id: database
      type: Tool.SqlCore.DbHelper
      description: 数据库引擎
    - id: keyValues
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: 数据集键值对
    - id: strsql
      type: System.String
      description: 返回生成的部分SQL语句
    return:
      type: System.Collections.Generic.List{System.Data.Common.DbParameter}
      description: <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function GetUpdateParams(database As DbHelper, keyValues As IDictionary(Of String, Object), strsql As String) As List(Of DbParameter)
  overload: Tool.SqlCore.DbHelperExensions.GetUpdateParams*
  nameWithType.vb: DbHelperExensions.GetUpdateParams(DbHelper, IDictionary(Of String, Object), String)
  fullName.vb: Tool.SqlCore.DbHelperExensions.GetUpdateParams(Tool.SqlCore.DbHelper, System.Collections.Generic.IDictionary(Of String, Object), String)
  name.vb: GetUpdateParams(DbHelper, IDictionary(Of String, Object), String)
- uid: Tool.SqlCore.DbHelperExensions.GetReader``1
  commentId: M:Tool.SqlCore.DbHelperExensions.GetReader``1
  id: GetReader``1
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: GetReader<T>()
  nameWithType: DbHelperExensions.GetReader<T>()
  fullName: Tool.SqlCore.DbHelperExensions.GetReader<T>()
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: GetReader
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 820
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 一个测试阶段的 实体转换函数
  example: []
  syntax:
    content: public static Func<DbDataReader, T> GetReader<T>()
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Func{System.Data.Common.DbDataReader,{T}}
      description: ''
    content.vb: Public Shared Function GetReader(Of T)() As Func(Of DbDataReader, T)
  overload: Tool.SqlCore.DbHelperExensions.GetReader*
  nameWithType.vb: DbHelperExensions.GetReader(Of T)()
  fullName.vb: Tool.SqlCore.DbHelperExensions.GetReader(Of T)()
  name.vb: GetReader(Of T)()
- uid: Tool.SqlCore.DbHelperExensions.GetListHash(System.Data.Common.DbDataReader,System.Boolean)
  commentId: M:Tool.SqlCore.DbHelperExensions.GetListHash(System.Data.Common.DbDataReader,System.Boolean)
  id: GetListHash(System.Data.Common.DbDataReader,System.Boolean)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: GetListHash(DbDataReader, bool)
  nameWithType: DbHelperExensions.GetListHash(DbDataReader, bool)
  fullName: Tool.SqlCore.DbHelperExensions.GetListHash(System.Data.Common.DbDataReader, bool)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: GetListHash
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 880
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 将<xref href="System.Data.Common.DbDataReader" data-throw-if-not-resolved="false"></xref>对象，中数据转换为集合字典
  example: []
  syntax:
    content: public static IList<IDictionary<string, object>> GetListHash(this DbDataReader dataReader, bool isnull = false)
    parameters:
    - id: dataReader
      type: System.Data.Common.DbDataReader
      description: 原数据对象
    - id: isnull
      type: System.Boolean
      description: 是否处理Null值，true时将不包含在字典中
    return:
      type: System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}
      description: 返回可读集合字典
    content.vb: Public Shared Function GetListHash(dataReader As DbDataReader, isnull As Boolean = False) As IList(Of IDictionary(Of String, Object))
  overload: Tool.SqlCore.DbHelperExensions.GetListHash*
  nameWithType.vb: DbHelperExensions.GetListHash(DbDataReader, Boolean)
  fullName.vb: Tool.SqlCore.DbHelperExensions.GetListHash(System.Data.Common.DbDataReader, Boolean)
  name.vb: GetListHash(DbDataReader, Boolean)
- uid: Tool.SqlCore.DbHelperExensions.GetListHashAsync(System.Data.Common.DbDataReader,System.Boolean)
  commentId: M:Tool.SqlCore.DbHelperExensions.GetListHashAsync(System.Data.Common.DbDataReader,System.Boolean)
  id: GetListHashAsync(System.Data.Common.DbDataReader,System.Boolean)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: GetListHashAsync(DbDataReader, bool)
  nameWithType: DbHelperExensions.GetListHashAsync(DbDataReader, bool)
  fullName: Tool.SqlCore.DbHelperExensions.GetListHashAsync(System.Data.Common.DbDataReader, bool)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: GetListHashAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 914
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 将<xref href="System.Data.Common.DbDataReader" data-throw-if-not-resolved="false"></xref>对象，中数据转换为集合字典
  example: []
  syntax:
    content: public static Task<IList<IDictionary<string, object>>> GetListHashAsync(this DbDataReader dataReader, bool isnull = false)
    parameters:
    - id: dataReader
      type: System.Data.Common.DbDataReader
      description: 原数据对象
    - id: isnull
      type: System.Boolean
      description: 是否处理Null值，true时将不包含在字典中
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}}
      description: 返回可读集合字典
    content.vb: Public Shared Function GetListHashAsync(dataReader As DbDataReader, isnull As Boolean = False) As Task(Of IList(Of IDictionary(Of String, Object)))
  overload: Tool.SqlCore.DbHelperExensions.GetListHashAsync*
  nameWithType.vb: DbHelperExensions.GetListHashAsync(DbDataReader, Boolean)
  fullName.vb: Tool.SqlCore.DbHelperExensions.GetListHashAsync(System.Data.Common.DbDataReader, Boolean)
  name.vb: GetListHashAsync(DbDataReader, Boolean)
- uid: Tool.SqlCore.DbHelperExensions.GetReaderArray(System.Data.Common.DbDataReader,System.Boolean)
  commentId: M:Tool.SqlCore.DbHelperExensions.GetReaderArray(System.Data.Common.DbDataReader,System.Boolean)
  id: GetReaderArray(System.Data.Common.DbDataReader,System.Boolean)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: GetReaderArray(DbDataReader, bool)
  nameWithType: DbHelperExensions.GetReaderArray(DbDataReader, bool)
  fullName: Tool.SqlCore.DbHelperExensions.GetReaderArray(System.Data.Common.DbDataReader, bool)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: GetReaderArray
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 948
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 将<xref href="System.Data.Common.DbDataReader" data-throw-if-not-resolved="false"></xref>对象，中数据转换为 二维数组集合
  example: []
  syntax:
    content: public static ArrayList GetReaderArray(this DbDataReader dataReader, bool isnull = false)
    parameters:
    - id: dataReader
      type: System.Data.Common.DbDataReader
      description: 原数据对象
    - id: isnull
      type: System.Boolean
      description: 是否处理Null值，true时将不包含在二维数组中
    return:
      type: System.Collections.ArrayList
      description: 返回可读二维数组集合
    content.vb: Public Shared Function GetReaderArray(dataReader As DbDataReader, isnull As Boolean = False) As ArrayList
  overload: Tool.SqlCore.DbHelperExensions.GetReaderArray*
  nameWithType.vb: DbHelperExensions.GetReaderArray(DbDataReader, Boolean)
  fullName.vb: Tool.SqlCore.DbHelperExensions.GetReaderArray(System.Data.Common.DbDataReader, Boolean)
  name.vb: GetReaderArray(DbDataReader, Boolean)
- uid: Tool.SqlCore.DbHelperExensions.GetReaderArrayAsync(System.Data.Common.DbDataReader,System.Boolean)
  commentId: M:Tool.SqlCore.DbHelperExensions.GetReaderArrayAsync(System.Data.Common.DbDataReader,System.Boolean)
  id: GetReaderArrayAsync(System.Data.Common.DbDataReader,System.Boolean)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: GetReaderArrayAsync(DbDataReader, bool)
  nameWithType: DbHelperExensions.GetReaderArrayAsync(DbDataReader, bool)
  fullName: Tool.SqlCore.DbHelperExensions.GetReaderArrayAsync(System.Data.Common.DbDataReader, bool)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: GetReaderArrayAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 981
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 将<xref href="System.Data.Common.DbDataReader" data-throw-if-not-resolved="false"></xref>对象，中数据转换为 二维数组集合
  example: []
  syntax:
    content: public static Task<ArrayList> GetReaderArrayAsync(this DbDataReader dataReader, bool isnull = false)
    parameters:
    - id: dataReader
      type: System.Data.Common.DbDataReader
      description: 原数据对象
    - id: isnull
      type: System.Boolean
      description: 是否处理Null值，true时将不包含在二维数组中
    return:
      type: System.Threading.Tasks.Task{System.Collections.ArrayList}
      description: 返回可读二维数组集合
    content.vb: Public Shared Function GetReaderArrayAsync(dataReader As DbDataReader, isnull As Boolean = False) As Task(Of ArrayList)
  overload: Tool.SqlCore.DbHelperExensions.GetReaderArrayAsync*
  nameWithType.vb: DbHelperExensions.GetReaderArrayAsync(DbDataReader, Boolean)
  fullName.vb: Tool.SqlCore.DbHelperExensions.GetReaderArrayAsync(System.Data.Common.DbDataReader, Boolean)
  name.vb: GetReaderArrayAsync(DbDataReader, Boolean)
- uid: Tool.SqlCore.DbHelperExensions.GetDataSet(System.Data.Common.DbDataReader)
  commentId: M:Tool.SqlCore.DbHelperExensions.GetDataSet(System.Data.Common.DbDataReader)
  id: GetDataSet(System.Data.Common.DbDataReader)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: GetDataSet(DbDataReader)
  nameWithType: DbHelperExensions.GetDataSet(DbDataReader)
  fullName: Tool.SqlCore.DbHelperExensions.GetDataSet(System.Data.Common.DbDataReader)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: GetDataSet
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 1013
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 将<xref href="System.Data.Common.DbDataReader" data-throw-if-not-resolved="false"></xref>对象，中数据转换为 <xref href="System.Data.DataSet" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static DataSet GetDataSet(this DbDataReader dataReader)
    parameters:
    - id: dataReader
      type: System.Data.Common.DbDataReader
      description: 原数据对象
    return:
      type: System.Data.DataSet
      description: 返回可读集合字典
    content.vb: Public Shared Function GetDataSet(dataReader As DbDataReader) As DataSet
  overload: Tool.SqlCore.DbHelperExensions.GetDataSet*
- uid: Tool.SqlCore.DbHelperExensions.GetDataTable(System.Data.Common.DbDataReader)
  commentId: M:Tool.SqlCore.DbHelperExensions.GetDataTable(System.Data.Common.DbDataReader)
  id: GetDataTable(System.Data.Common.DbDataReader)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: GetDataTable(DbDataReader)
  nameWithType: DbHelperExensions.GetDataTable(DbDataReader)
  fullName: Tool.SqlCore.DbHelperExensions.GetDataTable(System.Data.Common.DbDataReader)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: GetDataTable
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 1031
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 将<xref href="System.Data.Common.DbDataReader" data-throw-if-not-resolved="false"></xref>对象，中数据转换为 <xref href="System.Data.DataTable" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static DataTable GetDataTable(this DbDataReader dataReader)
    parameters:
    - id: dataReader
      type: System.Data.Common.DbDataReader
      description: 原数据对象
    return:
      type: System.Data.DataTable
      description: 返回可读集合字典
    content.vb: Public Shared Function GetDataTable(dataReader As DbDataReader) As DataTable
  overload: Tool.SqlCore.DbHelperExensions.GetDataTable*
- uid: Tool.SqlCore.DbHelperExensions.GetDataSetAsync(System.Data.Common.DbDataReader)
  commentId: M:Tool.SqlCore.DbHelperExensions.GetDataSetAsync(System.Data.Common.DbDataReader)
  id: GetDataSetAsync(System.Data.Common.DbDataReader)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: GetDataSetAsync(DbDataReader)
  nameWithType: DbHelperExensions.GetDataSetAsync(DbDataReader)
  fullName: Tool.SqlCore.DbHelperExensions.GetDataSetAsync(System.Data.Common.DbDataReader)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: GetDataSetAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 1055
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 将<xref href="System.Data.Common.DbDataReader" data-throw-if-not-resolved="false"></xref>对象，中数据转换为 <xref href="System.Data.DataSet" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Task<DataSet> GetDataSetAsync(this DbDataReader dataReader)
    parameters:
    - id: dataReader
      type: System.Data.Common.DbDataReader
      description: 原数据对象
    return:
      type: System.Threading.Tasks.Task{System.Data.DataSet}
      description: 返回可读集合字典
    content.vb: Public Shared Function GetDataSetAsync(dataReader As DbDataReader) As Task(Of DataSet)
  overload: Tool.SqlCore.DbHelperExensions.GetDataSetAsync*
- uid: Tool.SqlCore.DbHelperExensions.GetDataTableAsync(System.Data.Common.DbDataReader)
  commentId: M:Tool.SqlCore.DbHelperExensions.GetDataTableAsync(System.Data.Common.DbDataReader)
  id: GetDataTableAsync(System.Data.Common.DbDataReader)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: GetDataTableAsync(DbDataReader)
  nameWithType: DbHelperExensions.GetDataTableAsync(DbDataReader)
  fullName: Tool.SqlCore.DbHelperExensions.GetDataTableAsync(System.Data.Common.DbDataReader)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: GetDataTableAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 1073
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 将<xref href="System.Data.Common.DbDataReader" data-throw-if-not-resolved="false"></xref>对象，中数据转换为 <xref href="System.Data.DataTable" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Task<DataTable> GetDataTableAsync(this DbDataReader dataReader)
    parameters:
    - id: dataReader
      type: System.Data.Common.DbDataReader
      description: 原数据对象
    return:
      type: System.Threading.Tasks.Task{System.Data.DataTable}
      description: 返回可读集合字典
    content.vb: Public Shared Function GetDataTableAsync(dataReader As DbDataReader) As Task(Of DataTable)
  overload: Tool.SqlCore.DbHelperExensions.GetDataTableAsync*
- uid: Tool.SqlCore.DbHelperExensions.GetDataColumnSchema(System.Data.Common.DbDataReader)
  commentId: M:Tool.SqlCore.DbHelperExensions.GetDataColumnSchema(System.Data.Common.DbDataReader)
  id: GetDataColumnSchema(System.Data.Common.DbDataReader)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: GetDataColumnSchema(DbDataReader)
  nameWithType: DbHelperExensions.GetDataColumnSchema(DbDataReader)
  fullName: Tool.SqlCore.DbHelperExensions.GetDataColumnSchema(System.Data.Common.DbDataReader)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: GetDataColumnSchema
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 1097
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 获取DataTable表信息不含数据
  example: []
  syntax:
    content: public static DataTable GetDataColumnSchema(this DbDataReader dataReader)
    parameters:
    - id: dataReader
      type: System.Data.Common.DbDataReader
      description: 原数据对象
    return:
      type: System.Data.DataTable
      description: ''
    content.vb: Public Shared Function GetDataColumnSchema(dataReader As DbDataReader) As DataTable
  overload: Tool.SqlCore.DbHelperExensions.GetDataColumnSchema*
- uid: Tool.SqlCore.DbHelperExensions.GetDataColumnSchemaAsync(System.Data.Common.DbDataReader)
  commentId: M:Tool.SqlCore.DbHelperExensions.GetDataColumnSchemaAsync(System.Data.Common.DbDataReader)
  id: GetDataColumnSchemaAsync(System.Data.Common.DbDataReader)
  isExtensionMethod: true
  parent: Tool.SqlCore.DbHelperExensions
  langs:
  - csharp
  - vb
  name: GetDataColumnSchemaAsync(DbDataReader)
  nameWithType: DbHelperExensions.GetDataColumnSchemaAsync(DbDataReader)
  fullName: Tool.SqlCore.DbHelperExensions.GetDataColumnSchemaAsync(System.Data.Common.DbDataReader)
  type: Method
  source:
    remote:
      path: Tool.Net/SqlCore/DbHelperExensions.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: GetDataColumnSchemaAsync
    path: ../../Tool.Net/SqlCore/DbHelperExensions.cs
    startLine: 1107
  assemblies:
  - Tool.Net
  namespace: Tool.SqlCore
  summary: 获取DataTable表信息不含数据
  example: []
  syntax:
    content: public static Task<DataTable> GetDataColumnSchemaAsync(this DbDataReader dataReader)
    parameters:
    - id: dataReader
      type: System.Data.Common.DbDataReader
      description: 原数据对象
    return:
      type: System.Threading.Tasks.Task{System.Data.DataTable}
      description: ''
    content.vb: Public Shared Function GetDataColumnSchemaAsync(dataReader As DbDataReader) As Task(Of DataTable)
  overload: Tool.SqlCore.DbHelperExensions.GetDataColumnSchemaAsync*
references:
- uid: Tool.SqlCore.DbHelper
  commentId: T:Tool.SqlCore.DbHelper
  parent: Tool.SqlCore
  href: Tool.SqlCore.DbHelper.html
  name: DbHelper
  nameWithType: DbHelper
  fullName: Tool.SqlCore.DbHelper
- uid: Tool.SqlCore
  commentId: N:Tool.SqlCore
  href: Tool.html
  name: Tool.SqlCore
  nameWithType: Tool.SqlCore
  fullName: Tool.SqlCore
  spec.csharp:
  - uid: Tool
    name: Tool
    href: Tool.html
  - name: .
  - uid: Tool.SqlCore
    name: SqlCore
    href: Tool.SqlCore.html
  spec.vb:
  - uid: Tool
    name: Tool
    href: Tool.html
  - name: .
  - uid: Tool.SqlCore
    name: SqlCore
    href: Tool.SqlCore.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Tool.SqlCore.DbHelperExensions.Select*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.Select
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_Select_Tool_SqlCore_DbHelper_System_String_System_Object_
  name: Select
  nameWithType: DbHelperExensions.Select
  fullName: Tool.SqlCore.DbHelperExensions.Select
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Data.DataTable
  commentId: T:System.Data.DataTable
  parent: System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.datatable
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data
  commentId: N:System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
- uid: Tool.SqlCore.DbHelperExensions.SelectDictionary*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.SelectDictionary
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_SelectDictionary_Tool_SqlCore_DbHelper_System_String_System_Object_
  name: SelectDictionary
  nameWithType: DbHelperExensions.SelectDictionary
  fullName: Tool.SqlCore.DbHelperExensions.SelectDictionary
- uid: System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}
  commentId: T:System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<IDictionary<string, object>>
  nameWithType: IList<IDictionary<string, object>>
  fullName: System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, object>>
  nameWithType.vb: IList(Of IDictionary(Of String, Object))
  fullName.vb: System.Collections.Generic.IList(Of System.Collections.Generic.IDictionary(Of String, Object))
  name.vb: IList(Of IDictionary(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Data.CommandType
  commentId: T:System.Data.CommandType
  parent: System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.commandtype
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: Tool.SqlCore.DbHelperExensions.SelectArray*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.SelectArray
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_SelectArray_Tool_SqlCore_DbHelper_System_String_System_Object_
  name: SelectArray
  nameWithType: DbHelperExensions.SelectArray
  fullName: Tool.SqlCore.DbHelperExensions.SelectArray
- uid: System.Collections.ArrayList
  commentId: T:System.Collections.ArrayList
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.arraylist
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Action{{T}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Data.DataSet
  commentId: T:System.Data.DataSet
  parent: System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.dataset
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: Tool.SqlCore.DbHelperExensions.Insert*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.Insert
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_Insert__1_Tool_SqlCore_DbHelper_System_Object_
  name: Insert
  nameWithType: DbHelperExensions.Insert
  fullName: Tool.SqlCore.DbHelperExensions.Insert
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Tool.SqlCore.DbHelperExensions.Update*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.Update
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_Update__1_Tool_SqlCore_DbHelper_System_String_System_Object___
  name: Update
  nameWithType: DbHelperExensions.Update
  fullName: Tool.SqlCore.DbHelperExensions.Update
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: Tool.SqlCore.DbHelperExensions.Delete*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.Delete
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_Delete__1_Tool_SqlCore_DbHelper_System_String_System_Object_
  name: Delete
  nameWithType: DbHelperExensions.Delete
  fullName: Tool.SqlCore.DbHelperExensions.Delete
- uid: Tool.SqlCore.DbHelperExensions.SelectAsync*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.SelectAsync
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_SelectAsync_Tool_SqlCore_DbHelper_System_String_System_Object_
  name: SelectAsync
  nameWithType: DbHelperExensions.SelectAsync
  fullName: Tool.SqlCore.DbHelperExensions.SelectAsync
- uid: System.Threading.Tasks.Task{System.Data.DataTable}
  commentId: T:System.Threading.Tasks.Task{System.Data.DataTable}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<DataTable>
  nameWithType: Task<DataTable>
  fullName: System.Threading.Tasks.Task<System.Data.DataTable>
  nameWithType.vb: Task(Of DataTable)
  fullName.vb: System.Threading.Tasks.Task(Of System.Data.DataTable)
  name.vb: Task(Of DataTable)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Data.DataTable
    name: DataTable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.datatable
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Data.DataTable
    name: DataTable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.datatable
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Tool.SqlCore.DbHelperExensions.SelectDictionaryAsync*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.SelectDictionaryAsync
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_SelectDictionaryAsync_Tool_SqlCore_DbHelper_System_String_System_Object_
  name: SelectDictionaryAsync
  nameWithType: DbHelperExensions.SelectDictionaryAsync
  fullName: Tool.SqlCore.DbHelperExensions.SelectDictionaryAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IList<IDictionary<string, object>>>
  nameWithType: Task<IList<IDictionary<string, object>>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, object>>>
  nameWithType.vb: Task(Of IList(Of IDictionary(Of String, Object)))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of System.Collections.Generic.IDictionary(Of String, Object)))
  name.vb: Task(Of IList(Of IDictionary(Of String, Object)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: )
- uid: Tool.SqlCore.DbHelperExensions.SelectArrayAsync*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.SelectArrayAsync
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_SelectArrayAsync_Tool_SqlCore_DbHelper_System_String_System_Object_
  name: SelectArrayAsync
  nameWithType: DbHelperExensions.SelectArrayAsync
  fullName: Tool.SqlCore.DbHelperExensions.SelectArrayAsync
- uid: System.Threading.Tasks.Task{System.Collections.ArrayList}
  commentId: T:System.Threading.Tasks.Task{System.Collections.ArrayList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ArrayList>
  nameWithType: Task<ArrayList>
  fullName: System.Threading.Tasks.Task<System.Collections.ArrayList>
  nameWithType.vb: Task(Of ArrayList)
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.ArrayList)
  name.vb: Task(Of ArrayList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.ArrayList
    name: ArrayList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.arraylist
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.ArrayList
    name: ArrayList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.arraylist
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{{T}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IList<T>>
  nameWithType: Task<IList<T>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<T>>
  nameWithType.vb: Task(Of IList(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of T))
  name.vb: Task(Of IList(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{System.Data.DataSet}
  commentId: T:System.Threading.Tasks.Task{System.Data.DataSet}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<DataSet>
  nameWithType: Task<DataSet>
  fullName: System.Threading.Tasks.Task<System.Data.DataSet>
  nameWithType.vb: Task(Of DataSet)
  fullName.vb: System.Threading.Tasks.Task(Of System.Data.DataSet)
  name.vb: Task(Of DataSet)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Data.DataSet
    name: DataSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.dataset
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Data.DataSet
    name: DataSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.dataset
  - name: )
- uid: Tool.SqlCore.DbHelperExensions.InsertAsync*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.InsertAsync
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_InsertAsync__1_Tool_SqlCore_DbHelper_System_Object_
  name: InsertAsync
  nameWithType: DbHelperExensions.InsertAsync
  fullName: Tool.SqlCore.DbHelperExensions.InsertAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Tool.SqlCore.DbHelperExensions.UpdateAsync*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.UpdateAsync
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_UpdateAsync__1_Tool_SqlCore_DbHelper_System_String_System_Object___
  name: UpdateAsync
  nameWithType: DbHelperExensions.UpdateAsync
  fullName: Tool.SqlCore.DbHelperExensions.UpdateAsync
- uid: Tool.SqlCore.DbHelperExensions.DeleteAsync*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.DeleteAsync
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_DeleteAsync__1_Tool_SqlCore_DbHelper_System_String_System_Object_
  name: DeleteAsync
  nameWithType: DbHelperExensions.DeleteAsync
  fullName: Tool.SqlCore.DbHelperExensions.DeleteAsync
- uid: Tool.SqlCore.SqlTextParameter
  commentId: T:Tool.SqlCore.SqlTextParameter
  parent: Tool.SqlCore
  href: Tool.SqlCore.SqlTextParameter.html
  name: SqlTextParameter
  nameWithType: SqlTextParameter
  fullName: Tool.SqlCore.SqlTextParameter
- uid: Tool.SqlCore.DbHelperExensions.GetTextParameter*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.GetTextParameter
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_GetTextParameter_Tool_SqlCore_DbHelper_System_String_System_Object_
  name: GetTextParameter
  nameWithType: DbHelperExensions.GetTextParameter
  fullName: Tool.SqlCore.DbHelperExensions.GetTextParameter
- uid: Tool.SqlCore.DbHelperExensions.WhereStr*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.WhereStr
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_WhereStr_System_String_
  name: WhereStr
  nameWithType: DbHelperExensions.WhereStr
  fullName: Tool.SqlCore.DbHelperExensions.WhereStr
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Tool.SqlCore.DbHelperExensions.GetInsertParams*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.GetInsertParams
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_GetInsertParams_Tool_SqlCore_DbHelper_System_Collections_Generic_IDictionary_System_String_System_Object__System_String__System_String__
  name: GetInsertParams
  nameWithType: DbHelperExensions.GetInsertParams
  fullName: Tool.SqlCore.DbHelperExensions.GetInsertParams
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.List{System.Data.Common.DbParameter}
  commentId: T:System.Collections.Generic.List{System.Data.Common.DbParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<DbParameter>
  nameWithType: List<DbParameter>
  fullName: System.Collections.Generic.List<System.Data.Common.DbParameter>
  nameWithType.vb: List(Of DbParameter)
  fullName.vb: System.Collections.Generic.List(Of System.Data.Common.DbParameter)
  name.vb: List(Of DbParameter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Data.Common.DbParameter
    name: DbParameter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.common.dbparameter
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Data.Common.DbParameter
    name: DbParameter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.common.dbparameter
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Tool.SqlCore.DbHelperExensions.GetUpdateParams*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.GetUpdateParams
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_GetUpdateParams_Tool_SqlCore_DbHelper_System_Collections_Generic_IDictionary_System_String_System_Object__System_String__
  name: GetUpdateParams
  nameWithType: DbHelperExensions.GetUpdateParams
  fullName: Tool.SqlCore.DbHelperExensions.GetUpdateParams
- uid: Tool.SqlCore.DbHelperExensions.GetReader*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.GetReader
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_GetReader__1
  name: GetReader
  nameWithType: DbHelperExensions.GetReader
  fullName: Tool.SqlCore.DbHelperExensions.GetReader
- uid: System.Func{System.Data.Common.DbDataReader,{T}}
  commentId: T:System.Func{System.Data.Common.DbDataReader,``0}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<DbDataReader, T>
  nameWithType: Func<DbDataReader, T>
  fullName: System.Func<System.Data.Common.DbDataReader, T>
  nameWithType.vb: Func(Of DbDataReader, T)
  fullName.vb: System.Func(Of System.Data.Common.DbDataReader, T)
  name.vb: Func(Of DbDataReader, T)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.common.dbdatareader
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.common.dbdatareader
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Data.Common.DbDataReader
  commentId: T:System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.common.dbdatareader
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: Tool.SqlCore.DbHelperExensions.GetListHash*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.GetListHash
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_GetListHash_System_Data_Common_DbDataReader_System_Boolean_
  name: GetListHash
  nameWithType: DbHelperExensions.GetListHash
  fullName: Tool.SqlCore.DbHelperExensions.GetListHash
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
  - name: .
  - uid: System.Data.Common
    name: Common
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.common
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
  - name: .
  - uid: System.Data.Common
    name: Common
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.common
- uid: Tool.SqlCore.DbHelperExensions.GetListHashAsync*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.GetListHashAsync
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_GetListHashAsync_System_Data_Common_DbDataReader_System_Boolean_
  name: GetListHashAsync
  nameWithType: DbHelperExensions.GetListHashAsync
  fullName: Tool.SqlCore.DbHelperExensions.GetListHashAsync
- uid: Tool.SqlCore.DbHelperExensions.GetReaderArray*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.GetReaderArray
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_GetReaderArray_System_Data_Common_DbDataReader_System_Boolean_
  name: GetReaderArray
  nameWithType: DbHelperExensions.GetReaderArray
  fullName: Tool.SqlCore.DbHelperExensions.GetReaderArray
- uid: Tool.SqlCore.DbHelperExensions.GetReaderArrayAsync*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.GetReaderArrayAsync
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_GetReaderArrayAsync_System_Data_Common_DbDataReader_System_Boolean_
  name: GetReaderArrayAsync
  nameWithType: DbHelperExensions.GetReaderArrayAsync
  fullName: Tool.SqlCore.DbHelperExensions.GetReaderArrayAsync
- uid: Tool.SqlCore.DbHelperExensions.GetDataSet*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.GetDataSet
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_GetDataSet_System_Data_Common_DbDataReader_
  name: GetDataSet
  nameWithType: DbHelperExensions.GetDataSet
  fullName: Tool.SqlCore.DbHelperExensions.GetDataSet
- uid: Tool.SqlCore.DbHelperExensions.GetDataTable*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.GetDataTable
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_GetDataTable_System_Data_Common_DbDataReader_
  name: GetDataTable
  nameWithType: DbHelperExensions.GetDataTable
  fullName: Tool.SqlCore.DbHelperExensions.GetDataTable
- uid: Tool.SqlCore.DbHelperExensions.GetDataSetAsync*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.GetDataSetAsync
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_GetDataSetAsync_System_Data_Common_DbDataReader_
  name: GetDataSetAsync
  nameWithType: DbHelperExensions.GetDataSetAsync
  fullName: Tool.SqlCore.DbHelperExensions.GetDataSetAsync
- uid: Tool.SqlCore.DbHelperExensions.GetDataTableAsync*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.GetDataTableAsync
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_GetDataTableAsync_System_Data_Common_DbDataReader_
  name: GetDataTableAsync
  nameWithType: DbHelperExensions.GetDataTableAsync
  fullName: Tool.SqlCore.DbHelperExensions.GetDataTableAsync
- uid: Tool.SqlCore.DbHelperExensions.GetDataColumnSchema*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.GetDataColumnSchema
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_GetDataColumnSchema_System_Data_Common_DbDataReader_
  name: GetDataColumnSchema
  nameWithType: DbHelperExensions.GetDataColumnSchema
  fullName: Tool.SqlCore.DbHelperExensions.GetDataColumnSchema
- uid: Tool.SqlCore.DbHelperExensions.GetDataColumnSchemaAsync*
  commentId: Overload:Tool.SqlCore.DbHelperExensions.GetDataColumnSchemaAsync
  href: Tool.SqlCore.DbHelperExensions.html#Tool_SqlCore_DbHelperExensions_GetDataColumnSchemaAsync_System_Data_Common_DbDataReader_
  name: GetDataColumnSchemaAsync
  nameWithType: DbHelperExensions.GetDataColumnSchemaAsync
  fullName: Tool.SqlCore.DbHelperExensions.GetDataColumnSchemaAsync
