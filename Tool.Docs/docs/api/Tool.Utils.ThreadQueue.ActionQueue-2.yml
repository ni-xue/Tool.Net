### YamlMime:ManagedReference
items:
- uid: Tool.Utils.ThreadQueue.ActionQueue`2
  commentId: T:Tool.Utils.ThreadQueue.ActionQueue`2
  id: ActionQueue`2
  parent: Tool.Utils.ThreadQueue
  children:
  - Tool.Utils.ThreadQueue.ActionQueue`2.Add(System.Action{`0},`0)
  - Tool.Utils.ThreadQueue.ActionQueue`2.Add(System.Func{`0,System.Threading.Tasks.ValueTask{`1}},`0)
  - Tool.Utils.ThreadQueue.ActionQueue`2.Add(Tool.Utils.ThreadQueue.WaitAction{`0,`1})
  - Tool.Utils.ThreadQueue.ActionQueue`2.ContinueWith
  - Tool.Utils.ThreadQueue.ActionQueue`2.IsContinueWith
  - Tool.Utils.ThreadQueue.ActionQueue`2.WaitTimeout
  langs:
  - csharp
  - vb
  name: ActionQueue<T, TResult>
  nameWithType: ActionQueue<T, TResult>
  fullName: Tool.Utils.ThreadQueue.ActionQueue<T, TResult>
  type: Class
  source:
    remote:
      path: Tool.Net/Utils/ThreadQueue/ActionQueue.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: ActionQueue
    path: ../../Tool.Net/Utils/ThreadQueue/ActionQueue.cs
    startLine: 13
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.ThreadQueue
  summary: 一个(公共线程安全)消息队列任务模型
  remarks: 代码由逆血提供支持
  example: []
  syntax:
    content: public static class ActionQueue<T, TResult>
    typeParameters:
    - id: T
    - id: TResult
    content.vb: Public Module ActionQueue(Of T, TResult)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ActionQueue(Of T, TResult)
  fullName.vb: Tool.Utils.ThreadQueue.ActionQueue(Of T, TResult)
  name.vb: ActionQueue(Of T, TResult)
- uid: Tool.Utils.ThreadQueue.ActionQueue`2.WaitTimeout
  commentId: F:Tool.Utils.ThreadQueue.ActionQueue`2.WaitTimeout
  id: WaitTimeout
  parent: Tool.Utils.ThreadQueue.ActionQueue`2
  langs:
  - csharp
  - vb
  name: WaitTimeout
  nameWithType: ActionQueue<T, TResult>.WaitTimeout
  fullName: Tool.Utils.ThreadQueue.ActionQueue<T, TResult>.WaitTimeout
  type: Field
  source:
    remote:
      path: Tool.Net/Utils/ThreadQueue/ActionQueue.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: WaitTimeout
    path: ../../Tool.Net/Utils/ThreadQueue/ActionQueue.cs
    startLine: 18
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.ThreadQueue
  summary: 分配的任务队列线程完成后最大保留时间
  example: []
  syntax:
    content: public const int WaitTimeout = 60000
    return:
      type: System.Int32
    content.vb: Public Const WaitTimeout As Integer = 60000
  nameWithType.vb: ActionQueue(Of T, TResult).WaitTimeout
  fullName.vb: Tool.Utils.ThreadQueue.ActionQueue(Of T, TResult).WaitTimeout
- uid: Tool.Utils.ThreadQueue.ActionQueue`2.ContinueWith
  commentId: E:Tool.Utils.ThreadQueue.ActionQueue`2.ContinueWith
  id: ContinueWith
  parent: Tool.Utils.ThreadQueue.ActionQueue`2
  langs:
  - csharp
  - vb
  name: ContinueWith
  nameWithType: ActionQueue<T, TResult>.ContinueWith
  fullName: Tool.Utils.ThreadQueue.ActionQueue<T, TResult>.ContinueWith
  type: Event
  source:
    remote:
      path: Tool.Net/Utils/ThreadQueue/ActionQueue.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: ContinueWith
    path: ../../Tool.Net/Utils/ThreadQueue/ActionQueue.cs
    startLine: 30
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.ThreadQueue
  summary: 注册完成任务后触发的事件
  example: []
  syntax:
    content: public static event Action<WaitAction<T, TResult>> ContinueWith
    return:
      type: System.Action{Tool.Utils.ThreadQueue.WaitAction{{T},{TResult}}}
    content.vb: Public Shared Event ContinueWith As Action(Of WaitAction(Of T, TResult))
  nameWithType.vb: ActionQueue(Of T, TResult).ContinueWith
  fullName.vb: Tool.Utils.ThreadQueue.ActionQueue(Of T, TResult).ContinueWith
- uid: Tool.Utils.ThreadQueue.ActionQueue`2.IsContinueWith
  commentId: P:Tool.Utils.ThreadQueue.ActionQueue`2.IsContinueWith
  id: IsContinueWith
  parent: Tool.Utils.ThreadQueue.ActionQueue`2
  langs:
  - csharp
  - vb
  name: IsContinueWith
  nameWithType: ActionQueue<T, TResult>.IsContinueWith
  fullName: Tool.Utils.ThreadQueue.ActionQueue<T, TResult>.IsContinueWith
  type: Property
  source:
    remote:
      path: Tool.Net/Utils/ThreadQueue/ActionQueue.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: IsContinueWith
    path: ../../Tool.Net/Utils/ThreadQueue/ActionQueue.cs
    startLine: 35
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.ThreadQueue
  summary: 表示当前事件是否已经注册
  example: []
  syntax:
    content: public static bool IsContinueWith { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsContinueWith As Boolean
  overload: Tool.Utils.ThreadQueue.ActionQueue`2.IsContinueWith*
  nameWithType.vb: ActionQueue(Of T, TResult).IsContinueWith
  fullName.vb: Tool.Utils.ThreadQueue.ActionQueue(Of T, TResult).IsContinueWith
- uid: Tool.Utils.ThreadQueue.ActionQueue`2.Add(System.Action{`0},`0)
  commentId: M:Tool.Utils.ThreadQueue.ActionQueue`2.Add(System.Action{`0},`0)
  id: Add(System.Action{`0},`0)
  parent: Tool.Utils.ThreadQueue.ActionQueue`2
  langs:
  - csharp
  - vb
  name: Add(Action<T>, T)
  nameWithType: ActionQueue<T, TResult>.Add(Action<T>, T)
  fullName: Tool.Utils.ThreadQueue.ActionQueue<T, TResult>.Add(System.Action<T>, T)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/ThreadQueue/ActionQueue.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: Add
    path: ../../Tool.Net/Utils/ThreadQueue/ActionQueue.cs
    startLine: 92
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.ThreadQueue
  summary: 添加无返回值任务
  example: []
  syntax:
    content: public static WaitAction<T, TResult> Add(Action<T> action, T state)
    parameters:
    - id: action
      type: System.Action{{T}}
      description: 任务
    - id: state
      type: '{T}'
      description: 参数
    return:
      type: Tool.Utils.ThreadQueue.WaitAction{{T},{TResult}}
      description: 获取<xref href="Tool.Utils.ThreadQueue.WaitAction%602" data-throw-if-not-resolved="false"></xref>对象
    content.vb: Public Shared Function Add(action As Action(Of T), state As T) As WaitAction(Of T, TResult)
  overload: Tool.Utils.ThreadQueue.ActionQueue`2.Add*
  nameWithType.vb: ActionQueue(Of T, TResult).Add(Action(Of T), T)
  fullName.vb: Tool.Utils.ThreadQueue.ActionQueue(Of T, TResult).Add(System.Action(Of T), T)
  name.vb: Add(Action(Of T), T)
- uid: Tool.Utils.ThreadQueue.ActionQueue`2.Add(System.Func{`0,System.Threading.Tasks.ValueTask{`1}},`0)
  commentId: M:Tool.Utils.ThreadQueue.ActionQueue`2.Add(System.Func{`0,System.Threading.Tasks.ValueTask{`1}},`0)
  id: Add(System.Func{`0,System.Threading.Tasks.ValueTask{`1}},`0)
  parent: Tool.Utils.ThreadQueue.ActionQueue`2
  langs:
  - csharp
  - vb
  name: Add(Func<T, ValueTask<TResult>>, T)
  nameWithType: ActionQueue<T, TResult>.Add(Func<T, ValueTask<TResult>>, T)
  fullName: Tool.Utils.ThreadQueue.ActionQueue<T, TResult>.Add(System.Func<T, System.Threading.Tasks.ValueTask<TResult>>, T)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/ThreadQueue/ActionQueue.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: Add
    path: ../../Tool.Net/Utils/ThreadQueue/ActionQueue.cs
    startLine: 106
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.ThreadQueue
  summary: 添加有返回值任务
  example: []
  syntax:
    content: public static WaitAction<T, TResult> Add(Func<T, ValueTask<TResult>> func, T state)
    parameters:
    - id: func
      type: System.Func{{T},System.Threading.Tasks.ValueTask{{TResult}}}
      description: 任务
    - id: state
      type: '{T}'
      description: 参数
    return:
      type: Tool.Utils.ThreadQueue.WaitAction{{T},{TResult}}
      description: 获取<xref href="Tool.Utils.ThreadQueue.WaitAction%602" data-throw-if-not-resolved="false"></xref>对象
    content.vb: Public Shared Function Add(func As Func(Of T, ValueTask(Of TResult)), state As T) As WaitAction(Of T, TResult)
  overload: Tool.Utils.ThreadQueue.ActionQueue`2.Add*
  nameWithType.vb: ActionQueue(Of T, TResult).Add(Func(Of T, ValueTask(Of TResult)), T)
  fullName.vb: Tool.Utils.ThreadQueue.ActionQueue(Of T, TResult).Add(System.Func(Of T, System.Threading.Tasks.ValueTask(Of TResult)), T)
  name.vb: Add(Func(Of T, ValueTask(Of TResult)), T)
- uid: Tool.Utils.ThreadQueue.ActionQueue`2.Add(Tool.Utils.ThreadQueue.WaitAction{`0,`1})
  commentId: M:Tool.Utils.ThreadQueue.ActionQueue`2.Add(Tool.Utils.ThreadQueue.WaitAction{`0,`1})
  id: Add(Tool.Utils.ThreadQueue.WaitAction{`0,`1})
  parent: Tool.Utils.ThreadQueue.ActionQueue`2
  langs:
  - csharp
  - vb
  name: Add(WaitAction<T, TResult>)
  nameWithType: ActionQueue<T, TResult>.Add(WaitAction<T, TResult>)
  fullName: Tool.Utils.ThreadQueue.ActionQueue<T, TResult>.Add(Tool.Utils.ThreadQueue.WaitAction<T, TResult>)
  type: Method
  source:
    remote:
      path: Tool.Net/Utils/ThreadQueue/ActionQueue.cs
      branch: master
      repo: https://github.com/ni-xue/Tool.Net
    id: Add
    path: ../../Tool.Net/Utils/ThreadQueue/ActionQueue.cs
    startLine: 118
  assemblies:
  - Tool.Net
  namespace: Tool.Utils.ThreadQueue
  summary: 添加队列任务
  example: []
  syntax:
    content: public static void Add(WaitAction<T, TResult> waitaction)
    parameters:
    - id: waitaction
      type: Tool.Utils.ThreadQueue.WaitAction{{T},{TResult}}
      description: 任务对象
    content.vb: Public Shared Sub Add(waitaction As WaitAction(Of T, TResult))
  overload: Tool.Utils.ThreadQueue.ActionQueue`2.Add*
  nameWithType.vb: ActionQueue(Of T, TResult).Add(WaitAction(Of T, TResult))
  fullName.vb: Tool.Utils.ThreadQueue.ActionQueue(Of T, TResult).Add(Tool.Utils.ThreadQueue.WaitAction(Of T, TResult))
  name.vb: Add(WaitAction(Of T, TResult))
references:
- uid: Tool.Utils.ThreadQueue
  commentId: N:Tool.Utils.ThreadQueue
  href: Tool.html
  name: Tool.Utils.ThreadQueue
  nameWithType: Tool.Utils.ThreadQueue
  fullName: Tool.Utils.ThreadQueue
  spec.csharp:
  - uid: Tool
    name: Tool
    href: Tool.html
  - name: .
  - uid: Tool.Utils
    name: Utils
    href: Tool.Utils.html
  - name: .
  - uid: Tool.Utils.ThreadQueue
    name: ThreadQueue
    href: Tool.Utils.ThreadQueue.html
  spec.vb:
  - uid: Tool
    name: Tool
    href: Tool.html
  - name: .
  - uid: Tool.Utils
    name: Utils
    href: Tool.Utils.html
  - name: .
  - uid: Tool.Utils.ThreadQueue
    name: ThreadQueue
    href: Tool.Utils.ThreadQueue.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Action{Tool.Utils.ThreadQueue.WaitAction{{T},{TResult}}}
  commentId: T:System.Action{Tool.Utils.ThreadQueue.WaitAction{`0,`1}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<WaitAction<T, TResult>>
  nameWithType: Action<WaitAction<T, TResult>>
  fullName: System.Action<Tool.Utils.ThreadQueue.WaitAction<T, TResult>>
  nameWithType.vb: Action(Of WaitAction(Of T, TResult))
  fullName.vb: System.Action(Of Tool.Utils.ThreadQueue.WaitAction(Of T, TResult))
  name.vb: Action(Of WaitAction(Of T, TResult))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Tool.Utils.ThreadQueue.WaitAction`2
    name: WaitAction
    href: Tool.Utils.ThreadQueue.WaitAction-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Tool.Utils.ThreadQueue.WaitAction`2
    name: WaitAction
    href: Tool.Utils.ThreadQueue.WaitAction-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Tool.Utils.ThreadQueue.ActionQueue`2.IsContinueWith*
  commentId: Overload:Tool.Utils.ThreadQueue.ActionQueue`2.IsContinueWith
  href: Tool.Utils.ThreadQueue.ActionQueue-2.html#Tool_Utils_ThreadQueue_ActionQueue_2_IsContinueWith
  name: IsContinueWith
  nameWithType: ActionQueue<T, TResult>.IsContinueWith
  fullName: Tool.Utils.ThreadQueue.ActionQueue<T, TResult>.IsContinueWith
  nameWithType.vb: ActionQueue(Of T, TResult).IsContinueWith
  fullName.vb: Tool.Utils.ThreadQueue.ActionQueue(Of T, TResult).IsContinueWith
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Tool.Utils.ThreadQueue.WaitAction`2
  commentId: T:Tool.Utils.ThreadQueue.WaitAction`2
  href: Tool.Utils.ThreadQueue.WaitAction-2.html
  name: WaitAction<T, TResult>
  nameWithType: WaitAction<T, TResult>
  fullName: Tool.Utils.ThreadQueue.WaitAction<T, TResult>
  nameWithType.vb: WaitAction(Of T, TResult)
  fullName.vb: Tool.Utils.ThreadQueue.WaitAction(Of T, TResult)
  name.vb: WaitAction(Of T, TResult)
  spec.csharp:
  - uid: Tool.Utils.ThreadQueue.WaitAction`2
    name: WaitAction
    href: Tool.Utils.ThreadQueue.WaitAction-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: Tool.Utils.ThreadQueue.WaitAction`2
    name: WaitAction
    href: Tool.Utils.ThreadQueue.WaitAction-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Tool.Utils.ThreadQueue.ActionQueue`2.Add*
  commentId: Overload:Tool.Utils.ThreadQueue.ActionQueue`2.Add
  href: Tool.Utils.ThreadQueue.ActionQueue-2.html#Tool_Utils_ThreadQueue_ActionQueue_2_Add_System_Action__0___0_
  name: Add
  nameWithType: ActionQueue<T, TResult>.Add
  fullName: Tool.Utils.ThreadQueue.ActionQueue<T, TResult>.Add
  nameWithType.vb: ActionQueue(Of T, TResult).Add
  fullName.vb: Tool.Utils.ThreadQueue.ActionQueue(Of T, TResult).Add
- uid: System.Action{{T}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Tool.Utils.ThreadQueue.WaitAction{{T},{TResult}}
  commentId: T:Tool.Utils.ThreadQueue.WaitAction{`0,`1}
  parent: Tool.Utils.ThreadQueue
  definition: Tool.Utils.ThreadQueue.WaitAction`2
  href: Tool.Utils.ThreadQueue.WaitAction-2.html
  name: WaitAction<T, TResult>
  nameWithType: WaitAction<T, TResult>
  fullName: Tool.Utils.ThreadQueue.WaitAction<T, TResult>
  nameWithType.vb: WaitAction(Of T, TResult)
  fullName.vb: Tool.Utils.ThreadQueue.WaitAction(Of T, TResult)
  name.vb: WaitAction(Of T, TResult)
  spec.csharp:
  - uid: Tool.Utils.ThreadQueue.WaitAction`2
    name: WaitAction
    href: Tool.Utils.ThreadQueue.WaitAction-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: Tool.Utils.ThreadQueue.WaitAction`2
    name: WaitAction
    href: Tool.Utils.ThreadQueue.WaitAction-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func{{T},System.Threading.Tasks.ValueTask{{TResult}}}
  commentId: T:System.Func{`0,System.Threading.Tasks.ValueTask{`1}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, ValueTask<TResult>>
  nameWithType: Func<T, ValueTask<TResult>>
  fullName: System.Func<T, System.Threading.Tasks.ValueTask<TResult>>
  nameWithType.vb: Func(Of T, ValueTask(Of TResult))
  fullName.vb: System.Func(Of T, System.Threading.Tasks.ValueTask(Of TResult))
  name.vb: Func(Of T, ValueTask(Of TResult))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
